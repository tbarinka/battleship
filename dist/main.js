(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>l});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([e.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#battleShipContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square, .aiSquare {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .aiSquare:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#battleShipContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square, .aiSquare {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .aiSquare:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}"],sourceRoot:""}]);const l=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(o[s]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);i&&o[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */"),o=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var r={},o=[],l=0;l<e.length;l++){var s=e[l],d=i.base?s[0]+i.base:s[0],p=r[d]||0,c="".concat(d," ").concat(p);r[d]=p+1;var A=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var h=a(u,i);i.byIndex=l,n.splice(l,0,{identifier:c,updater:h,references:1})}o.push(c)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var l=t(r[o]);n[l].references--}for(var s=i(e,a),d=0;d<r.length;d++){var p=t(r[d]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}r=s}}},569:e=>{var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(i){var a=n[i];if(void 0!==a)return a.exports;var r=n[i]={id:i,exports:{}};return e[i](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),i=t(795),a=t.n(i),r=t(569),o=t.n(r),l=t(565),s=t.n(l),d=t(216),p=t.n(d),c=t(589),A=t.n(c),u=t(426),h={};h.styleTagTransform=A(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=p(),n()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(e,n,t,i){this.size=e,this.hits=[],this.xStart=n,this.yStart=t,this.direction=null}hit(){return this.hits.push("hit"),this.hits.length==this.size?this.isSunk():this.hit}isSunk(){return"sunk!"}}class m{constructor(e,n){this.X=e,this.Y=n,this.isHit=!1,this.containsShip=!1,this.ship=null}}class f{constructor(e){this.xAxis=["A","B","C","D","E","F","G","H","I","J"],this.yAxis=[1,2,3,4,5,6,7,8,9,10],this.grid=this.makeGrid()}receiveAttack(e,n){let t=this.grid.find((t=>t.X==e&&t.Y==n));return t.isHit=!0,1==t.containsShip?(t.ship.hit(),t.ship):t.ship}makeGrid(){let e=[];for(let n=0;n<this.xAxis.length;n++)for(let t=0;t<this.yAxis.length;t++){let i=new m(this.xAxis[n],this.yAxis[t]);e.push(i)}return e}populateShip(e,n,t,i){if(e>1){if("north"==i&&t<e)return"overflow!";if("south"==i&&t-1>10-e)return"overflow!";if("west"==i&&this.xAxis.indexOf(n)<e-1)return"overflow!";if("east"==i&&this.xAxis.indexOf(n)>10-e)return"overflow!"}let a=new C(e,n,t,i);a.direction=i;let r=this.grid.find((e=>e.X==a.xStart&&e.Y==a.yStart)),o=[];r.containsShip=!0,r.ship=a,o.push(r);let l=this.grid.indexOf(r);for(;e>1;){if("north"==i){t-=1;let n=this.grid.find((e=>e.X==a.xStart&&e.Y==t));n.containsShip=!0,n.ship=a,o.push(n),e-=1}if("south"==i){l+=1;let n=this.grid[l];n.containsShip=!0,n.ship=a,o.push(n),e-=1}else if("east"==i){n=this.xAxis[this.xAxis.indexOf(n)+1];let t=this.grid.find((e=>e.X==n&&e.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),e-=1}else if("west"==i){n=this.xAxis[this.xAxis.indexOf(n)-1];let t=this.grid.find((e=>e.X==n&&e.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),e-=1}}return o}depopulateShip(e,n,t,i){let a=new C(e,n,t),r=this.grid.find((e=>e.X==a.xStart&&e.Y==a.yStart)),o=[];r.containsShip=!1,r.ship=null,o.push(r);let l=this.grid.indexOf(r);for(;e>1;){if("north"==i){t-=1;let n=this.grid.find((e=>e.X==a.xStart&&e.Y==t));n.containsShip=!1,n.ship=null,o.push(n),e-=1}if("south"==i){l+=1;let n=this.grid[l];n.containsShip=!1,n.ship=null,o.push(n),e-=1}else if("east"==i){n=this.xAxis[this.xAxis.indexOf(n)+1];let t=this.grid.find((e=>e.X==n&&e.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),e-=1}else if("west"==i){n=this.xAxis[this.xAxis.indexOf(n)-1];let t=this.grid.find((e=>e.X==n&&e.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),e-=1}}return o}}let x=new f,g=new f,B="taylor",I="computer",y=new class{constructor(e,n,t,i){this.playerBoard=e,this.player=n,this.aiBoard=t,this.ai=i,H("Player",0,"AI",0)}reloadBoards(){this.playerBoard=new f,this.aiBoard=new f;let e=document.getElementById("container");e.removeChild(e.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}populatePlayer(e,n,t,i){this.playerBoard.populateShip(e,n,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}depopulatePlayer(e,n,t,i){this.playerBoard.depopulateShip(e,n,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}simplePopulate(){this.playerBoard.populateShip(2,"I",4,"east"),this.playerBoard.populateShip(4,"C",5,"east"),this.playerBoard.populateShip(3,"J",6,"south"),this.playerBoard.populateShip(3,"B",8,"south"),this.playerBoard.populateShip(2,"E",9,"east");let e=document.getElementById("container");e.removeChild(e.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}attackAI(e,n){this.aiBoard.receiveAttack(e,n),container.removeChild(container.firstChild.nextSibling),R(this.playerBoard,this.aiBoard),this.keepScore()}attackPlayer(e,n){this.playerBoard.receiveAttack(e,n),container.removeChild(container.firstChild.nextSibling),R(this.playerBoard,this.aiBoard),this.keepScore()}produceArrayOfPlayerShips(){let e=[];this.playerBoard.grid.forEach((n=>{null!=n.ship&&e.push(n.ship)}));let n=[];return e.forEach((e=>{n.includes(e)||n.push(e)})),n}produceArrayOfAiShips(){let e=[];this.aiBoard.grid.forEach((n=>{null!=n.ship&&e.push(n.ship)}));let n=[];return e.forEach((e=>{n.includes(e)||n.push(e)})),n}keepScore(){let e=this.produceArrayOfPlayerShips(),n=this.produceArrayOfAiShips(),t=0,i=0;e.forEach((e=>{e.hits.length==e.size&&(t+=1)})),n.forEach((e=>{e.hits.length==e.size&&(i+=1)})),container.removeChild(container.firstChild),H("Player",i,"AI",t),console.log("aiTally = "+i),console.log("playerTally ="+t),5==i&&M("You win!"),5==t&&M("AI wins!");let a=document.querySelectorAll(".aiSquare");console.log(a)}copyAIgrid(){return this.aiBoard.grid.slice()}randomParameterSelector(e,n){let t=e[Math.floor(Math.random()*e.length)],i=t.X,a=t.Y,r=e.indexOf(t);console.log(r),console.log(t);let o=this.randomDirectionProducer();e.splice(r,1),e.splice(r+1,1),e.splice(r-1,1),e.splice(r+10,1),e.splice(r-10,1),n>1&&"south"==o&&e.splice(r+2,1),n>1&&"north"==o&&e.splice(r-2,1),n>1&&"east"==o&&e.splice(r+20),n>1&&"west"==o&&e.splice(r-20,1),n>2&&"south"==o&&e.splice(r+3,1),n>2&&"north"==o&&e.splice(r-3,1),n>2&&"east"==o&&e.splice(r-30,1),n>2&&"west"==o&&e.splice(r+30,1),"overflow!"==this.aiBoard.populateShip(n,i,a,o)?this.randomParameterSelector(e,n):this.aiBoard.populateShip(n,i,a,o)}findAdjacentXCoordinates(e,n,t){return"A"==e?["overflow",t.find((e=>"B"==e.X&&e.Y==n))]:"B"==e?[t.find((e=>"A"==e.X&&e.Y==n)),t.find((e=>"C"==e.X&&e.Y==n))]:"C"==e?[t.find((e=>"B"==e.X&&e.Y==n)),t.find((e=>"D"==e.X&&e.Y==n))]:"D"==e?[t.find((e=>"C"==e.X&&e.Y==n)),t.find((e=>"E"==e.X&&e.Y==n))]:"E"==e?[t.find((e=>"D"==e.X&&e.Y==n)),t.find((e=>"F"==e.X&&e.Y==n))]:"F"==e?[t.find((e=>"E"==e.X&&e.Y==n)),t.find((e=>"G"==e.X&&e.Y==n))]:"G"==e?[t.find((e=>"F"==e.X&&e.Y==n)),t.find((e=>"H"==e.X&&e.Y==n))]:"H"==e?[t.find((e=>"G"==e.X&&e.Y==n)),t.find((e=>"I"==e.X&&e.Y==n))]:"I"==e?[t.find((e=>"H"==e.X&&e.Y==n)),t.find((e=>"J"==e.X&&e.Y==n))]:"J"==e?[t.find((e=>"I"==e.X&&e.Y==n)),"overflow"]:void 0}randomDirectionProducer(){let e=Math.random();return e>=.75?"east":e<=.25?"west":e>.25&&e<.5?"south":"north"}simplePopulateAI(){let e=this.copyAIgrid();this.randomParameterSelector(e,2),console.log(e),this.randomParameterSelector(e,2),console.log(e),this.randomParameterSelector(e,3),console.log(e),this.randomParameterSelector(e,3),console.log(e),this.randomParameterSelector(e,4),console.log(e);let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}}(x,B,g,I);const b=document.createElement("button");b.addEventListener("click",(function(){y.simplePopulate()})),b.classList.add("populateButton"),b.textContent="Populate Player";const v=document.createElement("button");v.addEventListener("click",k),v.classList.add("populateButton"),v.textContent="Populate AI";const S=document.createElement("button");S.addEventListener("click",q),S.classList.add("populateButton"),S.textContent="Attack AI";const E=document.createElement("button");function w(){N(document.getElementById("container")),x=new f,g=new f,B="taylor",I="computer",H("Player",0,"AI",0),R(y.playerBoard,y.aiBoard),W(),ne()}function k(){y.simplePopulateAI()}function L(e,n,t,i){y.populatePlayer(e,n,t,i)}function Y(e,n,t,i){y.depopulatePlayer(e,n,t,i)}E.addEventListener("click",P),E.classList.add("populateButton"),E.textContent="Attack Player";const j=y.playerBoard.grid.slice();function q(e,n){let t=y.aiBoard.grid.find((t=>t.X==e&&t.Y==n));if(1==t.isHit&&alert("You have already attacked that square! Try another."),0==t.isHit){let i=y.aiBoard.grid.indexOf(t);j.splice(i,1),y.attackAI(e,n),setTimeout((()=>{P()}),"500")}}const X=y.playerBoard.grid.slice();function P(){if(0==X.length)return alert("game over!");let e=X[Math.floor(Math.random()*X.length)],n=e.X,t=e.Y,i=X.indexOf(e);X.splice(i,1),y.attackPlayer(n,t)}let T=document.createElement("label");T.classList.add("attackLabel"),T.textContent="Input X Coordinate: ",document.createElement("input").setAttribute("type","text");let O=document.createElement("label");function D(e,n){let t=e.grid,i=document.createElement("div");return i.classList.add("grid-container"),t.forEach((e=>{let t=function(e,n="ai"){let t=document.createElement("div");return t.classList.add("square"),1==e.isHit&&(t.style.backgroundColor="#6ee7b7"),"ai"==n&&(t.classList.remove("square"),t.classList.add("aiSquare"),t.addEventListener("click",(function(){q(e.X,e.Y)}))),1==e.isHit&&1==e.containsShip&&(t.style.backgroundColor="red",t.textContent="X"),1==e.containsShip&&(t.style.backgroundColor="red"),t}(e,n);i.appendChild(t)})),i}function z(){let e=document.createElement("div");return e.classList.add("xCoordinateContainer"),["A","B","C","D","E","F","G","H","I","J"].forEach((n=>{let t=document.createElement("div");t.classList.add("upperSquare"),t.textContent=n,e.appendChild(t)})),e}function Q(){let e=document.createElement("div");return e.classList.add("yCoordinateContainer"),[1,2,3,4,5,6,7,8,9,10].forEach((n=>{let t=document.createElement("div");t.classList.add("leftSquare"),t.textContent=n,e.appendChild(t)})),e}function R(e,n){document.getElementById("container").appendChild(function(e,n){let t=document.createElement("div");return t.classList.add("doubleBoardContainer"),t.appendChild(function(e){let n=document.createElement("div");n.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(D(e,"player")),n.appendChild(z()),n.appendChild(t),n}(e)),t.appendChild(function(e){let n=document.createElement("div");n.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(D(e)),n.appendChild(z()),n.appendChild(t),n}(n)),t}(e,n))}function Z(e,n){let t=document.createElement("div");t.classList.add("singleBoardScoreContainer");let i=document.createElement("h2"),a=document.createElement("h2");return i.textContent=e+" Score: ",t.appendChild(i),t.appendChild(a),a.textContent=n+"/5",t}function H(e,n,t,i){let a=document.createElement("div");a.classList.add("scoreKeeperContainer"),a.appendChild(Z(e,n)),a.appendChild(Z(t,i)),document.getElementById("container").prepend(a)}function M(e){let n=document.createElement("div");n.classList.add("winnerCard"),n.appendChild(function(e){let n=document.createElement("h1");return n.classList.add("winnerAnnouncementText"),n.textContent=e,n}(e)),n.appendChild(function(){let e=document.createElement("button");return e.textContent="Restart Game",e.classList.add("placementButton"),e.addEventListener("click",w),e}()),container.firstChild.appendChild(n)}O.classList.add("attackLabel"),O.textContent="Input Y Coordinate: ",document.createElement("input").setAttribute("type","text");let G=document.createElement("div");G.classList.add("placement-module-container"),G.setAttribute("id","placementContainer");let U=new f,F=[];function W(){G.appendChild(function(){let e=document.createElement("div");return e.classList.add("placementTextBox"),e.appendChild(function(e){let n=document.createElement("h1");return n.classList.add("placementTextContent"),n.setAttribute("id","placementHeading"),n.textContent="Place Your Ships!",n}()),e}()),G.appendChild(function(){let e=document.createElement("div");return e.classList.add("middleSubcontainer"),e.appendChild(function(e){let n=document.createElement("div");n.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(function(e){let n=e.grid,t=document.createElement("div");return t.classList.add("grid-container"),n.forEach((e=>{let n=function(e){let n=document.createElement("div");return n.classList.add("square"),1==e.containsShip&&(n.style.backgroundColor="red",n.addEventListener("click",(function(){let e=n.id.split(""),t=U.grid.find((n=>n.X==e[0]&&n.Y==e[1])),i=t.ship.size,a=t.ship.xStart,r=t.ship.yStart;"east"==t.ship.direction?(U.depopulateShip(i,a,r,"east"),Y(i,a,r,"east"),U.populateShip(i,a,r,"south"),L(i,a,r,"south")):"south"==t.ship.direction&&(U.depopulateShip(i,a,r,"south"),Y(i,a,r,"south"),U.populateShip(i,a,r,"east"),L(i,a,r,"east")),N(G),document.body.removeChild(G),W()}))),n.setAttribute("id",e.X+e.Y),n.addEventListener("dragover",(function(e){console.log("dragOver"),e.preventDefault()})),n.addEventListener("drop",(function(e){console.log("Drop"),e.preventDefault();let n=e.dataTransfer.getData("text"),t=(document.getElementById(n),e.target.id),i=n,a=t[0],r=t[1];if(0==t[2]){let e=[t[1],t[2]];r=e.join("")}let o=U.grid.find((e=>e.X==a&&e.Y==r));1!=o.containsShip&&(0==V?(L(i,a,r,"east"),U.populateShip(i,a,r,"east")):(L(i,a,r,"south"),U.populateShip(i,a,r,"south")),N(G),document.body.removeChild(G),F.push(i),W())})),n}(e);t.appendChild(n)})),t}(e)),n.appendChild(z()),n.appendChild(t),n}(U)),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("rightInfoSubcontainer"),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("rightInfoButtonsContainer"),e.appendChild(function(){let e=document.createElement("button");return e.classList.add("placementButton"),e.textContent="Reset Ships",e.addEventListener("click",ne),e}()),e.appendChild(function(){let e=document.createElement("button");return e.classList.add("placementButton"),e.textContent="Begin Game",e.addEventListener("click",ee),e}()),e}()),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("placementInstructionBox"),e.appendChild(function(){let e=document.createElement("div");e.classList.add("headingContainer");let n=document.createElement("h3");return n.textContent="Instructions",e.appendChild(n),e}()),e.appendChild(J("Place your ships by dragging them to your desired location.")),e.appendChild(J("Click the Rotate button to change orientation of ships waiting to be placed.")),e.appendChild(J("You can also rotate ships after placing them on the board by clicking on them.")),e.appendChild(J("Once you have placed all five ships, press the Begin Game button to start.")),e}()),e}()),e}()),G.appendChild(function(){let e=document.createElement("div");return e.classList.add("bottomSubcontainer"),e.appendChild(function(){let e=document.createElement("button");return e.textContent="Rotate",e.classList.add("placementButton"),e.setAttribute("id","rotateShipButton"),e.addEventListener("click",(()=>{document.querySelectorAll("div.ship").forEach((function(e){"column"==e.style.flexDirection?(e.style.flexDirection="row",V=0):(e.style.flexDirection="column",V=1)})),document.querySelectorAll("div.singleShipClassContainer").forEach((function(e){e.style.flexDirection=1==V?"row":"column"}))})),e}()),e.appendChild(function(){let e=document.createElement("div");e.classList.add("shipAllClassesContainer");let n=document.createElement("div");n.classList.add("singleShipClassContainer");let t=document.createElement("div");t.classList.add("singleShipClassContainer");let i=document.createElement("div");return i.classList.add("singleShipClassContainer"),1==V&&(n.style.flexDirection="row",t.style.flexDirection="row",i.style.flexDirection="row"),0==F.filter((e=>2==e)).length?(n.appendChild(_(2)),n.appendChild(_(2)),e.appendChild(n)):1==F.filter((e=>2==e)).length&&(n.appendChild(_(2)),e.appendChild(n)),0==F.filter((e=>3==e)).length?(t.appendChild(_(3)),t.appendChild(_(3)),e.appendChild(t)):1==F.filter((e=>3==e)).length&&(t.appendChild(_(3)),e.appendChild(t)),0==F.filter((e=>4==e)).length&&(i.appendChild(_(4)),e.appendChild(i)),e}()),e}()),document.body.appendChild(G)}function J(e){let n=document.createElement("p");return n.classList.add("instructionContent"),n.textContent=e,n}function N(e){for(;e.firstChild;)e.removeChild(e.firstChild)}const K="";let V=0;function _(e){let n=document.createElement("div");for(n.classList.add("ship"),n.setAttribute("draggable","true"),n.setAttribute("id",e),1==V&&(n.style.flexDirection="column"),0==V&&(n.style.flexDirection="row");e>=1;){let t=document.createElement("div");t.classList.add("placementSquare"),n.appendChild(t),e-=1}return n.addEventListener("dragstart",$),n}function $(e){e.currentTarget.classList.add("dragging"),e.dataTransfer.clearData(),e.dataTransfer.setData("text/plain",e.target.id);const n=e.dataTransfer.getData("text");K=document.getElementById(n),e.currentTarget.removeEventListener("dragend",$)}function ee(){if(5==F.length)k(),N(G),document.body.removeChild(G);else{let e=document.getElementById("placementHeading");e.textContent="Place All Ships Before Starting the Game!",e.style.color="#ef4444"}}function ne(){U=new f,function(){for(;F.length>=1;)F.pop()}(),N(G),document.body.removeChild(G),y.reloadBoards(),W()}W(),R(y.playerBoard,y.aiBoard)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,