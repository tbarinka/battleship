(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,SAAS;IACT,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;AACtB;AACA,mCAAmC;AACnC;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,4EAA4E;AAChF;AACA;IACI,WAAW;IACX,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,0BAA0B;IAC1B,eAAe;IACf,cAAc;AAClB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,SAAS;AACb;AACA;IACI,SAAS;IACT,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,YAAY;AAChB;AACA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;;AAEpB;AACA;IACI,yBAAyB;IACzB,4EAA4E;IAC5E,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,oCAAoC;IACpC,SAAS;IACT,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,QAAQ;AACZ;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;AAC3B;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,QAAQ;IACR,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;AAC7B;AACA;;AAEA;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,sBAAsB;IACtB,QAAQ;AACZ;AACA,0BAA0B;AAC1B;IACI,aAAa;IACb,QAAQ;IACR,qBAAqB;AACzB;;AAEA,iCAAiC;AACjC;IACI,aAAa;IACb,UAAU;IACV,4BAA4B;;AAEhC;AACA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;IACzB,qIAAqI;AACzI;AACA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,QAAQ;IACR,YAAY;AAChB;AACA;IACI,yBAAyB;IACzB,4EAA4E;IAC5E,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,eAAe;AACnB;AACA;;AAEA",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}"],sourceRoot:""}]);const l=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(o[d]=!0)}for(var s=0;s<n.length;s++){var p=[].concat(n[s]);i&&o[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},o=[],l=0;l<n.length;l++){var d=n[l],s=i.base?d[0]+i.base:d[0],p=r[s]||0,c="".concat(s," ").concat(p);r[s]=p+1;var A=t(c),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var h=a(u,i);i.byIndex=l,e.splice(l,0,{identifier:c,updater:h,references:1})}o.push(c)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=i(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var l=t(r[o]);e[l].references--}for(var d=i(n,a),s=0;s<r.length;s++){var p=t(r[s]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),a=t.n(i),r=t(569),o=t.n(r),l=t(565),d=t.n(l),s=t(216),p=t.n(s),c=t(589),A=t.n(c),u=t(426),h={};h.styleTagTransform=A(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=p(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n,e,t,i){this.size=n,this.hits=[],this.xStart=e,this.yStart=t,this.direction=null}hit(){return this.hits.push("hit"),this.hits.length==this.size?this.isSunk():this.hit}isSunk(){return"sunk!"}}class m{constructor(n,e){this.X=n,this.Y=e,this.isHit=!1,this.containsShip=!1,this.ship=null}}class x{constructor(n){this.xAxis=["A","B","C","D","E","F","G","H","I","J"],this.yAxis=[1,2,3,4,5,6,7,8,9,10],this.grid=this.makeGrid()}receiveAttack(n,e){let t=this.grid.find((t=>t.X==n&&t.Y==e));return t.isHit=!0,1==t.containsShip?(t.ship.hit(),t.ship):t.ship}makeGrid(){let n=[];for(let e=0;e<this.xAxis.length;e++)for(let t=0;t<this.yAxis.length;t++){let i=new m(this.xAxis[e],this.yAxis[t]);n.push(i)}return n}populateShip(n,e,t,i){if(n>1){if("north"==i&&t<n)return"overflow!";if("south"==i&&t-1>10-n)return"overflow!";if("west"==i&&this.xAxis.indexOf(e)<n-1)return"overflow!";if("east"==i&&this.xAxis.indexOf(e)>10-n)return"overflow!"}let a=new C(n,e,t,i);a.direction=i;let r=this.grid.find((n=>n.X==a.xStart&&n.Y==a.yStart)),o=[];r.containsShip=!0,r.ship=a,o.push(r);let l=this.grid.indexOf(r);for(;n>1;){if("north"==i){t-=1;let e=this.grid.find((n=>n.X==a.xStart&&n.Y==t));e.containsShip=!0,e.ship=a,o.push(e),n-=1}if("south"==i){l+=1;let e=this.grid[l];e.containsShip=!0,e.ship=a,o.push(e),n-=1}else if("east"==i){e=this.xAxis[this.xAxis.indexOf(e)+1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),n-=1}else if("west"==i){e=this.xAxis[this.xAxis.indexOf(e)-1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),n-=1}}return o}depopulateShip(n,e,t,i){let a=new C(n,e,t),r=this.grid.find((n=>n.X==a.xStart&&n.Y==a.yStart)),o=[];r.containsShip=!1,r.ship=null,o.push(r);let l=this.grid.indexOf(r);for(;n>1;){if("north"==i){t-=1;let e=this.grid.find((n=>n.X==a.xStart&&n.Y==t));e.containsShip=!1,e.ship=null,o.push(e),n-=1}if("south"==i){l+=1;let e=this.grid[l];e.containsShip=!1,e.ship=null,o.push(e),n-=1}else if("east"==i){e=this.xAxis[this.xAxis.indexOf(e)+1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),n-=1}else if("west"==i){e=this.xAxis[this.xAxis.indexOf(e)-1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),n-=1}}return o}}let f=new x,g=new x,B="taylor",I="computer",y=new class{constructor(n,e,t,i){this.playerBoard=n,this.player=e,this.aiBoard=t,this.ai=i,M("Player",0,"AI",0),Q(this.playerBoard,this.aiBoard)}reloadBoards(){this.playerBoard=new x,this.aiBoard=new x;let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard)}populatePlayer(n,e,t,i){this.playerBoard.populateShip(n,e,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard)}depopulatePlayer(n,e,t,i){this.playerBoard.depopulateShip(n,e,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard)}simplePopulate(){this.playerBoard.populateShip(2,"I",4,"east"),this.playerBoard.populateShip(4,"C",5,"east"),this.playerBoard.populateShip(3,"J",6,"south"),this.playerBoard.populateShip(3,"B",8,"south"),this.playerBoard.populateShip(2,"E",9,"east");let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard)}attackAI(n,e){this.aiBoard.receiveAttack(n,e),container.removeChild(container.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard),this.keepScore()}attackPlayer(n,e){this.playerBoard.receiveAttack(n,e),container.removeChild(container.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard),this.keepScore()}produceArrayOfPlayerShips(){let n=[];this.playerBoard.grid.forEach((e=>{null!=e.ship&&n.push(e.ship)}));let e=[];return n.forEach((n=>{e.includes(n)||e.push(n)})),e}produceArrayOfAiShips(){let n=[];this.aiBoard.grid.forEach((e=>{null!=e.ship&&n.push(e.ship)}));let e=[];return n.forEach((n=>{e.includes(n)||e.push(n)})),e}keepScore(){let n=this.produceArrayOfPlayerShips(),e=this.produceArrayOfAiShips(),t=0,i=0;n.forEach((n=>{n.hits.length==n.size&&(t+=1)})),e.forEach((n=>{n.hits.length==n.size&&(i+=1)})),container.removeChild(container.firstChild),M("Player",i,"AI",t),console.log("aiTally = "+i),console.log("playerTally ="+t),5==i&&H("You win!"),5==t&&H("AI wins!")}copyAIgrid(){return this.aiBoard.grid.slice()}randomParameterSelector(n,e){let t=n[Math.floor(Math.random()*n.length)],i=t.X,a=t.Y,r=n.indexOf(t),o=this.randomDirectionProducer();n.splice(r,1),"overflow!"==this.aiBoard.populateShip(e,i,a,o)?this.randomParameterSelector(n):this.aiBoard.populateShip(e,i,a,o)}randomDirectionProducer(){let n=Math.random();return n>=.75?"east":n<=.25?"west":n>.25&&n<.5?"south":"north"}placeOneAIShipAtRandom(n){let e=this.randomParameterProducer(),t=e[0],i=e[1],a=this.randomDirectinoProducer(),r=this.aiBoard.grid.find((n=>n.X==t&&n.Y==i));console.log(this.aiBoard.grid),1==r.containsShip&&this.placeOneAIShipAtRandom(n),"overflow!"==this.aiBoard.populateShip(n,t,i,a)?this.placeOneAIShipAtRandom(n):this.aiBoard.populateShip(n,t,i,a)}simplePopulateAI(){let n=this.copyAIgrid();this.randomParameterSelector(n,2),this.randomParameterSelector(n,2),this.randomParameterSelector(n,3),this.randomParameterSelector(n,3),this.randomParameterSelector(n,4);let e=document.getElementById("container");e.removeChild(e.firstChild.nextSibling),Q(this.playerBoard,this.aiBoard)}}(f,B,g,I);const b=document.createElement("button");b.addEventListener("click",(function(){y.simplePopulate()})),b.classList.add("populateButton"),b.textContent="Populate Player";const v=document.createElement("button");v.addEventListener("click",w),v.classList.add("populateButton"),v.textContent="Populate AI";const S=document.createElement("button");S.addEventListener("click",P),S.classList.add("populateButton"),S.textContent="Attack AI";const E=document.createElement("button");function k(){N(document.getElementById("container")),f=new x,g=new x,B="taylor",I="computer",M("Player",0,"AI",0),Q(y.playerBoard,y.aiBoard),F(),en()}function w(){y.simplePopulateAI()}function L(n,e,t,i){y.populatePlayer(n,e,t,i)}function Y(n,e,t,i){y.depopulatePlayer(n,e,t,i)}E.addEventListener("click",q),E.classList.add("populateButton"),E.textContent="Attack Player";const j=y.playerBoard.grid.slice();function P(n,e){let t=y.aiBoard.grid.find((t=>t.X==n&&t.Y==e));if(1==t.isHit&&alert("You have already attacked that square! Try another."),0==t.isHit){let i=y.aiBoard.grid.indexOf(t);j.splice(i,1),y.attackAI(n,e),setTimeout((()=>{q()}),"500")}}const T=y.playerBoard.grid.slice();function q(){if(0==T.length)return alert("game over!");let n=T[Math.floor(Math.random()*T.length)],e=n.X,t=n.Y,i=T.indexOf(n);T.splice(i,1),y.attackPlayer(e,t)}let O=document.createElement("label");O.classList.add("attackLabel"),O.textContent="Input X Coordinate: ",document.createElement("input").setAttribute("type","text");let X=document.createElement("label");function z(n,e){let t=n.grid,i=document.createElement("div");return i.classList.add("grid-container"),t.forEach((n=>{let t=function(n,e="ai"){let t=document.createElement("div");return t.classList.add("square"),1==n.isHit&&(t.style.backgroundColor="#6ee7b7"),"ai"==e&&t.addEventListener("click",(function(){P(n.X,n.Y)})),1==n.isHit&&1==n.containsShip&&(t.style.backgroundColor="red",t.textContent="X"),1==n.containsShip&&(t.style.backgroundColor="red"),t}(n,e);i.appendChild(t)})),i}function D(){let n=document.createElement("div");return n.classList.add("xCoordinateContainer"),["A","B","C","D","E","F","G","H","I","J"].forEach((e=>{let t=document.createElement("div");t.classList.add("upperSquare"),t.textContent=e,n.appendChild(t)})),n}function R(){let n=document.createElement("div");return n.classList.add("yCoordinateContainer"),[1,2,3,4,5,6,7,8,9,10].forEach((e=>{let t=document.createElement("div");t.classList.add("leftSquare"),t.textContent=e,n.appendChild(t)})),n}function Q(n,e){document.getElementById("container").appendChild(function(n,e){let t=document.createElement("div");return t.classList.add("doubleBoardContainer"),t.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(R()),t.appendChild(z(n,"player")),e.appendChild(D()),e.appendChild(t),e}(n)),t.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(R()),t.appendChild(z(n)),e.appendChild(D()),e.appendChild(t),e}(e)),t}(n,e))}function Z(n,e){let t=document.createElement("div");t.classList.add("singleBoardScoreContainer");let i=document.createElement("h2"),a=document.createElement("h2");return i.textContent=n+" Score: ",t.appendChild(i),t.appendChild(a),a.textContent=e+"/5",t}function M(n,e,t,i){let a=document.createElement("div");a.classList.add("scoreKeeperContainer"),a.appendChild(Z(n,e)),a.appendChild(Z(t,i)),document.getElementById("container").prepend(a)}function H(n){let e=document.createElement("div");e.classList.add("winnerCard"),e.appendChild(function(n){let e=document.createElement("h1");return e.classList.add("winnerAnnouncementText"),e.textContent=n,e}(n)),e.appendChild(function(){let n=document.createElement("button");return n.textContent="Restart Game",n.classList.add("placementButton"),n.addEventListener("click",k),n}()),container.firstChild.appendChild(e)}X.classList.add("attackLabel"),X.textContent="Input Y Coordinate: ",document.createElement("input").setAttribute("type","text");let U=document.createElement("div");U.classList.add("placement-module-container"),U.setAttribute("id","placementContainer");let G=new x,W=[];function F(){U.appendChild(function(){let n=document.createElement("div");return n.classList.add("placementTextBox"),n.appendChild(function(n){let e=document.createElement("h1");return e.classList.add("placementTextContent"),e.setAttribute("id","placementHeading"),e.textContent="Place Your Ships!",e}()),n}()),U.appendChild(function(){let n=document.createElement("div");return n.classList.add("middleSubcontainer"),n.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(R()),t.appendChild(function(n){let e=n.grid,t=document.createElement("div");return t.classList.add("grid-container"),e.forEach((n=>{let e=function(n){let e=document.createElement("div");return e.classList.add("square"),1==n.containsShip&&(e.style.backgroundColor="red",e.addEventListener("click",(function(){let n=e.id.split(""),t=G.grid.find((e=>e.X==n[0]&&e.Y==n[1])),i=t.ship.size,a=t.ship.xStart,r=t.ship.yStart;"east"==t.ship.direction?(G.depopulateShip(i,a,r,"east"),Y(i,a,r,"east"),G.populateShip(i,a,r,"south"),L(i,a,r,"south")):"south"==t.ship.direction&&(G.depopulateShip(i,a,r,"south"),Y(i,a,r,"south"),G.populateShip(i,a,r,"east"),L(i,a,r,"east")),N(U),document.body.removeChild(U),F()}))),e.setAttribute("id",n.X+n.Y),e.addEventListener("dragover",(function(n){console.log("dragOver"),n.preventDefault()})),e.addEventListener("drop",(function(n){console.log("Drop"),n.preventDefault();let e=n.dataTransfer.getData("text"),t=(document.getElementById(e),n.target.id),i=e,a=t[0],r=t[1];if(0==t[2]){let n=[t[1],t[2]];r=n.join("")}let o=G.grid.find((n=>n.X==a&&n.Y==r));1!=o.containsShip&&(0==V?(L(i,a,r,"east"),G.populateShip(i,a,r,"east")):(L(i,a,r,"south"),G.populateShip(i,a,r,"south")),N(U),document.body.removeChild(U),W.push(i),F())})),e}(n);t.appendChild(e)})),t}(n)),e.appendChild(D()),e.appendChild(t),e}(G)),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("rightInfoSubcontainer"),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("rightInfoButtonsContainer"),n.appendChild(function(){let n=document.createElement("button");return n.classList.add("placementButton"),n.textContent="Reset Ships",n.addEventListener("click",en),n}()),n.appendChild(function(){let n=document.createElement("button");return n.classList.add("placementButton"),n.textContent="Begin Game",n.addEventListener("click",nn),n}()),n}()),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("placementInstructionBox"),n.appendChild(function(){let n=document.createElement("div");n.classList.add("headingContainer");let e=document.createElement("h3");return e.textContent="Instructions",n.appendChild(e),n}()),n.appendChild(J("Place your ships by dragging them to your desired location.")),n.appendChild(J("Click the Rotate button to change orientation of ships waiting to be placed.")),n.appendChild(J("You can also rotate ships after placing them on the board by clicking on them.")),n.appendChild(J("Once you have placed all five ships, press the Begin Game button to start.")),n}()),n}()),n}()),U.appendChild(function(){let n=document.createElement("div");return n.classList.add("bottomSubcontainer"),n.appendChild(function(){let n=document.createElement("button");return n.textContent="Rotate",n.classList.add("placementButton"),n.setAttribute("id","rotateShipButton"),n.addEventListener("click",(()=>{document.querySelectorAll("div.ship").forEach((function(n){"column"==n.style.flexDirection?(n.style.flexDirection="row",V=0):(n.style.flexDirection="column",V=1)})),document.querySelectorAll("div.singleShipClassContainer").forEach((function(n){n.style.flexDirection=1==V?"row":"column"}))})),n}()),n.appendChild(function(){let n=document.createElement("div");n.classList.add("shipAllClassesContainer");let e=document.createElement("div");e.classList.add("singleShipClassContainer");let t=document.createElement("div");t.classList.add("singleShipClassContainer");let i=document.createElement("div");return i.classList.add("singleShipClassContainer"),1==V&&(e.style.flexDirection="row",t.style.flexDirection="row",i.style.flexDirection="row"),0==W.filter((n=>2==n)).length?(e.appendChild(_(2)),e.appendChild(_(2)),n.appendChild(e)):1==W.filter((n=>2==n)).length&&(e.appendChild(_(2)),n.appendChild(e)),0==W.filter((n=>3==n)).length?(t.appendChild(_(3)),t.appendChild(_(3)),n.appendChild(t)):1==W.filter((n=>3==n)).length&&(t.appendChild(_(3)),n.appendChild(t)),0==W.filter((n=>4==n)).length&&(i.appendChild(_(4)),n.appendChild(i)),n}()),n}()),document.body.appendChild(U)}function J(n){let e=document.createElement("p");return e.classList.add("instructionContent"),e.textContent=n,e}function N(n){for(;n.firstChild;)n.removeChild(n.firstChild)}const K="";let V=0;function _(n){let e=document.createElement("div");for(e.classList.add("ship"),e.setAttribute("draggable","true"),e.setAttribute("id",n),1==V&&(e.style.flexDirection="column"),0==V&&(e.style.flexDirection="row");n>=1;){let t=document.createElement("div");t.classList.add("placementSquare"),e.appendChild(t),n-=1}return e.addEventListener("dragstart",$),e}function $(n){n.currentTarget.classList.add("dragging"),n.dataTransfer.clearData(),n.dataTransfer.setData("text/plain",n.target.id);const e=n.dataTransfer.getData("text");K=document.getElementById(e),n.currentTarget.removeEventListener("dragend",$)}function nn(){if(5==W.length)w(),N(U),document.body.removeChild(U);else{let n=document.getElementById("placementHeading");n.textContent="Place All Ships Before Starting the Game!",n.style.color="#ef4444"}}function en(){G=new x,function(){for(;W.length>=1;)W.pop()}(),N(U),document.body.removeChild(U),y.reloadBoards(),F()}F()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cEYsWUFBWWtFLEdBQ3RCeEIsR0FBYyxDQUNsQixDQUVBLE9BREEwQyxFQUFVcUMsaUJBQWlCLFlBQWFzRixHQUNqQzNILENBQ1gsQ0FDQSxTQUFTMkgsRUFBd0JsQyxHQUd6QkEsRUFBR21DLGNBQWN0RixVQUFVQyxJQUFJLFlBRS9Ca0QsRUFBR0UsYUFBYWtDLFlBQ2hCcEMsRUFBR0UsYUFBYW1DLFFBQVEsYUFBY3JDLEVBQUd4TCxPQUFPckUsSUFDaEQsTUFBTThCLEVBQU8rTixFQUFHRSxhQUFhQyxRQUFRLFFBQ3JDOU4sRUFBU3FDLFNBQVM4RixlQUFldkksR0FDakMrTixFQUFHbUMsY0FBY0csb0JBQW9CLFVBQVdKLEVBQ3hELENBNkNBLFNBQVN2QixLQUNMLEdBQXdCLEdBQXBCakIsRUFBVTVPLE9BQ1Y0TCxJQUNBVSxFQUFvQm9DLEdBQ3BCOUssU0FBU3FMLEtBQUtoSyxZQUFZeUosT0FFekIsQ0FDRCxJQUFJRyxFQUFJakwsU0FBUzhGLGVBQWUsb0JBQ2hDbUYsRUFBRTVDLFlBQWMsNENBQ2hCNEMsRUFBRXBMLE1BQU1nTyxNQUFRLFNBQ3BCLENBQ0osQ0FDQSxTQUFTakYsS0FDTG1DLEVBQWlCLElBQUkvRyxFQU96QixXQUNJLEtBQU9nSCxFQUFVNU8sUUFBVSxHQUN2QjRPLEVBQVU4QyxLQUVsQixDQVZJQyxHQUNBckYsRUFBb0JvQyxHQUNwQjlLLFNBQVNxTCxLQUFLaEssWUFBWXlKLEdEeGpCMUJyRixFQUFPRyxlQzBqQlArQyxHQUNKLENDdm5CQUEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVBcHBMb2dpYy9zaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZUFwcExvZ2ljL2dhbWVib2FyZC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3VzZXJJbnRlcmZhY2UvY29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3VzZXJJbnRlcmZhY2UvYm9hcmRET01sb2FkZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWwsXFxuYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBmb250LWZhbWlseTogYXJpYWw7XFxufVxcbmJvZHkge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNmQzZDE7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4jY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4vKnN0eWxlcyBmb3IgdGhlIHBsYWNlbWVudCBtb2R1bGUgKi9cXG4ucGxhY2VtZW50LW1vZHVsZS1jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDEwcHg7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG4gICAgd2lkdGg6IDgwMHB4O1xcbiAgICBoZWlnaHQ6IDY2MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE2KSAwcHggMXB4IDRweCwgcmdiKDUxLCA1MSwgNTEpIDBweCAwcHggMHB4IDNweDtcXG59XFxuLnBsYWNlbWVudFRleHRCb3gge1xcbiAgICBoZWlnaHQ6IDEwJTtcXG4gICAgbWFyZ2luLXRvcDogLTExcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XFxufVxcbi5wbGFjZW1lbnRUZXh0Q29udGVudCB7XFxuICAgIHRleHQtc2hhZG93OiBibGFjayAycHggMnB4O1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxuICAgIGNvbG9yOiAjMjJkM2VlO1xcbn1cXG4ubWlkZGxlU3ViY29udGFpbmVyLCAucmlnaHRJbmZvU3ViY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuLm1pZGRsZVN1YmNvbnRhaW5lciB7XFxuICAgIGdhcDogMzBweDtcXG59XFxuLnJpZ2h0SW5mb1N1YmNvbnRhaW5lciB7XFxuICAgIGdhcDogMjVweDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLnJpZ2h0SW5mb0J1dHRvbnNDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBnYXA6IDQwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuLmJvdHRvbVN1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNTVweDtcXG4gICAgaGVpZ2h0OiAyNSU7XFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxuXFxufVxcbi5wbGFjZW1lbnRJbnN0cnVjdGlvbkJveCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNmQzZDE7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNikgMHB4IDFweCA0cHgsIHJnYig1MSwgNTEsIDUxKSAwcHggMHB4IDBweCAzcHg7XFxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuLmhlYWRpbmdDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogLTIwcHg7XFxufVxcbi5zaGlwQWxsQ2xhc3Nlc0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMjU1LCAwKTtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICB3aWR0aDogNDAwcHg7XFxuICAgIFxcbn1cXG4uc2luZ2xlU2hpcENsYXNzQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG4uc2hpcCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMXB4O1xcbn1cXG4uc2hpcEFsdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMXB4O1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrIDJweDtcXG59XFxuXFxuLypzdHlsZXMgZm9yIHRoZSB0d28gZ3JpZHMgYW5kIGNvb3JkaW5hdGVzICovXFxuLmRvdWJsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxNzVweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuLnNpbmdsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLnhDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcXG59XFxuLnlDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxcHg7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxufVxcbi5sZWZ0U3F1YXJlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5sZWZ0U3F1YXJlLCAudXBwZXJTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLnN1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcbi5wbGFjZW1lbnRTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG9wYWNpdHk6IDE7XFxufVxcbi5zcXVhcmUge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5zcXVhcmU6aG92ZXIsIC5wbGFjZW1lbnRTcXVhcmU6aG92ZXIge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYmQ1ZTE7XFxufVxcbi5zcXVhcmVDb250YWluZXIge1xcblxcbn1cXG4uZ3JpZC1jb250YWluZXIge1xcbiAgICBoZWlnaHQ6IDM1MHB4O1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAzNXB4KTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDM1cHgpO1xcbiAgICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xcbiAgICBnYXA6IDFweDtcXG59XFxuLyogc3R5bGVzIGZvciBzY29yZSBjYXJkICovXFxuLnNpbmdsZUJvYXJkU2NvcmVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xcbn1cXG5cXG4vKnN0eWxlcyBmb3IgZ2FtZSBjb250cm9sbGVyIGh1ZCovXFxuLnNjb3JlS2VlcGVyQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAzOTBweDtcXG4gICAgdGV4dC1zaGFkb3c6ICMyMmQzZWUgMnB4IDJweDtcXG5cXG59XFxuLnBsYWNlbWVudEJ1dHRvbiB7XFxuICAgIGhlaWdodDogNjBweDtcXG4gICAgd2lkdGg6IDEyMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjJkM2VlO1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDYsIDI0LCA0NCwgMC40KSAwcHggMHB4IDBweCAycHgsIHJnYmEoNiwgMjQsIDQ0LCAwLjY1KSAwcHggNHB4IDZweCAtMXB4LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpIDBweCAxcHggMHB4IGluc2V0O1xcbn1cXG4uYnV0dG9uQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmZvcm1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG59XFxuLndpbm5lckNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMyNjI2O1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMTYpIDBweCAxcHggNHB4LCByZ2IoNTEsIDUxLCA1MSkgMHB4IDBweCAwcHggM3B4O1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDEwcHg7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG4gICAgaGVpZ2h0OiAyNzZweDtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4ud2lubmVyQW5ub3VuY2VtZW50IHtcXG4gICAgZm9udC1zaXplOiA4MHB4O1xcbn1cXG4uc2VsZWN0U3F1YXJlIHtcXG4gICAgXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0lBRUksU0FBUztJQUNULFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNu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ekIscUlBQXFJO0FBQ3pJO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsU0FBUztJQUNULHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixRQUFRO0lBQ1IsWUFBWTtBQUNoQjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLDRFQUE0RTtJQUM1RSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxRQUFRO0lBQ1IsU0FBUztJQUNULFNBQVM7SUFDVCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBOztBQUVBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwsXFxuYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBmb250LWZhbWlseTogYXJpYWw7XFxufVxcbmJvZHkge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNmQzZDE7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4jY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4vKnN0eWxlcyBmb3IgdGhlIHBsYWNlbWVudCBtb2R1bGUgKi9cXG4ucGxhY2VtZW50LW1vZHVsZS1jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDEwcHg7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG4gICAgd2lkdGg6IDgwMHB4O1xcbiAgICBoZWlnaHQ6IDY2MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE2KSAwcHggMXB4IDRweCwgcmdiKDUxLCA1MSwgNTEpIDBweCAwcHggMHB4IDNweDtcXG59XFxuLnBsYWNlbWVudFRleHRCb3gge1xcbiAgICBoZWlnaHQ6IDEwJTtcXG4gICAgbWFyZ2luLXRvcDogLTExcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDIzcHg7XFxufVxcbi5wbGFjZW1lbnRUZXh0Q29udGVudCB7XFxuICAgIHRleHQtc2hhZG93OiBibGFjayAycHggMnB4O1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxuICAgIGNvbG9yOiAjMjJkM2VlO1xcbn1cXG4ubWlkZGxlU3ViY29udGFpbmVyLCAucmlnaHRJbmZvU3ViY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuLm1pZGRsZVN1YmNvbnRhaW5lciB7XFxuICAgIGdhcDogMzBweDtcXG59XFxuLnJpZ2h0SW5mb1N1YmNvbnRhaW5lciB7XFxuICAgIGdhcDogMjVweDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLnJpZ2h0SW5mb0J1dHRvbnNDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBnYXA6IDQwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuLmJvdHRvbVN1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNTVweDtcXG4gICAgaGVpZ2h0OiAyNSU7XFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxuXFxufVxcbi5wbGFjZW1lbnRJbnN0cnVjdGlvbkJveCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNmQzZDE7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNikgMHB4IDFweCA0cHgsIHJnYig1MSwgNTEsIDUxKSAwcHggMHB4IDBweCAzcHg7XFxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuLmhlYWRpbmdDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogLTIwcHg7XFxufVxcbi5zaGlwQWxsQ2xhc3Nlc0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMjU1LCAwKTtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICB3aWR0aDogNDAwcHg7XFxuICAgIFxcbn1cXG4uc2luZ2xlU2hpcENsYXNzQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG4uc2hpcCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMXB4O1xcbn1cXG4uc2hpcEFsdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMXB4O1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrIDJweDtcXG59XFxuXFxuLypzdHlsZXMgZm9yIHRoZSB0d28gZ3JpZHMgYW5kIGNvb3JkaW5hdGVzICovXFxuLmRvdWJsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxNzVweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuLnNpbmdsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLnhDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcXG59XFxuLnlDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxcHg7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxufVxcbi5sZWZ0U3F1YXJlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5sZWZ0U3F1YXJlLCAudXBwZXJTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLnN1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcbi5wbGFjZW1lbnRTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG9wYWNpdHk6IDE7XFxufVxcbi5zcXVhcmUge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5zcXVhcmU6aG92ZXIsIC5wbGFjZW1lbnRTcXVhcmU6aG92ZXIge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYmQ1ZTE7XFxufVxcbi5zcXVhcmVDb250YWluZXIge1xcblxcbn1cXG4uZ3JpZC1jb250YWluZXIge1xcbiAgICBoZWlnaHQ6IDM1MHB4O1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAzNXB4KTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDM1cHgpO1xcbiAgICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xcbiAgICBnYXA6IDFweDtcXG59XFxuLyogc3R5bGVzIGZvciBzY29yZSBjYXJkICovXFxuLnNpbmdsZUJvYXJkU2NvcmVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xcbn1cXG5cXG4vKnN0eWxlcyBmb3IgZ2FtZSBjb250cm9sbGVyIGh1ZCovXFxuLnNjb3JlS2VlcGVyQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAzOTBweDtcXG4gICAgdGV4dC1zaGFkb3c6ICMyMmQzZWUgMnB4IDJweDtcXG5cXG59XFxuLnBsYWNlbWVudEJ1dHRvbiB7XFxuICAgIGhlaWdodDogNjBweDtcXG4gICAgd2lkdGg6IDEyMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjJkM2VlO1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDYsIDI0LCA0NCwgMC40KSAwcHggMHB4IDBweCAycHgsIHJnYmEoNiwgMjQsIDQ0LCAwLjY1KSAwcHggNHB4IDZweCAtMXB4LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpIDBweCAxcHggMHB4IGluc2V0O1xcbn1cXG4uYnV0dG9uQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmZvcm1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG59XFxuLndpbm5lckNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMyNjI2O1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMTYpIDBweCAxcHggNHB4LCByZ2IoNTEsIDUxLCA1MSkgMHB4IDBweCAwcHggM3B4O1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDEwcHg7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG4gICAgaGVpZ2h0OiAyNzZweDtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4ud2lubmVyQW5ub3VuY2VtZW50IHtcXG4gICAgZm9udC1zaXplOiA4MHB4O1xcbn1cXG4uc2VsZWN0U3F1YXJlIHtcXG4gICAgXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSAnLi9nYW1lYm9hcmQuanMnO1xuLy9jb25zdCBHYW1lYm9hcmQgPSByZXF1aXJlKCcuL2dhbWVib2FyZC5qcycpO1xuXG5jbGFzcyBTaGlwIHtcbiAgY29uc3RydWN0b3Ioc2l6ZSwgeFN0YXJ0LCB5U3RhcnQsIGRpcmVjdGlvbikge1xuICAgIHRoaXMuc2l6ZSA9IHNpemVcbiAgICB0aGlzLmhpdHMgPSBbXVxuICAgIHRoaXMueFN0YXJ0ID0geFN0YXJ0XG4gICAgdGhpcy55U3RhcnQgPSB5U3RhcnRcbiAgICB0aGlzLmRpcmVjdGlvbiA9IG51bGxcbiAgfVxuICBoaXQoKSB7XG4gICAgdGhpcy5oaXRzLnB1c2goJ2hpdCcpO1xuICAgIGlmICh0aGlzLmhpdHMubGVuZ3RoID09IHRoaXMuc2l6ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNTdW5rKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmhpdDtcbiAgICB9XG4gIH1cbiAgaXNTdW5rKCkge1xuICAgIHJldHVybiAnc3VuayEnXG4gIH1cbiAgfSBcblxuZXhwb3J0IHsgU2hpcCB9XG4iLCJpbXBvcnQgeyBTaGlwIH0gZnJvbSAnLi9zaGlwLmpzJztcblxuY2xhc3MgU3F1YXJlIHtcbiAgICBjb25zdHJ1Y3RvcihYLCBZKSB7XG4gICAgICAgIHRoaXMuWCA9IFg7XG4gICAgICAgIHRoaXMuWSA9IFk7XG4gICAgICAgIHRoaXMuaXNIaXQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb250YWluc1NoaXAgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zaGlwID0gbnVsbDtcbiAgICAgICAgLy90aGlzLnN0YXJ0ID0gbnVsbFxuICAgIH1cbn1cbmNsYXNzIEdhbWVib2FyZCB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQpIHtcbiAgICAgICAgdGhpcy54QXhpcyA9IFsnQScsICdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSiddXG4gICAgICAgIHRoaXMueUF4aXMgPSBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTBdXG4gICAgICAgIHRoaXMuZ3JpZCA9IHRoaXMubWFrZUdyaWQoKVxuICAgIH1cbiAgICByZWNlaXZlQXR0YWNrKHhMZXR0ZXIsIHlOdW0pIHtcbiAgICAgICAgbGV0IGZvdW5kID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4TGV0dGVyICYmIHNxdWFyZS5ZID09IHlOdW0pKTtcbiAgICAgICAgZm91bmQuaXNIaXQgPSB0cnVlO1xuICAgICAgICBpZiAoZm91bmQuY29udGFpbnNTaGlwID09IHRydWUpIHtcbiAgICAgICAgICAgIGZvdW5kLnNoaXAuaGl0KCk7XG4gICAgICAgICAgICByZXR1cm4gZm91bmQuc2hpcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm91bmQuc2hpcDtcbiAgICB9XG4gICAgbWFrZUdyaWQoKSB7XG4gICAgICAgIGxldCBncmlkID0gW107XG4gICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgdGhpcy54QXhpcy5sZW5ndGg7IHgrKykge1xuICAgICAgICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLnlBeGlzLmxlbmd0aDsgeSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IG5ldyBTcXVhcmUodGhpcy54QXhpc1t4XSwgdGhpcy55QXhpc1t5XSk7XG4gICAgICAgICAgICAgICAgZ3JpZC5wdXNoKHNxdWFyZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdyaWQ7XG4gICAgfVxuICAgIHBvcHVsYXRlU2hpcChzaXplLCB4U3RhcnQsIHlTdGFydCwgZGlyZWN0aW9uKSB7XG4gICAgICAgIGlmIChzaXplID4gMSkge1xuICAgICAgICAgICAgaWYgKGRpcmVjdGlvbiA9PSBcIm5vcnRoXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoeVN0YXJ0IDwgc2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ292ZXJmbG93ISdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwic291dGhcIikge1xuICAgICAgICAgICAgICAgIGlmICgoeVN0YXJ0IC0gMSkgPiAoMTAgLSBzaXplKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ292ZXJmbG93ISdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwid2VzdFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpIDwgKHNpemUgLSAxKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ292ZXJmbG93ISdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwiZWFzdFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpID4gKDEwIC0gc2l6ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdvdmVyZmxvdyEnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxldCBuZXdTaGlwID0gbmV3IFNoaXAoc2l6ZSwgeFN0YXJ0LCB5U3RhcnQsIGRpcmVjdGlvbik7XG4gICAgICAgIG5ld1NoaXAuZGlyZWN0aW9uID0gZGlyZWN0aW9uO1xuICAgICAgICBsZXQgc3RhcnRpbmdTcXVhcmUgPSB0aGlzLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IG5ld1NoaXAueFN0YXJ0ICYmIHNxdWFyZS5ZID09IG5ld1NoaXAueVN0YXJ0KSk7XG4gICAgICAgIGxldCBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAgPSBbXTtcbiAgICAgICAgc3RhcnRpbmdTcXVhcmUuY29udGFpbnNTaGlwID0gdHJ1ZTtcbiAgICAgICAgc3RhcnRpbmdTcXVhcmUuc2hpcCA9IG5ld1NoaXA7XG4gICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgbGV0IHlJbmRleCA9IHRoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgd2hpbGUgKHNpemUgPiAxKSB7XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwibm9ydGhcIikge1xuICAgICAgICAgICAgICAgIHlTdGFydCA9IHlTdGFydCAtIDE7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwic291dGhcIikge1xuICAgICAgICAgICAgICAgIC8veVN0YXJ0ID0geVN0YXJ0ICsgMTtcbiAgICAgICAgICAgICAgICB5SW5kZXggKz0gMVxuICAgICAgICAgICAgICAgIC8vbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZFt5SW5kZXhdO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5jb250YWluc1NoaXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zaGlwID0gbmV3U2hpcDtcbiAgICAgICAgICAgICAgICBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAucHVzaChzcXVhcmUpXG4gICAgICAgICAgICAgICAgc2l6ZSA9IHNpemUgLSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gXCJlYXN0XCIpIHtcbiAgICAgICAgICAgICAgICB4U3RhcnQgPSB0aGlzLnhBeGlzW3RoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpICsgMV07XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0geFN0YXJ0ICYmIHNxdWFyZS5ZID09IG5ld1NoaXAueVN0YXJ0KSlcbiAgICAgICAgICAgICAgICBzcXVhcmUuY29udGFpbnNTaGlwID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2hpcCA9IG5ld1NoaXA7XG4gICAgICAgICAgICAgICAgc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwLnB1c2goc3F1YXJlKTtcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcIndlc3RcIikge1xuICAgICAgICAgICAgICAgIHhTdGFydCA9IHRoaXMueEF4aXNbdGhpcy54QXhpcy5pbmRleE9mKHhTdGFydCkgLSAxXTtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKVxuICAgICAgICAgICAgICAgIHNxdWFyZS5jb250YWluc1NoaXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zaGlwID0gbmV3U2hpcDtcbiAgICAgICAgICAgICAgICBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAucHVzaChzcXVhcmUpXG4gICAgICAgICAgICAgICAgc2l6ZSA9IHNpemUgLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXA7XG4gICAgICAgIC8vYWRkIHNvbWUgY29kZSB0byBhY2NvdW50IGZvciBzaXplID4gMSBhbmQgZGlyZWN0aW9uXG4gICAgfVxuICAgIGRlcG9wdWxhdGVTaGlwKHNpemUsIHhTdGFydCwgeVN0YXJ0LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgbGV0IG5ld1NoaXAgPSBuZXcgU2hpcChzaXplLCB4U3RhcnQsIHlTdGFydCk7XG4gICAgICAgIGxldCBzdGFydGluZ1NxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKTtcbiAgICAgICAgbGV0IHNxdWFyZXNDb250YWluaW5nTmV3U2hpcCA9IFtdO1xuICAgICAgICBzdGFydGluZ1NxdWFyZS5jb250YWluc1NoaXAgPSBmYWxzZTtcbiAgICAgICAgc3RhcnRpbmdTcXVhcmUuc2hpcCA9IG51bGw7XG4gICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgbGV0IHlJbmRleCA9IHRoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgd2hpbGUgKHNpemUgPiAxKSB7XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwibm9ydGhcIikge1xuICAgICAgICAgICAgICAgIHlTdGFydCA9IHlTdGFydCAtIDE7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zaGlwID0gbnVsbDtcbiAgICAgICAgICAgICAgICBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAucHVzaChzcXVhcmUpXG4gICAgICAgICAgICAgICAgc2l6ZSA9IHNpemUgLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRpcmVjdGlvbiA9PSBcInNvdXRoXCIpIHtcbiAgICAgICAgICAgICAgICAvL3lTdGFydCA9IHlTdGFydCArIDE7XG4gICAgICAgICAgICAgICAgeUluZGV4ICs9IDFcbiAgICAgICAgICAgICAgICAvL2xldCBzcXVhcmUgPSB0aGlzLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IG5ld1NoaXAueFN0YXJ0ICYmIHNxdWFyZS5ZID09IHlTdGFydCkpO1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmUgPSB0aGlzLmdyaWRbeUluZGV4XTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY29udGFpbnNTaGlwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBudWxsO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcImVhc3RcIikge1xuICAgICAgICAgICAgICAgIHhTdGFydCA9IHRoaXMueEF4aXNbdGhpcy54QXhpcy5pbmRleE9mKHhTdGFydCkgKyAxXTtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKVxuICAgICAgICAgICAgICAgIHNxdWFyZS5jb250YWluc1NoaXAgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2hpcCA9IG51bGw7XG4gICAgICAgICAgICAgICAgc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwLnB1c2goc3F1YXJlKTtcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcIndlc3RcIikge1xuICAgICAgICAgICAgICAgIHhTdGFydCA9IHRoaXMueEF4aXNbdGhpcy54QXhpcy5pbmRleE9mKHhTdGFydCkgLSAxXTtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKVxuICAgICAgICAgICAgICAgIHNxdWFyZS5jb250YWluc1NoaXAgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2hpcCA9IG51bGw7XG4gICAgICAgICAgICAgICAgc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwLnB1c2goc3F1YXJlKVxuICAgICAgICAgICAgICAgIHNpemUgPSBzaXplIC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwO1xuICAgICAgICAvL2FkZCBzb21lIGNvZGUgdG8gYWNjb3VudCBmb3Igc2l6ZSA+IDEgYW5kIGRpcmVjdGlvblxuICAgIH1cbn1cblxuXG5leHBvcnQgeyBHYW1lYm9hcmQsIFNxdWFyZSB9IiwiaW1wb3J0IHsgZ2FtZUJvYXJkTG9hZGVyLCBwbGFjZW1lbnRNb2R1bGVMb2FkZXIsIHJlbW92ZUFsbENoaWxkTm9kZXMsIHR3b0JvYXJkRE9NTG9hZGVyLCBkb3VibGVTY29yZUtlZXBlckdlbmVyYXRvciwgcmVzZXRTaGlwcyB9IGZyb20gJy4vYm9hcmRET01sb2FkZXIuanMnO1xuaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSAnLi4vZ2FtZUFwcExvZ2ljL2dhbWVib2FyZC5qcyc7XG5cbmxldCBwbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbmxldCBhaUJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xubGV0IHBsYXllciA9IFwidGF5bG9yXCJcbmxldCBhaSA9IFwiY29tcHV0ZXJcIlxubGV0IGJvYXJkcyA9IG5ldyBnYW1lQm9hcmRMb2FkZXIocGxheWVyQm9hcmQsIHBsYXllciwgYWlCb2FyZCwgYWkpO1xuY29uc3QgcGxheWVyUG9wdWxhdGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbnBsYXllclBvcHVsYXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2ltcGxlUG9wdWxhdGUpO1xucGxheWVyUG9wdWxhdGVCdXR0b24uY2xhc3NMaXN0LmFkZCgncG9wdWxhdGVCdXR0b24nKTtcbnBsYXllclBvcHVsYXRlQnV0dG9uLnRleHRDb250ZW50ID0gXCJQb3B1bGF0ZSBQbGF5ZXJcIjtcbmNvbnN0IGFpUG9wdWxhdGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbmFpUG9wdWxhdGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzaW1wbGVQb3B1bGF0ZUFJKTtcbmFpUG9wdWxhdGVCdXR0b24uY2xhc3NMaXN0LmFkZCgncG9wdWxhdGVCdXR0b24nKTtcbmFpUG9wdWxhdGVCdXR0b24udGV4dENvbnRlbnQgPSBcIlBvcHVsYXRlIEFJXCI7XG5jb25zdCBhdHRhY2tBSUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuYXR0YWNrQUlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhdHRhY2tBSSk7XG5hdHRhY2tBSUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwb3B1bGF0ZUJ1dHRvbicpO1xuYXR0YWNrQUlCdXR0b24udGV4dENvbnRlbnQgPSBcIkF0dGFjayBBSVwiO1xuY29uc3QgYXR0YWNrUGxheWVyQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5hdHRhY2tQbGF5ZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhdHRhY2tQbGF5ZXIpO1xuYXR0YWNrUGxheWVyQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3BvcHVsYXRlQnV0dG9uJyk7XG5hdHRhY2tQbGF5ZXJCdXR0b24udGV4dENvbnRlbnQgPSBcIkF0dGFjayBQbGF5ZXJcIlxuXG5mdW5jdGlvbiByZXN0YXJ0Qm9hcmQoKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICByZW1vdmVBbGxDaGlsZE5vZGVzKGNvbnRhaW5lcik7XG4gICAgZ2VuZXJhdGVIVUQoKTtcbiAgICByZXNldFNoaXBzKCk7XG59XG5mdW5jdGlvbiBnZW5lcmF0ZUhVRCgpIHtcbiAgICBwbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgICBhaUJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xuICAgIHBsYXllciA9IFwidGF5bG9yXCI7XG4gICAgYWkgPSBcImNvbXB1dGVyXCI7XG4gICAgZG91YmxlU2NvcmVLZWVwZXJHZW5lcmF0b3IoXCJQbGF5ZXJcIiwgMCwgXCJBSVwiLCAwKTtcbiAgICB0d29Cb2FyZERPTUxvYWRlcihib2FyZHMucGxheWVyQm9hcmQsIGJvYXJkcy5haUJvYXJkKTtcbiAgICBwbGFjZW1lbnRNb2R1bGVMb2FkZXIoKTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlQnV0dG9ucygpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbkNvbnRhaW5lcicpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXJQb3B1bGF0ZUJ1dHRvbik7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGFpUG9wdWxhdGVCdXR0b24pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhdHRhY2tQbGF5ZXJCdXR0b24pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhdHRhY2tBSUJ1dHRvbik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbiAgICBmdW5jdGlvbiBzaW1wbGVQb3B1bGF0ZSgpIHtcbiAgICAgICAgYm9hcmRzLnNpbXBsZVBvcHVsYXRlKCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNpbXBsZVBvcHVsYXRlQUkoKSB7XG4gICAgICAgIGJvYXJkcy5zaW1wbGVQb3B1bGF0ZUFJKCk7XG4gICAgfVxuZnVuY3Rpb24gcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKSB7XG4gICAgYm9hcmRzLnBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIGRpcmVjdGlvbik7XG59O1xuZnVuY3Rpb24gZGVwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pIHtcbiAgICBib2FyZHMuZGVwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pO1xufVxuLy90aGlzIGZ1bmN0aW9uIGlzIHVzZWQgd2l0aCB0aGUgc2hpcCBwbGFjZW1lbnQgbW9kdWxlXG4gICAgLy93aGVuZXZlciB5b3UgcmVzZXQgc2hpcCBwbGFjZW1lbnQsIHlvdSBhbHNvIG5lZWQgdG8gcmVsb2FkIHBsYXllciAmIGFpIGJvYXJkc1xuICAgIC8vdG8gZGVsZXRlIGFueSBzaGlwcyBwbGFjZWQgZHVyaW5nIHByaW9yIHNoaXAgcGxhY2VtZW50IHBoYXNlXG5mdW5jdGlvbiByZWxvYWRCb2FyZHMoKSB7XG4gICAgYm9hcmRzLnJlbG9hZEJvYXJkcygpO1xufVxuXG5cbi8vYWlBcnJheSBiZWxvdyBjb250YWlucyBnbG9iYWxseSBhdmFpbGFibGUgY29weSBvZiBwbGF5ZXJCb2FyZCBncmlkLCBmb3IgdXNlIGJ5IEFJXG4vL2V2ZXJ5IHRpbWUgdGhlIEFJIGF0dGFja3MgcGxheWVyLCBzZWxlY3RzIG9uZSBlbGVtZW50IGF0IHJhbmRvbSBmcm9tIHRoZSBhcnJheSBhbmQgdGhlbiByZW1vdmVzIGl0XG4vL3NvIHRoYXQgZnV0dXJlIGludm9jYXRpb25zIGNhbm5vdCBhdHRhY2sgdGhlIHNhbWUgbG9jYXRpb25cbmNvbnN0IGFpQXJyYXkgPSBib2FyZHMucGxheWVyQm9hcmQuZ3JpZC5zbGljZSgpO1xuZnVuY3Rpb24gYXR0YWNrQUkoeCwgeSkge1xuICAgIGxldCBmb3VuZCA9IGJvYXJkcy5haUJvYXJkLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHggJiYgc3F1YXJlLlkgPT0geSkpO1xuICAgIGlmIChmb3VuZC5pc0hpdCA9PSB0cnVlKSB7IGFsZXJ0KFwiWW91IGhhdmUgYWxyZWFkeSBhdHRhY2tlZCB0aGF0IHNxdWFyZSEgVHJ5IGFub3RoZXIuXCIpIH1cbiAgICBpZiAoZm91bmQuaXNIaXQgPT0gZmFsc2UpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gYm9hcmRzLmFpQm9hcmQuZ3JpZC5pbmRleE9mKGZvdW5kKTtcbiAgICAgICAgYWlBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBib2FyZHMuYXR0YWNrQUkoeCwgeSk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgYXR0YWNrUGxheWVyKCk7XG4gICAgICAgIH0sIFwiNTAwXCIpO1xuICAgIH1cbn1cblxuLy9wbGF5ZXJBcnJheSBiZWxvdyBjb250YWlucyBnbG9iYWxseSBhdmFpbGFibGUgY29weSBvZiBwbGF5ZXJCb2FyZCBncmlkLCBmb3IgdXNlIGJ5IEFJXG4vL2V2ZXJ5IHRpbWUgdGhlIEFJIGF0dGFja3MgcGxheWVyLCBzZWxlY3RzIG9uZSBlbGVtZW50IGF0IHJhbmRvbSBmcm9tIHRoZSBhcnJheSBhbmQgdGhlbiByZW1vdmVzIGl0XG4vL3NvIHRoYXQgZnV0dXJlIGludm9jYXRpb25zIGNhbm5vdCBhdHRhY2sgdGhlIHNhbWUgbG9jYXRpb25cbmNvbnN0IHBsYXllckFycmF5ID0gYm9hcmRzLnBsYXllckJvYXJkLmdyaWQuc2xpY2UoKTtcbmZ1bmN0aW9uIGF0dGFja1BsYXllcigpIHtcbiAgICBpZiAocGxheWVyQXJyYXkubGVuZ3RoID09IDApIHJldHVybiBhbGVydCgnZ2FtZSBvdmVyIScpXG4gICAgbGV0IHJhbmRvbSA9IHBsYXllckFycmF5W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBsYXllckFycmF5Lmxlbmd0aCldO1xuICAgIGxldCB4ID0gcmFuZG9tLlg7XG4gICAgbGV0IHkgPSByYW5kb20uWTtcbiAgICBsZXQgaW5kZXggPSBwbGF5ZXJBcnJheS5pbmRleE9mKHJhbmRvbSk7XG4gICAgcGxheWVyQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICBib2FyZHMuYXR0YWNrUGxheWVyKHgsIHkpO1xufVxuLy9zY3JpcHRpbmcgZm9ybXMgZm9yIGlucHV0dGluZyBjb29yZGluYXRlc1xubGV0IHhMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG54TGFiZWwuY2xhc3NMaXN0LmFkZCgnYXR0YWNrTGFiZWwnKTtcbnhMYWJlbC50ZXh0Q29udGVudCA9IFwiSW5wdXQgWCBDb29yZGluYXRlOiBcIlxubGV0IHhJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG54SW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XG5sZXQgeUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbnlMYWJlbC5jbGFzc0xpc3QuYWRkKCdhdHRhY2tMYWJlbCcpO1xueUxhYmVsLnRleHRDb250ZW50ID0gXCJJbnB1dCBZIENvb3JkaW5hdGU6IFwiXG5sZXQgeUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbnlJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcblxuZnVuY3Rpb24gcmV0dXJuWEZvcm0oKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtQ29udGFpbmVyJylcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoeExhYmVsKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoeElucHV0KTtcbiAgICByZXR1cm4gY29udGFpbmVyXG59XG5mdW5jdGlvbiByZXR1cm5ZRm9ybSgpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1Db250YWluZXInKVxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh5TGFiZWwpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh5SW5wdXQpO1xuICAgIHJldHVybiBjb250YWluZXJcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlRm9ybSgpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1Db250YWluZXInKVxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZXR1cm5YRm9ybSgpKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocmV0dXJuWUZvcm0oKSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lclxufVxuXG4vL3B1dCBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgQUkgYm9hcmQsIHN1Y2ggdGhhdCBlYWNoIHNxdWFyZSwgd2hlbiB5b3UgY2xpY2sgaXQsXG4vL3lpZWxkcyBYIGFuZCBZIHZhbHVlcyB3aGljaCBpdCBwbHVncyBpbnRvIGF0dGFja0FJKClcblxuXG5cbmV4cG9ydCB7IHJlc3RhcnRCb2FyZCwgcmVsb2FkQm9hcmRzLCBnZW5lcmF0ZUhVRCwgYXR0YWNrQUksIGdlbmVyYXRlRm9ybSwgcG9wdWxhdGVQbGF5ZXIsIHNpbXBsZVBvcHVsYXRlLCBzaW1wbGVQb3B1bGF0ZUFJLCBkZXBvcHVsYXRlUGxheWVyIH1cbiIsImltcG9ydCB7IEdhbWVib2FyZCwgU3F1YXJlIH0gZnJvbSAnLi4vZ2FtZUFwcExvZ2ljL2dhbWVib2FyZC5qcyc7XG5pbXBvcnQgeyBBSSB9IGZyb20gJy4uL3BsYXllckNvbnRyb2xzL2FpLmpzJztcbmltcG9ydCB7IFBsYXllciB9IGZyb20gJy4uL3BsYXllckNvbnRyb2xzL3BsYXllci5qcyc7XG5pbXBvcnQgeyBhdHRhY2tBSSwgcG9wdWxhdGVQbGF5ZXIsIHNpbXBsZVBvcHVsYXRlQUksIGRlcG9wdWxhdGVQbGF5ZXIsIHJlbG9hZEJvYXJkcywgcmVzdGFydEJvYXJkIH0gZnJvbSAnLi9jb250cm9sbGVyLmpzJztcblxuXG4vL3N1aXRlIG9mIGZ1bmN0aW9ucyBmb3IgbG9hZGluZyB0aGUgdHdvIERPTSBib2FyZHMgJiBzY29yZSBrZWVwZXIgY2FyZFxuZnVuY3Rpb24gc3F1YXJlTG9hZGVyKGNvb3JkaW5hdGUsIHBsYXllciA9IFwiYWlcIikge1xuICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZCgnc3F1YXJlJyk7XG4gICAgaWYgKGNvb3JkaW5hdGUuaXNIaXQgPT0gdHJ1ZSkge1xuICAgICAgICBzcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjNmVlN2I3XCI7XG4gICAgfVxuICAgIGlmIChwbGF5ZXIgPT0gXCJhaVwiKSB7XG4gICAgICAgIHNxdWFyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCB4ID0gY29vcmRpbmF0ZS5YO1xuICAgICAgICAgICAgbGV0IHkgPSBjb29yZGluYXRlLlk7XG4gICAgICAgICAgICBhdHRhY2tBSSh4LCB5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChjb29yZGluYXRlLmlzSGl0ID09IHRydWUgJiYgY29vcmRpbmF0ZS5jb250YWluc1NoaXAgPT0gdHJ1ZSkge1xuICAgICAgICBzcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZWRcIjtcbiAgICAgICAgc3F1YXJlLnRleHRDb250ZW50ID0gXCJYXCI7XG4gICAgfVxuICAgIGlmIChjb29yZGluYXRlLmNvbnRhaW5zU2hpcCA9PSB0cnVlKSB7XG4gICAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJlZFwiO1xuICAgIH1cbiAgICAvL2lmIChwbGF5ZXIgIT0gXCJhaVwiKSB7XG4gICAgICAgIC8vaWYgKGNvb3JkaW5hdGUuY29udGFpbnNTaGlwID09IHRydWUpIHtcbiAgICAgICAgICAgIC8vc3F1YXJlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmVkXCI7XG4gICAgICAgIC8vfVxuICAgIC8vfVxuICAgIHJldHVybiBzcXVhcmU7XG59XG5mdW5jdGlvbiBib2FyZExvYWRlcihib2FyZCwgcGxheWVyKSB7XG4gICAgbGV0IGFycmF5T2ZHcmlkQ29vcmRpbmF0ZXMgPSBib2FyZC5ncmlkO1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZ3JpZC1jb250YWluZXInKTtcbiAgICBhcnJheU9mR3JpZENvb3JkaW5hdGVzLmZvckVhY2goKGNvb3JkaW5hdGUpID0+IHtcbiAgICAgICAgbGV0IHNxdWFyZSA9IHNxdWFyZUxvYWRlcihjb29yZGluYXRlLCBwbGF5ZXIpO1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9KVxuICAgIHJldHVybiBjb250YWluZXI7XG59O1xuZnVuY3Rpb24geENvb3JkaW5hdGVMb2FkZXIoKSB7XG4gICAgbGV0IGFycmF5T2ZYQ29vcmRpbmF0ZXMgPSBbJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onXTtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3hDb29yZGluYXRlQ29udGFpbmVyJyk7XG4gICAgYXJyYXlPZlhDb29yZGluYXRlcy5mb3JFYWNoKChjb29yZGluYXRlKSA9PiB7XG4gICAgICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ3VwcGVyU3F1YXJlJyk7XG4gICAgICAgIHNxdWFyZS50ZXh0Q29udGVudCA9IGNvb3JkaW5hdGU7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgIH0pO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiB4Q29vcmRpbmF0ZURvdWJsZXIoKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd4Q29vcmRpbmF0ZUNvbnRhaW5lckRvdWJsZScpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoeENvb3JkaW5hdGVMb2FkZXIoKSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIHlDb29yZGluYXRlTG9hZGVyKCkge1xuICAgIGxldCBhcnJheU9mWENvb3JkaW5hdGVzID0gWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwXTtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3lDb29yZGluYXRlQ29udGFpbmVyJyk7XG4gICAgYXJyYXlPZlhDb29yZGluYXRlcy5mb3JFYWNoKChjb29yZGluYXRlKSA9PiB7XG4gICAgICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ2xlZnRTcXVhcmUnKTtcbiAgICAgICAgc3F1YXJlLnRleHRDb250ZW50ID0gY29vcmRpbmF0ZTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIHBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIoYm9hcmQpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZUJvYXJkQ29udGFpbmVyJylcbiAgICBsZXQgc3ViY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3ViY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3N1YmNvbnRhaW5lcicpO1xuICAgICAgICBzdWJjb250YWluZXIuYXBwZW5kQ2hpbGQoeUNvb3JkaW5hdGVMb2FkZXIoKSk7XG4gICAgICAgIHN1YmNvbnRhaW5lci5hcHBlbmRDaGlsZChib2FyZExvYWRlcihib2FyZCwgXCJwbGF5ZXJcIikpO1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoeENvb3JkaW5hdGVMb2FkZXIoKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzdWJjb250YWluZXIpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiBhaUNvb3JkaW5hdGVkQm9hcmRMb2FkZXIoYm9hcmQpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZUJvYXJkQ29udGFpbmVyJylcbiAgICBsZXQgc3ViY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3ViY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3N1YmNvbnRhaW5lcicpO1xuICAgICAgICBzdWJjb250YWluZXIuYXBwZW5kQ2hpbGQoeUNvb3JkaW5hdGVMb2FkZXIoKSk7XG4gICAgICAgIHN1YmNvbnRhaW5lci5hcHBlbmRDaGlsZChib2FyZExvYWRlcihib2FyZCkpO1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoeENvb3JkaW5hdGVMb2FkZXIoKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzdWJjb250YWluZXIpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiB0d29Cb2FyZENvbnRlbnRHZW5lcmF0b3IocGxheWVyQm9hcmQsIG9wcG9uZW50Qm9hcmQpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2RvdWJsZUJvYXJkQ29udGFpbmVyJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIocGxheWVyQm9hcmQpKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYWlDb29yZGluYXRlZEJvYXJkTG9hZGVyKG9wcG9uZW50Qm9hcmQpKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gdHdvQm9hcmRET01Mb2FkZXIocGxheWVyQm9hcmQsIG9wcG9uZW50Qm9hcmQpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0d29Cb2FyZENvbnRlbnRHZW5lcmF0b3IocGxheWVyQm9hcmQsIG9wcG9uZW50Qm9hcmQpKTsgXG59XG5mdW5jdGlvbiBzY29yZUtlZXBlckdlbmVyYXRvcihwbGF5ZXIsIGlucHV0KSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaW5nbGVCb2FyZFNjb3JlQ29udGFpbmVyJylcbiAgICBsZXQgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgIGxldCBzY29yZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSBwbGF5ZXIgKyBcIiBTY29yZTogXCJcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzY29yZSk7XG4gICAgc2NvcmUudGV4dENvbnRlbnQgPSBpbnB1dCArIFwiLzVcIjtcbiAgICByZXR1cm4gY29udGFpbmVyXG59XG5mdW5jdGlvbiBkb3VibGVTY29yZUtlZXBlckdlbmVyYXRvcihwbGF5ZXIxLCBpbnB1dDEsIHBsYXllcjIsIGlucHV0Mikge1xuICAgIGxldCBzY29yZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNjb3JlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Njb3JlS2VlcGVyQ29udGFpbmVyJyk7XG4gICAgc2NvcmVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2NvcmVLZWVwZXJHZW5lcmF0b3IocGxheWVyMSwgaW5wdXQxKSk7XG4gICAgc2NvcmVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2NvcmVLZWVwZXJHZW5lcmF0b3IocGxheWVyMiwgaW5wdXQyKSk7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICBjb250YWluZXIucHJlcGVuZChzY29yZUNvbnRhaW5lcilcbn1cbmZ1bmN0aW9uIGFubm91bmNlV2lubmVyQ2FyZCh0ZXh0KSB7XG4gICAgbGV0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ3dpbm5lckNhcmQnKTtcbiAgICBjYXJkLmFwcGVuZENoaWxkKGFubm91bmNlV2lubmVyVGV4dCh0ZXh0KSk7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChyZXN0YXJ0R2FtZUJ1dHRvbigpKTtcbiAgICBjb250YWluZXIuZmlyc3RDaGlsZC5hcHBlbmRDaGlsZChjYXJkKTtcbn1cbmZ1bmN0aW9uIGFubm91bmNlV2lubmVyVGV4dCh0ZXh0KSB7XG4gICAgbGV0IGFubm91bmNlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgYW5ub3VuY2VtZW50LmNsYXNzTGlzdC5hZGQoJ3dpbm5lckFubm91bmNlbWVudFRleHQnKTtcbiAgICBhbm5vdW5jZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIHJldHVybiBhbm5vdW5jZW1lbnQ7XG59XG5mdW5jdGlvbiByZXN0YXJ0R2FtZUJ1dHRvbigpIHtcbiAgICBsZXQgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gXCJSZXN0YXJ0IEdhbWVcIjtcbiAgICBidXR0b24uY2xhc3NMaXN0LmFkZChcInBsYWNlbWVudEJ1dHRvblwiKTtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCByZXN0YXJ0Qm9hcmQpXG4gICAgcmV0dXJuIGJ1dHRvbjtcbn1cblxuXG5cbmNsYXNzIGdhbWVCb2FyZExvYWRlciB7XG4gICAgY29uc3RydWN0b3IocGxheWVyQm9hcmQsIHBsYXllciwgYWlCb2FyZCwgYWkpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZCA9IHBsYXllckJvYXJkO1xuICAgICAgICB0aGlzLnBsYXllciA9IHBsYXllcjtcbiAgICAgICAgdGhpcy5haUJvYXJkID0gYWlCb2FyZDtcbiAgICAgICAgdGhpcy5haSA9IGFpXG4gICAgICAgIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yKFwiUGxheWVyXCIsIDAsIFwiQUlcIiwgMCk7XG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgfVxuICAgIHJlbG9hZEJvYXJkcygpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgICAgICAgdGhpcy5haUJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xuICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgIH1cbiAgICBwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKTtcbiAgICAgICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkLm5leHRTaWJsaW5nKTtcbiAgICAgICAgdHdvQm9hcmRET01Mb2FkZXIodGhpcy5wbGF5ZXJCb2FyZCwgdGhpcy5haUJvYXJkKTtcbiAgICB9XG4gICAgZGVwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5kZXBvcHVsYXRlU2hpcChzaXplLCB4LCB5LCBkaXJlY3Rpb24pO1xuICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgIH1cbiAgICBzaW1wbGVQb3B1bGF0ZSgpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0knLCA0LCBcImVhc3RcIik7XG4gICAgICAgIHRoaXMucGxheWVyQm9hcmQucG9wdWxhdGVTaGlwKDQsICdDJywgNSwgXCJlYXN0XCIpO1xuICAgICAgICB0aGlzLnBsYXllckJvYXJkLnBvcHVsYXRlU2hpcCgzLCAnSicsIDYsIFwic291dGhcIik7XG4gICAgICAgIHRoaXMucGxheWVyQm9hcmQucG9wdWxhdGVTaGlwKDMsICdCJywgOCwgXCJzb3V0aFwiKTtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0UnLCA5LCBcImVhc3RcIik7XG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZC5uZXh0U2libGluZyk7XG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgfVxuICAgIGF0dGFja0FJKHgsIHkpIHtcbiAgICAgICAgLy9pZiAodGhpcy5haUJvYXJkLlggPT0geCB8fCB0aGlzLmFpQm9hcmQuWSA9PSB5KSB7XG4gICAgICAgICAgICAvL3JldHVybiBjb25zb2xlLmxvZygncmVwZWF0IGhpdCcpO1xuICAgICAgICAvL31cbiAgICAgICAgLy9lbHNlIHsgXG4gICAgICAgIHRoaXMuYWlCb2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgICAgICB0aGlzLmtlZXBTY29yZSgpXG4gICAgICAgIC8vfVxuICAgIH1cbiAgICBhdHRhY2tQbGF5ZXIoeCwgeSkge1xuICAgICAgICB0aGlzLnBsYXllckJvYXJkLnJlY2VpdmVBdHRhY2soeCwgeSk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZC5uZXh0U2libGluZyk7XG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgICAgIHRoaXMua2VlcFNjb3JlKClcbiAgICB9XG4gICAgcHJvZHVjZUFycmF5T2ZQbGF5ZXJTaGlwcygpIHtcbiAgICAgICAgbGV0IHBsYXllclNoaXBzID0gW11cbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5ncmlkLmZvckVhY2goKHNxdWFyZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHNxdWFyZS5zaGlwICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBwbGF5ZXJTaGlwcy5wdXNoKHNxdWFyZS5zaGlwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLy9wbGF5ZXJTaGlwcyBjb250YWlucyBkdXBsaWNhdGVzIG9mIGVhY2ggc2hpcCwgc28gSSBmaWx0ZXIgdGhlIGFycmF5IGJlbG93XG4gICAgICAgIGxldCBwbGF5ZXJTaGlwc0ZpbHRlcmVkID0gW107XG4gICAgICAgIHBsYXllclNoaXBzLmZvckVhY2goc2hpcCA9PiB7XG4gICAgICAgICAgICBpZiAoIXBsYXllclNoaXBzRmlsdGVyZWQuaW5jbHVkZXMoc2hpcCkpIHtcbiAgICAgICAgICAgICAgICBwbGF5ZXJTaGlwc0ZpbHRlcmVkLnB1c2goc2hpcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBwbGF5ZXJTaGlwc0ZpbHRlcmVkO1xuICAgIH1cbiAgICBwcm9kdWNlQXJyYXlPZkFpU2hpcHMoKSB7XG4gICAgICAgIGxldCBhaVNoaXBzID0gW11cbiAgICAgICAgdGhpcy5haUJvYXJkLmdyaWQuZm9yRWFjaCgoc3F1YXJlKSA9PiB7XG4gICAgICAgICAgICBpZiAoc3F1YXJlLnNoaXAgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGFpU2hpcHMucHVzaChzcXVhcmUuc2hpcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC8vcGxheWVyU2hpcHMgY29udGFpbnMgZHVwbGljYXRlcyBvZiBlYWNoIHNoaXAsIHNvIEkgZmlsdGVyIHRoZSBhcnJheSBiZWxvd1xuICAgICAgICBsZXQgYWlTaGlwc0ZpbHRlcmVkID0gW107XG4gICAgICAgIGFpU2hpcHMuZm9yRWFjaChzaGlwID0+IHtcbiAgICAgICAgICAgIGlmICghYWlTaGlwc0ZpbHRlcmVkLmluY2x1ZGVzKHNoaXApKSB7XG4gICAgICAgICAgICAgICAgYWlTaGlwc0ZpbHRlcmVkLnB1c2goc2hpcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBhaVNoaXBzRmlsdGVyZWQ7XG4gICAgfVxuICAgIGtlZXBTY29yZSgpIHtcbiAgICAgICAgbGV0IHBsYXllclNoaXBzID0gdGhpcy5wcm9kdWNlQXJyYXlPZlBsYXllclNoaXBzKCk7XG4gICAgICAgIGxldCBhaVNoaXBzID0gdGhpcy5wcm9kdWNlQXJyYXlPZkFpU2hpcHMoKTtcbiAgICAgICAgbGV0IHBsYXllclRhbGx5ID0gMFxuICAgICAgICBsZXQgYWlUYWxseSA9IDBcbiAgICAgICAgcGxheWVyU2hpcHMuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNoaXAuaGl0cy5sZW5ndGggPT0gc2hpcC5zaXplKSB7XG4gICAgICAgICAgICAgICAgcGxheWVyVGFsbHkgKz0gMVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICBhaVNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgICAgICAgIGlmIChzaGlwLmhpdHMubGVuZ3RoID09IHNoaXAuc2l6ZSkge1xuICAgICAgICAgICAgICAgIGFpVGFsbHkgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZCk7XG4gICAgICAgIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yKFwiUGxheWVyXCIsIGFpVGFsbHksIFwiQUlcIiwgcGxheWVyVGFsbHkpO1xuICAgICAgICBjb25zb2xlLmxvZyhcImFpVGFsbHkgPSBcIiArIGFpVGFsbHkpO1xuICAgICAgICBjb25zb2xlLmxvZyhcInBsYXllclRhbGx5ID1cIiArIHBsYXllclRhbGx5KTtcbiAgICAgICAgaWYgKGFpVGFsbHkgPT0gNSkge1xuICAgICAgICAgICAgYW5ub3VuY2VXaW5uZXJDYXJkKFwiWW91IHdpbiFcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBsYXllclRhbGx5ID09IDUpIHtcbiAgICAgICAgICAgIGFubm91bmNlV2lubmVyQ2FyZChcIkFJIHdpbnMhXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vY29uc3RydWN0IGEgbGlzdCBvZiBnYW1lYm9hcmQuZ3JpZCBzaGlwc1xuICAgICAgICAvL2ZvciBhbnkgc2hpcCwgaWYgc2hpcC5oaXRzID09IHNpemUsIGFkZCArMSB0byBzY29yZVxuICAgICAgICAvL2lucHV0IHNjb3JlIGluIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yXG4gICAgfVxuICAgIGNvcHlBSWdyaWQoKSB7XG4gICAgICAgIGxldCBhcnJheSA9IHRoaXMuYWlCb2FyZC5ncmlkLnNsaWNlKCk7XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG4gICAgcmFuZG9tUGFyYW1ldGVyU2VsZWN0b3IoYXJyYXksIHNpemUpIHtcbiAgICAgICAgbGV0IHJhbmRvbSA9IGFycmF5W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFycmF5Lmxlbmd0aCldO1xuICAgICAgICBsZXQgeCA9IHJhbmRvbS5YO1xuICAgICAgICBsZXQgeSA9IHJhbmRvbS5ZO1xuICAgICAgICBsZXQgaW5kZXggPSBhcnJheS5pbmRleE9mKHJhbmRvbSk7XG4gICAgICAgIGxldCBkaXJlY3Rpb24gPSB0aGlzLnJhbmRvbURpcmVjdGlvblByb2R1Y2VyKCk7XG4gICAgICAgIGFycmF5LnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIGlmICh0aGlzLmFpQm9hcmQucG9wdWxhdGVTaGlwKHNpemUsIHgsIHksIGRpcmVjdGlvbikgPT0gJ292ZXJmbG93IScpIHtcbiAgICAgICAgICAgIHRoaXMucmFuZG9tUGFyYW1ldGVyU2VsZWN0b3IoYXJyYXkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5haUJvYXJkLnBvcHVsYXRlU2hpcChzaXplLCB4LCB5LCBkaXJlY3Rpb24pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJhbmRvbURpcmVjdGlvblByb2R1Y2VyKCkge1xuICAgICAgICBsZXQgbnVtID0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgaWYgKG51bSA+PSAuNzUpIHsgcmV0dXJuIFwiZWFzdFwiIH1cbiAgICAgICAgaWYgKG51bSA8PSAuMjUpIHtyZXR1cm4gXCJ3ZXN0XCJ9XG4gICAgICAgIGlmIChudW0gPiAuMjUgJiYgbnVtIDwgLjUpIHsgcmV0dXJuIFwic291dGhcIiB9XG4gICAgICAgIGVsc2UgeyByZXR1cm4gXCJub3J0aFwiIH1cbiAgICB9XG4gICAgcGxhY2VPbmVBSVNoaXBBdFJhbmRvbShzaXplKSB7XG4gICAgICAgIGxldCBjb29yZGluYXRlID0gdGhpcy5yYW5kb21QYXJhbWV0ZXJQcm9kdWNlcigpO1xuICAgICAgICBsZXQgeCA9IGNvb3JkaW5hdGVbMF07XG4gICAgICAgIGxldCB5ID0gY29vcmRpbmF0ZVsxXTtcbiAgICAgICAgbGV0IGRpcmVjdGlvbiA9IHRoaXMucmFuZG9tRGlyZWN0aW5vUHJvZHVjZXIoKTtcbiAgICAgICAgbGV0IHN0YXJ0aW5nU3F1YXJlID0gdGhpcy5haUJvYXJkLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHggJiYgc3F1YXJlLlkgPT0geSkpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFpQm9hcmQuZ3JpZCk7XG4gICAgICAgIGlmIChzdGFydGluZ1NxdWFyZS5jb250YWluc1NoaXAgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgdGhpcy5wbGFjZU9uZUFJU2hpcEF0UmFuZG9tKHNpemUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmFpQm9hcmQucG9wdWxhdGVTaGlwKHNpemUsIHgsIHksIGRpcmVjdGlvbikgPT0gJ292ZXJmbG93IScpIHtcbiAgICAgICAgICAgIHRoaXMucGxhY2VPbmVBSVNoaXBBdFJhbmRvbShzaXplKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzaW1wbGVQb3B1bGF0ZUFJKCkge1xuICAgICAgICBsZXQgYXJyYXkgPSB0aGlzLmNvcHlBSWdyaWQoKTtcbiAgICAgICAgdGhpcy5yYW5kb21QYXJhbWV0ZXJTZWxlY3RvcihhcnJheSwgMik7XG4gICAgICAgIHRoaXMucmFuZG9tUGFyYW1ldGVyU2VsZWN0b3IoYXJyYXksIDIpO1xuICAgICAgICB0aGlzLnJhbmRvbVBhcmFtZXRlclNlbGVjdG9yKGFycmF5LCAzKTtcbiAgICAgICAgdGhpcy5yYW5kb21QYXJhbWV0ZXJTZWxlY3RvcihhcnJheSwgMyk7XG4gICAgICAgIHRoaXMucmFuZG9tUGFyYW1ldGVyU2VsZWN0b3IoYXJyYXksIDQpO1xuICAgICAgICAvL3RoaXMucGxhY2VPbmVBSVNoaXBBdFJhbmRvbSg0KTtcbiAgICAgICAgLy90aGlzLmFpQm9hcmQucG9wdWxhdGVTaGlwKDIsIHhbMF0sIHhbMV0sIFwiZWFzdFwiKTtcbiAgICAgICAgLy90aGlzLmFpQm9hcmQucG9wdWxhdGVTaGlwKDQsICdDJywgNSwgXCJlYXN0XCIpO1xuICAgICAgICAvL3RoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoMywgJ0onLCA2LCBcInNvdXRoXCIpO1xuICAgICAgICAvL3RoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoMywgJ0InLCA4LCBcInNvdXRoXCIpO1xuICAgICAgICAvL3RoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0UnLCA5LCBcImVhc3RcIik7XG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZC5uZXh0U2libGluZyk7XG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgfVxufVxuXG4vL3N1aXRlIGZvciBsb2FkaW5nIGNhcnJpZXIgcGxhY2VtZW50IG1vZHVsZSBiZWZvcmUgZ2FtZSBiZWdpbnNcblxubGV0IHBsYWNlbWVudENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xucGxhY2VtZW50Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3BsYWNlbWVudC1tb2R1bGUtY29udGFpbmVyJyk7XG5wbGFjZW1lbnRDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdwbGFjZW1lbnRDb250YWluZXInKTtcbmxldCBwbGFjZW1lbnRCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbmxldCBzaGlwQ291bnQgPSBbXTtcbmZ1bmN0aW9uIHBsYWNlbWVudE1vZHVsZUxvYWRlcigpIHtcbiAgICBwbGFjZW1lbnRDb250YWluZXIuYXBwZW5kQ2hpbGQodG9wVGV4dExvYWRlcigpKTtcbiAgICBwbGFjZW1lbnRDb250YWluZXIuYXBwZW5kQ2hpbGQocGxhY2VtZW50TW9kdWxlTWlkZGxlU3ViQ29udGFpbmVyTG9hZGVyKCkpO1xuICAgIHBsYWNlbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZChib3R0b21TdWJjb250YWluZXJMb2FkZXIoKSk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwbGFjZW1lbnRDb250YWluZXIpO1xufVxuZnVuY3Rpb24gdG9wVGV4dExvYWRlcigpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3BsYWNlbWVudFRleHRCb3gnKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQodG9wVGV4dENvbnRlbnRMb2FkZXIoJ1BsYWNlIFlvdXIgU2hpcHMhJykpXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5mdW5jdGlvbiB0b3BUZXh0Q29udGVudExvYWRlcih0ZXh0KSB7XG4gICAgbGV0IGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICAgIGguY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50VGV4dENvbnRlbnQnKTtcbiAgICBoLnNldEF0dHJpYnV0ZSgnaWQnLCAncGxhY2VtZW50SGVhZGluZycpO1xuICAgIGgudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIHJldHVybiBoO1xufVxuZnVuY3Rpb24gcGxhY2VtZW50TW9kdWxlTWlkZGxlU3ViQ29udGFpbmVyTG9hZGVyKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnbWlkZGxlU3ViY29udGFpbmVyJylcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocGxhY2VtZW50Qm9hcmRMb2FkZXIoKSk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHJpZ2h0SW5mb0xvYWRlcigpKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gcmlnaHRJbmZvTG9hZGVyKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgncmlnaHRJbmZvU3ViY29udGFpbmVyJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbnNJbnRlZ3JhdG9yKCkpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZXh0Qm94TG9hZGVyKCkpO1xuICAgIHJldHVybiBjb250YWluZXJcbn07XG5mdW5jdGlvbiBidXR0b25zSW50ZWdyYXRvcigpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3JpZ2h0SW5mb0J1dHRvbnNDb250YWluZXInKVxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZXNldFNoaXBCdG5Mb2FkZXIoKSk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGJlZ2luR2FtZUJ0bkxvYWRlcigpKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gcmVzZXRTaGlwQnRuTG9hZGVyKCkge1xuICAgIGxldCByZXNldFNoaXBCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICByZXNldFNoaXBCdG4uY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50QnV0dG9uJyk7XG4gICAgcmVzZXRTaGlwQnRuLnRleHRDb250ZW50ID0gXCJSZXNldCBTaGlwc1wiO1xuICAgIHJlc2V0U2hpcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHJlc2V0U2hpcHMpXG4gICAgcmV0dXJuIHJlc2V0U2hpcEJ0bjtcbn07XG5mdW5jdGlvbiBiZWdpbkdhbWVCdG5Mb2FkZXIoKSB7XG4gICAgbGV0IGJlZ2luQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYmVnaW5CdG4uY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50QnV0dG9uJyk7XG4gICAgYmVnaW5CdG4udGV4dENvbnRlbnQgPSBcIkJlZ2luIEdhbWVcIjtcbiAgICBiZWdpbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNoZWNraWZTaGlwc0FyZUFsbFBsYWNlZCk7XG4gICAgcmV0dXJuIGJlZ2luQnRuO1xufTtcbmZ1bmN0aW9uIHRleHRCb3hMb2FkZXIoKSB7XG4gICAgbGV0IHRleHRCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0ZXh0Qm94LmNsYXNzTGlzdC5hZGQoJ3BsYWNlbWVudEluc3RydWN0aW9uQm94Jyk7XG4gICAgdGV4dEJveC5hcHBlbmRDaGlsZCh0ZXh0Qm94SGVhZGluZ0xvYWRlcigpKTtcbiAgICB0ZXh0Qm94LmFwcGVuZENoaWxkKHRleHRCb3hDb250ZW50TG9hZGVyKFwiUGxhY2UgeW91ciBzaGlwcyBieSBkcmFnZ2luZyB0aGVtIHRvIHlvdXIgZGVzaXJlZCBsb2NhdGlvbi5cIikpO1xuICAgIHRleHRCb3guYXBwZW5kQ2hpbGQodGV4dEJveENvbnRlbnRMb2FkZXIoXCJDbGljayB0aGUgUm90YXRlIGJ1dHRvbiB0byBjaGFuZ2Ugb3JpZW50YXRpb24gb2Ygc2hpcHMgd2FpdGluZyB0byBiZSBwbGFjZWQuXCIpKTtcbiAgICB0ZXh0Qm94LmFwcGVuZENoaWxkKHRleHRCb3hDb250ZW50TG9hZGVyKFwiWW91IGNhbiBhbHNvIHJvdGF0ZSBzaGlwcyBhZnRlciBwbGFjaW5nIHRoZW0gb24gdGhlIGJvYXJkIGJ5IGNsaWNraW5nIG9uIHRoZW0uXCIpKTtcbiAgICB0ZXh0Qm94LmFwcGVuZENoaWxkKHRleHRCb3hDb250ZW50TG9hZGVyKFwiT25jZSB5b3UgaGF2ZSBwbGFjZWQgYWxsIGZpdmUgc2hpcHMsIHByZXNzIHRoZSBCZWdpbiBHYW1lIGJ1dHRvbiB0byBzdGFydC5cIikpO1xuICAgIHJldHVybiB0ZXh0Qm94O1xufVxuZnVuY3Rpb24gdGV4dEJveEhlYWRpbmdMb2FkZXIoKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdoZWFkaW5nQ29udGFpbmVyJyk7XG4gICAgbGV0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgIGhlYWRpbmcudGV4dENvbnRlbnQgPSBcIkluc3RydWN0aW9uc1wiO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChoZWFkaW5nKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gdGV4dEJveENvbnRlbnRMb2FkZXIodGV4dCkge1xuICAgIGxldCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnaW5zdHJ1Y3Rpb25Db250ZW50Jyk7XG4gICAgY29udGVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG59XG5mdW5jdGlvbiBzZWxlY3RTaGlwU3F1YXJlTG9hZGVyKGNvb3JkaW5hdGUpIHtcbiAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ3NxdWFyZScpO1xuICAgIGlmIChjb29yZGluYXRlLmNvbnRhaW5zU2hpcCA9PSB0cnVlKSB7XG4gICAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJlZFwiO1xuICAgICAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgaWQgPSBzcXVhcmUuaWQ7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IGlkLnNwbGl0KFwiXCIpO1xuICAgICAgICAgICAgbGV0IHN0YXJ0aW5nU3F1YXJlID0gcGxhY2VtZW50Qm9hcmQuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gZGF0YVswXSAmJiBzcXVhcmUuWSA9PSBkYXRhWzFdKSk7XG4gICAgICAgICAgICBsZXQgc2l6ZSA9IHN0YXJ0aW5nU3F1YXJlLnNoaXAuc2l6ZTtcbiAgICAgICAgICAgIGxldCB4ID0gc3RhcnRpbmdTcXVhcmUuc2hpcC54U3RhcnQ7XG4gICAgICAgICAgICBsZXQgeSA9IHN0YXJ0aW5nU3F1YXJlLnNoaXAueVN0YXJ0O1xuICAgICAgICAgICAgaWYgKHN0YXJ0aW5nU3F1YXJlLnNoaXAuZGlyZWN0aW9uID09IFwiZWFzdFwiKSB7XG4gICAgICAgICAgICAgICAgcGxhY2VtZW50Qm9hcmQuZGVwb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIGRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIC8vd3JpdGUgZGVwb3B1bGF0ZSBwbGF5ZXIgZnVuY3Rpb25cbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgICAgICAgICBwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBcInNvdXRoXCIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydGluZ1NxdWFyZS5zaGlwLmRpcmVjdGlvbiA9PSBcInNvdXRoXCIpIHtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5kZXBvcHVsYXRlU2hpcChzaXplLCB4LCB5LCBcInNvdXRoXCIpO1xuICAgICAgICAgICAgICAgIGRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIHBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIFwiZWFzdFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZUFsbENoaWxkTm9kZXMocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgICAgIHBsYWNlbWVudE1vZHVsZUxvYWRlcigpO1xuICAgICAgICB9KVxuICAgIH1cbiAgICBzcXVhcmUuc2V0QXR0cmlidXRlKCdpZCcsIGNvb3JkaW5hdGUuWCArIGNvb3JkaW5hdGUuWSk7XG4gICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJkcmFnT3ZlclwiKTtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRHJvcFwiKTtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IGRhdGEgPSBldi5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcInRleHRcIik7XG4gICAgICAgIGxldCBzb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkYXRhKTtcbiAgICAgICAgbGV0IGNvb3JkaW5hdGUgPSBldi50YXJnZXQuaWQ7XG4gICAgICAgIGxldCBzaXplID0gZGF0YTtcbiAgICAgICAgbGV0IHggPSBjb29yZGluYXRlWzBdO1xuICAgICAgICBsZXQgeSA9IGNvb3JkaW5hdGVbMV07XG4gICAgICAgIGlmIChjb29yZGluYXRlWzJdID09IDApIHtcbiAgICAgICAgICAgIGxldCBhcnJheSA9IFtjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdXVxuICAgICAgICAgICAgeSA9IGFycmF5LmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzdGFydGluZ1NxdWFyZSA9IHBsYWNlbWVudEJvYXJkLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHggJiYgc3F1YXJlLlkgPT0geSkpO1xuICAgICAgICBpZiAoc3RhcnRpbmdTcXVhcmUuY29udGFpbnNTaGlwID09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGlmIChyb3RhdGlvblRyYWNrZXIgPT0gMCkge1xuICAgICAgICAgICAgcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgcGxhY2VtZW50Qm9hcmQucG9wdWxhdGVTaGlwKHNpemUsIHgsIHksIFwiZWFzdFwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIFwic291dGhcIik7XG4gICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZW1vdmVBbGxDaGlsZE5vZGVzKHBsYWNlbWVudENvbnRhaW5lcik7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgc2hpcENvdW50LnB1c2goc2l6ZSk7XG4gICAgICAgIHBsYWNlbWVudE1vZHVsZUxvYWRlcigpO1xuICAgIH0pXG4gICAgcmV0dXJuIHNxdWFyZTtcbn1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGxDaGlsZE5vZGVzKHBhcmVudCkge1xuICAgICAgICB3aGlsZSAocGFyZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChwYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICB9XG5mdW5jdGlvbiBzZWxlY3RTaGlwQm9hcmRMb2FkZXIoYm9hcmQpIHtcbiAgICBsZXQgYXJyYXlPZkdyaWRDb29yZGluYXRlcyA9IGJvYXJkLmdyaWQ7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdncmlkLWNvbnRhaW5lcicpO1xuICAgIGFycmF5T2ZHcmlkQ29vcmRpbmF0ZXMuZm9yRWFjaCgoY29vcmRpbmF0ZSkgPT4ge1xuICAgICAgICBsZXQgc3F1YXJlID0gc2VsZWN0U2hpcFNxdWFyZUxvYWRlcihjb29yZGluYXRlKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfSlcbiAgICByZXR1cm4gY29udGFpbmVyO1xufTtcbmZ1bmN0aW9uIHNlbGVjdFNoaXBQbGF5ZXJDb29yZGluYXRlZEJvYXJkTG9hZGVyKGJvYXJkKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaW5nbGVCb2FyZENvbnRhaW5lcicpXG4gICAgbGV0IHN1YmNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHN1YmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzdWJjb250YWluZXInKTtcbiAgICAgICAgc3ViY29udGFpbmVyLmFwcGVuZENoaWxkKHlDb29yZGluYXRlTG9hZGVyKCkpO1xuICAgICAgICBzdWJjb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZWN0U2hpcEJvYXJkTG9hZGVyKGJvYXJkKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHN1YmNvbnRhaW5lcik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5mdW5jdGlvbiBwbGFjZW1lbnRCb2FyZExvYWRlcigpIHtcbiAgICByZXR1cm4gc2VsZWN0U2hpcFBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIocGxhY2VtZW50Qm9hcmQpO1xufTtcbmNvbnN0IHNvdXJjZSA9IFwiXCI7XG5mdW5jdGlvbiByb3RhdGVTaGlwQnV0dG9uTG9hZGVyKCkge1xuICAgIGxldCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBidXR0b24udGV4dENvbnRlbnQgPSBcIlJvdGF0ZVwiO1xuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwbGFjZW1lbnRCdXR0b24nKTtcbiAgICBidXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdyb3RhdGVTaGlwQnV0dG9uJyk7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICByb3RhdGVPbkNsaWNrKClcbiAgICB9KTtcbiAgICByZXR1cm4gYnV0dG9uO1xufVxuZnVuY3Rpb24gcm90YXRlT25DbGljaygpIHtcbiAgICAvL2xldCBjbGFzc0NvbnRhaW5lcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiZGl2LnNpbmdsZVNoaXBDbGFzc0NvbnRhaW5lclwiKTtcbiAgICBsZXQgaW5kaXZpZHVhbFNoaXBDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdi5zaGlwXCIpO1xuICAgIGluZGl2aWR1YWxTaGlwQ29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlLnN0eWxlLmZsZXhEaXJlY3Rpb24gPT0gXCJjb2x1bW5cIikgeyBub2RlLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSBcInJvd1wiOyByb3RhdGlvblRyYWNrZXIgPSAwOyB9XG4gICAgICAgIGVsc2UgeyBub2RlLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSBcImNvbHVtblwiOyByb3RhdGlvblRyYWNrZXIgPSAxOyB9XG4gICAgfSk7XG4gICAgLy9jbGFzc0NvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAvL2lmIChyb3RhdGlvblRyYWNrZXIgPT0gMSkgeyBub2RlLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSBcInJvd1wiOyB9XG4gICAgICAgIC8vZWxzZSB7IG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9IFwiY29sdW1uXCI7IH1cbiAgICAvL30pXG4gICAgY2hlY2tDbGFzc0NvbnRhaW5lck9yaWVudGF0aW9uKCk7XG59XG4vL3RoaXMgZnVuY3Rpb24gY2hlY2tzIHdoZXRoZXIgdG8gYXJyYW5nZSBzaGlwcyBpbiByb3dzIG9yIGNvbHVtbnMgd2l0aGluIHRoZWlyIGNsYXNzIGNvbnRhaW5lcnNcbmZ1bmN0aW9uIGNoZWNrQ2xhc3NDb250YWluZXJPcmllbnRhdGlvbigpIHtcbiAgICBsZXQgY2xhc3NDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdi5zaW5nbGVTaGlwQ2xhc3NDb250YWluZXJcIik7XG4gICAgY2xhc3NDb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKHJvdGF0aW9uVHJhY2tlciA9PSAxKSB7IG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9IFwicm93XCI7IH1cbiAgICAgICAgZWxzZSB7IG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9IFwiY29sdW1uXCI7IH1cbiAgICB9KTtcbn1cbi8vVGhpcyByb3RhdGlvblRyYWNrZXIgdGVsbHMgdGhlIHNoaXBNYWtlcigpIHdoZXRoZXIgdG8gcG9zaXRpb24gc2hpcHMgdmVydGljYWxseSBvciBob3Jpem9udGFsbHkuXG4gICAgLy8wIGNvbW1hbmRzIHNoaXBNYWtlcigpIHRvIHBvc2l0aW9uIHNoaXBzIGhvcml6b250YWxseSwgMSB2ZXJ0aWNhbGx5LlxuICAgIC8vSXQgdHJhY2tzIHdoZXRoZXIgLyB3aGVuIHJvdGF0ZU9uQ2xpY2soKSBoYXMgcm90YXRlZCBzaGlwcyB2ZXJ0aWNhbGx5IG9yIGhvcml6b250YWxseS5cbmxldCByb3RhdGlvblRyYWNrZXIgPSAwO1xuZnVuY3Rpb24gc2hpcE1ha2VyKHNpemUpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3NoaXAnKTtcbiAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKCdkcmFnZ2FibGUnLCAndHJ1ZScpO1xuICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgc2l6ZSk7XG4gICAgaWYgKHJvdGF0aW9uVHJhY2tlciA9PSAxKSB7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJjb2x1bW5cIjtcbiAgICB9XG4gICAgaWYgKHJvdGF0aW9uVHJhY2tlciA9PSAwKSB7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3dcIjtcbiAgICB9XG4gICAgd2hpbGUgKHNpemUgPj0gMSkge1xuICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKCdwbGFjZW1lbnRTcXVhcmUnKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgICAgIHNpemUgPSBzaXplIC0gMTtcbiAgICB9XG4gICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRyYW5zZmVyRGF0YU9uRHJhZ3N0YXJ0KTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gdHJhbnNmZXJEYXRhT25EcmFnc3RhcnQoZXYpIHtcbiAgICAgLy8gQ2hhbmdlIHRoZSBzb3VyY2UgZWxlbWVudCdzIGJhY2tncm91bmQgY29sb3JcbiAgICAgICAgLy8gdG8gc2hvdyB0aGF0IGRyYWcgaGFzIHN0YXJ0ZWRcbiAgICAgICAgZXYuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuYWRkKFwiZHJhZ2dpbmdcIik7XG4gICAgICAgIC8vIENsZWFyIHRoZSBkcmFnIGRhdGEgY2FjaGUgKGZvciBhbGwgZm9ybWF0cy90eXBlcylcbiAgICAgICAgZXYuZGF0YVRyYW5zZmVyLmNsZWFyRGF0YSgpO1xuICAgICAgICBldi5kYXRhVHJhbnNmZXIuc2V0RGF0YShcInRleHQvcGxhaW5cIiwgZXYudGFyZ2V0LmlkKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGV2LmRhdGFUcmFuc2Zlci5nZXREYXRhKFwidGV4dFwiKTtcbiAgICAgICAgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZGF0YSk7XG4gICAgICAgIGV2LmN1cnJlbnRUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImRyYWdlbmRcIiwgdHJhbnNmZXJEYXRhT25EcmFnc3RhcnQpO1xufVxuZnVuY3Rpb24gYm90dG9tU3ViY29udGFpbmVyTG9hZGVyKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnYm90dG9tU3ViY29udGFpbmVyJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHJvdGF0ZVNoaXBCdXR0b25Mb2FkZXIoKSk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXBDb3VudGVyKCkpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiBzaGlwQ291bnRlcigpIHtcbiAgICBsZXQgc2hpcENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNoaXBDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2hpcEFsbENsYXNzZXNDb250YWluZXInKTtcbiAgICBsZXQgc2l6ZVR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNpemVUd28uY2xhc3NMaXN0LmFkZCgnc2luZ2xlU2hpcENsYXNzQ29udGFpbmVyJyk7XG4gICAgbGV0IHNpemVUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNpemVUaHJlZS5jbGFzc0xpc3QuYWRkKCdzaW5nbGVTaGlwQ2xhc3NDb250YWluZXInKTtcbiAgICBsZXQgc2l6ZUZvdXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzaXplRm91ci5jbGFzc0xpc3QuYWRkKCdzaW5nbGVTaGlwQ2xhc3NDb250YWluZXInKTtcbiAgICBpZiAocm90YXRpb25UcmFja2VyID09IDEpIHtcbiAgICAgICAgc2l6ZVR3by5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3dcIjtcbiAgICAgICAgc2l6ZVRocmVlLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSBcInJvd1wiO1xuICAgICAgICBzaXplRm91ci5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3dcIjtcbiAgICB9XG4gICAgaWYgKHNoaXBDb3VudC5maWx0ZXIoeCA9PiB4ID09IDIpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHNpemVUd28uYXBwZW5kQ2hpbGQoc2hpcE1ha2VyKDIpKTtcbiAgICAgICAgc2l6ZVR3by5hcHBlbmRDaGlsZChzaGlwTWFrZXIoMikpO1xuICAgICAgICBzaGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKHNpemVUd28pO1xuICAgIH1cbiAgICBlbHNlIGlmIChzaGlwQ291bnQuZmlsdGVyKHggPT4geCA9PSAyKS5sZW5ndGggPT0gMSkge1xuICAgICAgICBzaXplVHdvLmFwcGVuZENoaWxkKHNoaXBNYWtlcigyKSk7XG4gICAgICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQoc2l6ZVR3byk7XG4gICAgfVxuICAgIGlmIChzaGlwQ291bnQuZmlsdGVyKHggPT4geCA9PSAzKS5sZW5ndGggPT0gMCkge1xuICAgICAgICBzaXplVGhyZWUuYXBwZW5kQ2hpbGQoc2hpcE1ha2VyKDMpKTtcbiAgICAgICAgc2l6ZVRocmVlLmFwcGVuZENoaWxkKHNoaXBNYWtlcigzKSk7XG4gICAgICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQoc2l6ZVRocmVlKTtcbiAgICB9IGVsc2UgaWYgKHNoaXBDb3VudC5maWx0ZXIoeCA9PiB4ID09IDMpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgIHNpemVUaHJlZS5hcHBlbmRDaGlsZChzaGlwTWFrZXIoMykpO1xuICAgICAgICBzaGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKHNpemVUaHJlZSk7XG4gICAgfVxuICAgIGlmIChzaGlwQ291bnQuZmlsdGVyKHggPT4geCA9PSA0KS5sZW5ndGggPT0gMCkge1xuICAgICAgICBzaXplRm91ci5hcHBlbmRDaGlsZChzaGlwTWFrZXIoNCkpO1xuICAgICAgICBzaGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKHNpemVGb3VyKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoaXBDb250YWluZXI7XG59XG5mdW5jdGlvbiBjaGVja2lmU2hpcHNBcmVBbGxQbGFjZWQoKSB7XG4gICAgaWYgKHNoaXBDb3VudC5sZW5ndGggPT0gNSkge1xuICAgICAgICBzaW1wbGVQb3B1bGF0ZUFJKCk7XG4gICAgICAgIHJlbW92ZUFsbENoaWxkTm9kZXMocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChwbGFjZW1lbnRDb250YWluZXIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IGggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxhY2VtZW50SGVhZGluZycpO1xuICAgICAgICBoLnRleHRDb250ZW50ID0gXCJQbGFjZSBBbGwgU2hpcHMgQmVmb3JlIFN0YXJ0aW5nIHRoZSBHYW1lIVwiXG4gICAgICAgIGguc3R5bGUuY29sb3IgPSBcIiNlZjQ0NDRcIjtcbiAgICB9XG59XG5mdW5jdGlvbiByZXNldFNoaXBzKCkge1xuICAgIHBsYWNlbWVudEJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xuICAgIGNsZWFyU2hpcENvdW50KCk7XG4gICAgcmVtb3ZlQWxsQ2hpbGROb2RlcyhwbGFjZW1lbnRDb250YWluZXIpO1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICByZWxvYWRCb2FyZHMoKTtcbiAgICBwbGFjZW1lbnRNb2R1bGVMb2FkZXIoKTtcbn1cbmZ1bmN0aW9uIGNsZWFyU2hpcENvdW50KCkge1xuICAgIHdoaWxlIChzaGlwQ291bnQubGVuZ3RoID49IDEpIHtcbiAgICAgICAgc2hpcENvdW50LnBvcCgpO1xuICAgIH1cbn1cblxuXG5cblxuLy9jcmVhdGUgYSBmdW5jdGlvbiB0aGF0IHBsYWNlcyBhIHR3by1zcXVhcmUgc2hpcFxuICAgIC8vd2hlbiBtb3VzZW92ZXIgc3F1YXJlIFMsIHNxdWFyZSB0dXJucyByZWQgYWxvbmcgd2l0aCB0aGUgc291dGh3YXJkIHNxdWFyZVxuICAgIC8vdGhlbiBhZGQgcm90YXRlIGZ1bmN0aW9uYWxpdHlcblxuZXhwb3J0IHsgZ2FtZUJvYXJkTG9hZGVyLCByZXNldFNoaXBzLCBwbGFjZW1lbnRNb2R1bGVMb2FkZXIsIGFubm91bmNlV2lubmVyQ2FyZCwgcmVtb3ZlQWxsQ2hpbGROb2RlcywgdHdvQm9hcmRET01Mb2FkZXIsIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yIH0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHBsYWNlbWVudE1vZHVsZUxvYWRlciwgYW5ub3VuY2VXaW5uZXJDYXJkIH0gZnJvbSAnLi91c2VySW50ZXJmYWNlL2JvYXJkRE9NbG9hZGVyLmpzJ1xuaW1wb3J0IHsgZ2VuZXJhdGVIVUQsIGdlbmVyYXRlSFVEd2l0aFNoaXBQbGFjZW1lbnQgfSBmcm9tICcuL3VzZXJJbnRlcmZhY2UvY29udHJvbGxlci5qcydcblxuXG5wbGFjZW1lbnRNb2R1bGVMb2FkZXIoKTtcbi8vYW5ub3VuY2VXaW5uZXJDYXJkKCdZb3Ugd2luIScpOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJTaGlwIiwiY29uc3RydWN0b3IiLCJzaXplIiwieFN0YXJ0IiwieVN0YXJ0IiwiZGlyZWN0aW9uIiwiaGl0cyIsImhpdCIsImlzU3VuayIsIlNxdWFyZSIsIlgiLCJZIiwiaXNIaXQiLCJjb250YWluc1NoaXAiLCJzaGlwIiwiR2FtZWJvYXJkIiwiaW5wdXQiLCJ4QXhpcyIsInlBeGlzIiwiZ3JpZCIsIm1ha2VHcmlkIiwicmVjZWl2ZUF0dGFjayIsInhMZXR0ZXIiLCJ5TnVtIiwiZm91bmQiLCJmaW5kIiwic3F1YXJlIiwieCIsInkiLCJwb3B1bGF0ZVNoaXAiLCJpbmRleE9mIiwibmV3U2hpcCIsInN0YXJ0aW5nU3F1YXJlIiwic3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwIiwieUluZGV4IiwiZGVwb3B1bGF0ZVNoaXAiLCJwbGF5ZXJCb2FyZCIsImFpQm9hcmQiLCJwbGF5ZXIiLCJhaSIsImJvYXJkcyIsImRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yIiwidHdvQm9hcmRET01Mb2FkZXIiLCJyZWxvYWRCb2FyZHMiLCJjb250YWluZXIiLCJnZXRFbGVtZW50QnlJZCIsIm5leHRTaWJsaW5nIiwicG9wdWxhdGVQbGF5ZXIiLCJkZXBvcHVsYXRlUGxheWVyIiwic2ltcGxlUG9wdWxhdGUiLCJhdHRhY2tBSSIsImtlZXBTY29yZSIsImF0dGFja1BsYXllciIsInByb2R1Y2VBcnJheU9mUGxheWVyU2hpcHMiLCJwbGF5ZXJTaGlwcyIsImZvckVhY2giLCJwbGF5ZXJTaGlwc0ZpbHRlcmVkIiwiaW5jbHVkZXMiLCJwcm9kdWNlQXJyYXlPZkFpU2hpcHMiLCJhaVNoaXBzIiwiYWlTaGlwc0ZpbHRlcmVkIiwicGxheWVyVGFsbHkiLCJhaVRhbGx5IiwiY29uc29sZSIsImxvZyIsImFubm91bmNlV2lubmVyQ2FyZCIsImNvcHlBSWdyaWQiLCJzbGljZSIsInJhbmRvbVBhcmFtZXRlclNlbGVjdG9yIiwiYXJyYXkiLCJyYW5kb20iLCJNYXRoIiwiZmxvb3IiLCJyYW5kb21EaXJlY3Rpb25Qcm9kdWNlciIsIm51bSIsInBsYWNlT25lQUlTaGlwQXRSYW5kb20iLCJjb29yZGluYXRlIiwicmFuZG9tUGFyYW1ldGVyUHJvZHVjZXIiLCJyYW5kb21EaXJlY3Rpbm9Qcm9kdWNlciIsInNpbXBsZVBvcHVsYXRlQUkiLCJwbGF5ZXJQb3B1bGF0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsImFpUG9wdWxhdGVCdXR0b24iLCJhdHRhY2tBSUJ1dHRvbiIsImF0dGFja1BsYXllckJ1dHRvbiIsInJlc3RhcnRCb2FyZCIsInJlbW92ZUFsbENoaWxkTm9kZXMiLCJwbGFjZW1lbnRNb2R1bGVMb2FkZXIiLCJyZXNldFNoaXBzIiwiYWlBcnJheSIsImFsZXJ0Iiwic2V0VGltZW91dCIsInBsYXllckFycmF5IiwieExhYmVsIiwieUxhYmVsIiwiYm9hcmRMb2FkZXIiLCJib2FyZCIsImFycmF5T2ZHcmlkQ29vcmRpbmF0ZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzcXVhcmVMb2FkZXIiLCJ4Q29vcmRpbmF0ZUxvYWRlciIsInlDb29yZGluYXRlTG9hZGVyIiwib3Bwb25lbnRCb2FyZCIsInN1YmNvbnRhaW5lciIsInBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIiLCJhaUNvb3JkaW5hdGVkQm9hcmRMb2FkZXIiLCJ0d29Cb2FyZENvbnRlbnRHZW5lcmF0b3IiLCJzY29yZUtlZXBlckdlbmVyYXRvciIsImxhYmVsIiwic2NvcmUiLCJwbGF5ZXIxIiwiaW5wdXQxIiwicGxheWVyMiIsImlucHV0MiIsInNjb3JlQ29udGFpbmVyIiwicHJlcGVuZCIsInRleHQiLCJjYXJkIiwiYW5ub3VuY2VtZW50IiwiYW5ub3VuY2VXaW5uZXJUZXh0IiwiYnV0dG9uIiwicmVzdGFydEdhbWVCdXR0b24iLCJwbGFjZW1lbnRDb250YWluZXIiLCJwbGFjZW1lbnRCb2FyZCIsInNoaXBDb3VudCIsImgiLCJ0b3BUZXh0Q29udGVudExvYWRlciIsInRvcFRleHRMb2FkZXIiLCJzcGxpdCIsImJvZHkiLCJldiIsInByZXZlbnREZWZhdWx0IiwiZGF0YVRyYW5zZmVyIiwiZ2V0RGF0YSIsInJvdGF0aW9uVHJhY2tlciIsInNlbGVjdFNoaXBTcXVhcmVMb2FkZXIiLCJzZWxlY3RTaGlwQm9hcmRMb2FkZXIiLCJzZWxlY3RTaGlwUGxheWVyQ29vcmRpbmF0ZWRCb2FyZExvYWRlciIsInJlc2V0U2hpcEJ0biIsInJlc2V0U2hpcEJ0bkxvYWRlciIsImJlZ2luQnRuIiwiY2hlY2tpZlNoaXBzQXJlQWxsUGxhY2VkIiwiYmVnaW5HYW1lQnRuTG9hZGVyIiwiYnV0dG9uc0ludGVncmF0b3IiLCJ0ZXh0Qm94IiwiaGVhZGluZyIsInRleHRCb3hIZWFkaW5nTG9hZGVyIiwidGV4dEJveENvbnRlbnRMb2FkZXIiLCJ0ZXh0Qm94TG9hZGVyIiwicmlnaHRJbmZvTG9hZGVyIiwicGxhY2VtZW50TW9kdWxlTWlkZGxlU3ViQ29udGFpbmVyTG9hZGVyIiwicXVlcnlTZWxlY3RvckFsbCIsIm5vZGUiLCJmbGV4RGlyZWN0aW9uIiwicm90YXRlU2hpcEJ1dHRvbkxvYWRlciIsInNoaXBDb250YWluZXIiLCJzaXplVHdvIiwic2l6ZVRocmVlIiwic2l6ZUZvdXIiLCJmaWx0ZXIiLCJzaGlwTWFrZXIiLCJzaGlwQ291bnRlciIsImJvdHRvbVN1YmNvbnRhaW5lckxvYWRlciIsInBhcmVudCIsInRyYW5zZmVyRGF0YU9uRHJhZ3N0YXJ0IiwiY3VycmVudFRhcmdldCIsImNsZWFyRGF0YSIsInNldERhdGEiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29sb3IiLCJwb3AiLCJjbGVhclNoaXBDb3VudCJdLCJzb3VyY2VSb290IjoiIn0=