(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: arial;\n}\nbody {\n    position: relative;\n    background-color: #d6d3d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n.middleSubcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.middleSubcontainer {\n    gap: 30px;\n}\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 1px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n.winnerAnnouncement {\n    font-size: 80px;\n}\n.selectSquare {\n    \n}"],sourceRoot:""}]);const l=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(o[s]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);i&&o[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},o=[],l=0;l<n.length;l++){var s=n[l],d=i.base?s[0]+i.base:s[0],p=r[d]||0,A="".concat(d," ").concat(p);r[d]=p+1;var c=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==c)e[c].references++,e[c].updater(u);else{var h=a(u,i);i.byIndex=l,e.splice(l,0,{identifier:A,updater:h,references:1})}o.push(A)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=i(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var l=t(r[o]);e[l].references--}for(var s=i(n,a),d=0;d<r.length;d++){var p=t(r[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),a=t.n(i),r=t(569),o=t.n(r),l=t(565),s=t.n(l),d=t(216),p=t.n(d),A=t(589),c=t.n(A),u=t(426),h={};h.styleTagTransform=c(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=p(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n,e,t,i){this.size=n,this.hits=[],this.xStart=e,this.yStart=t,this.direction=null}hit(){return this.hits.push("hit"),this.hits.length==this.size?this.isSunk():this.hit}isSunk(){return"sunk!"}}class x{constructor(n,e){this.X=n,this.Y=e,this.isHit=!1,this.containsShip=!1,this.ship=null}}class m{constructor(n){this.xAxis=["A","B","C","D","E","F","G","H","I","J"],this.yAxis=[1,2,3,4,5,6,7,8,9,10],this.grid=this.makeGrid()}receiveAttack(n,e){let t=this.grid.find((t=>t.X==n&&t.Y==e));return t.isHit=!0,1==t.containsShip?(t.ship.hit(),t.ship):t.ship}makeGrid(){let n=[];for(let e=0;e<this.xAxis.length;e++)for(let t=0;t<this.yAxis.length;t++){let i=new x(this.xAxis[e],this.yAxis[t]);n.push(i)}return n}populateShip(n,e,t,i){if(n>1){if("north"==i&&t<n)return"overflow!";if("south"==i&&t-1>10-n)return"overflow!";if("west"==i&&this.xAxis.indexOf(e)<n-1)return"overflow!";if("east"==i&&this.xAxis.indexOf(e)>10-n)return"overflow!"}let a=new C(n,e,t,i);a.direction=i;let r=this.grid.find((n=>n.X==a.xStart&&n.Y==a.yStart)),o=[];r.containsShip=!0,r.ship=a,o.push(r);let l=this.grid.indexOf(r);for(;n>1;){if("north"==i){t-=1;let e=this.grid.find((n=>n.X==a.xStart&&n.Y==t));e.containsShip=!0,e.ship=a,o.push(e),n-=1}if("south"==i){l+=1;let e=this.grid[l];e.containsShip=!0,e.ship=a,o.push(e),n-=1}else if("east"==i){e=this.xAxis[this.xAxis.indexOf(e)+1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),n-=1}else if("west"==i){e=this.xAxis[this.xAxis.indexOf(e)-1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!0,t.ship=a,o.push(t),n-=1}}return o}depopulateShip(n,e,t,i){let a=new C(n,e,t),r=this.grid.find((n=>n.X==a.xStart&&n.Y==a.yStart)),o=[];r.containsShip=!1,r.ship=null,o.push(r);let l=this.grid.indexOf(r);for(;n>1;){if("north"==i){t-=1;let e=this.grid.find((n=>n.X==a.xStart&&n.Y==t));e.containsShip=!1,e.ship=null,o.push(e),n-=1}if("south"==i){l+=1;let e=this.grid[l];e.containsShip=!1,e.ship=null,o.push(e),n-=1}else if("east"==i){e=this.xAxis[this.xAxis.indexOf(e)+1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),n-=1}else if("west"==i){e=this.xAxis[this.xAxis.indexOf(e)-1];let t=this.grid.find((n=>n.X==e&&n.Y==a.yStart));t.containsShip=!1,t.ship=null,o.push(t),n-=1}}return o}}let f=new m,g=new m,B="taylor",I="computer",y=new class{constructor(n,e,t,i){this.playerBoard=n,this.player=e,this.aiBoard=t,this.ai=i,M("Player",0,"AI",0),R(this.playerBoard,this.aiBoard)}reloadBoards(){this.playerBoard=new m,this.aiBoard=new m;let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}populatePlayer(n,e,t,i){this.playerBoard.populateShip(n,e,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}depopulatePlayer(n,e,t,i){this.playerBoard.depopulateShip(n,e,t,i);let a=document.getElementById("container");a.removeChild(a.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}simplePopulate(){this.playerBoard.populateShip(2,"I",4,"east"),this.playerBoard.populateShip(4,"C",5,"east"),this.playerBoard.populateShip(3,"J",6,"south"),this.playerBoard.populateShip(3,"B",8,"south"),this.playerBoard.populateShip(2,"E",9,"east");let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}simplePopulateAI(){this.aiBoard.populateShip(2,"I",4,"east"),this.aiBoard.populateShip(4,"C",5,"east"),this.aiBoard.populateShip(3,"J",6,"south"),this.aiBoard.populateShip(3,"B",8,"south"),this.aiBoard.populateShip(2,"E",9,"east");let n=document.getElementById("container");n.removeChild(n.firstChild.nextSibling),R(this.playerBoard,this.aiBoard)}attackAI(n,e){this.aiBoard.receiveAttack(n,e),container.removeChild(container.firstChild.nextSibling),R(this.playerBoard,this.aiBoard),this.keepScore()}attackPlayer(n,e){this.playerBoard.receiveAttack(n,e),container.removeChild(container.firstChild.nextSibling),R(this.playerBoard,this.aiBoard),this.keepScore()}produceArrayOfPlayerShips(){let n=[];this.playerBoard.grid.forEach((e=>{null!=e.ship&&n.push(e.ship)}));let e=[];return n.forEach((n=>{e.includes(n)||e.push(n)})),e}produceArrayOfAiShips(){let n=[];this.aiBoard.grid.forEach((e=>{null!=e.ship&&n.push(e.ship)}));let e=[];return n.forEach((n=>{e.includes(n)||e.push(n)})),e}keepScore(){let n=this.produceArrayOfPlayerShips(),e=this.produceArrayOfAiShips(),t=0,i=0;n.forEach((n=>{n.hits.length==n.size&&(t+=1)})),e.forEach((n=>{n.hits.length==n.size&&(i+=1)})),container.removeChild(container.firstChild),M("Player",i,"AI",t),console.log("aiTally = "+i),console.log("playerTally ="+t),5==i&&H("You win!"),5==t&&H("AI wins!")}randomParameterProducer(){return[this.playerBoard.xAxis[Math.trunc(10*Math.random())],this.playerBoard.yAxis[Math.trunc(10*Math.random())]]}}(f,B,g,I);const b=document.createElement("button");b.addEventListener("click",(function(){y.simplePopulate()})),b.classList.add("populateButton"),b.textContent="Populate Player";const v=document.createElement("button");v.addEventListener("click",w),v.classList.add("populateButton"),v.textContent="Populate AI";const S=document.createElement("button");S.addEventListener("click",T),S.classList.add("populateButton"),S.textContent="Attack AI";const E=document.createElement("button");function k(){N(document.getElementById("container")),f=new m,g=new m,B="taylor",I="computer",M("Player",0,"AI",0),R(y.playerBoard,y.aiBoard),J(),en()}function w(){y.simplePopulateAI()}function L(n,e,t,i){y.populatePlayer(n,e,t,i)}function Y(n,e,t,i){y.depopulatePlayer(n,e,t,i)}E.addEventListener("click",P),E.classList.add("populateButton"),E.textContent="Attack Player";const j=y.playerBoard.grid.slice();function T(n,e){let t=y.aiBoard.grid.find((t=>t.X==n&&t.Y==e));if(1==t.isHit&&alert("You have already attacked that square! Try another."),0==t.isHit){let i=y.aiBoard.grid.indexOf(t);j.splice(i,1),y.attackAI(n,e),setTimeout((()=>{P()}),"500")}}const q=y.playerBoard.grid.slice();function P(){if(0==q.length)return alert("game over!");let n=q[Math.floor(Math.random()*q.length)],e=n.X,t=n.Y,i=q.indexOf(n);q.splice(i,1),y.attackPlayer(e,t)}let O=document.createElement("label");O.classList.add("attackLabel"),O.textContent="Input X Coordinate: ",document.createElement("input").setAttribute("type","text");let z=document.createElement("label");function X(n,e){let t=n.grid,i=document.createElement("div");return i.classList.add("grid-container"),t.forEach((n=>{let t=function(n,e="ai"){let t=document.createElement("div");return t.classList.add("square"),1==n.isHit&&(t.style.backgroundColor="#6ee7b7"),"ai"==e&&t.addEventListener("click",(function(){T(n.X,n.Y)})),1==n.isHit&&1==n.containsShip&&(t.style.backgroundColor="red",t.textContent="X"),"ai"!=e&&1==n.containsShip&&(t.style.backgroundColor="red"),t}(n,e);i.appendChild(t)})),i}function D(){let n=document.createElement("div");return n.classList.add("xCoordinateContainer"),["A","B","C","D","E","F","G","H","I","J"].forEach((e=>{let t=document.createElement("div");t.classList.add("upperSquare"),t.textContent=e,n.appendChild(t)})),n}function Q(){let n=document.createElement("div");return n.classList.add("yCoordinateContainer"),[1,2,3,4,5,6,7,8,9,10].forEach((e=>{let t=document.createElement("div");t.classList.add("leftSquare"),t.textContent=e,n.appendChild(t)})),n}function R(n,e){document.getElementById("container").appendChild(function(n,e){let t=document.createElement("div");return t.classList.add("doubleBoardContainer"),t.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(X(n,"player")),e.appendChild(D()),e.appendChild(t),e}(n)),t.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(X(n)),e.appendChild(D()),e.appendChild(t),e}(e)),t}(n,e))}function Z(n,e){let t=document.createElement("div");t.classList.add("singleBoardScoreContainer");let i=document.createElement("h2"),a=document.createElement("h2");return i.textContent=n+" Score: ",t.appendChild(i),t.appendChild(a),a.textContent=e+"/5",t}function M(n,e,t,i){let a=document.createElement("div");a.classList.add("scoreKeeperContainer"),a.appendChild(Z(n,e)),a.appendChild(Z(t,i)),document.getElementById("container").prepend(a)}function H(n){let e=document.createElement("div");e.classList.add("winnerCard"),e.appendChild(function(n){let e=document.createElement("h1");return e.classList.add("winnerAnnouncementText"),e.textContent=n,e}(n)),e.appendChild(function(){let n=document.createElement("button");return n.textContent="Restart Game",n.classList.add("placementButton"),n.addEventListener("click",k),n}()),container.firstChild.appendChild(e)}z.classList.add("attackLabel"),z.textContent="Input Y Coordinate: ",document.createElement("input").setAttribute("type","text");let U=document.createElement("div");U.classList.add("placement-module-container"),U.setAttribute("id","placementContainer");let G=new m,W=[];function J(){U.appendChild(function(){let n=document.createElement("div");return n.classList.add("placementTextBox"),n.appendChild(function(n){let e=document.createElement("h1");return e.classList.add("placementTextContent"),e.setAttribute("id","placementHeading"),e.textContent="Place Your Ships!",e}()),n}()),U.appendChild(function(){let n=document.createElement("div");return n.classList.add("middleSubcontainer"),n.appendChild(function(n){let e=document.createElement("div");e.classList.add("singleBoardContainer");let t=document.createElement("div");return t.classList.add("subcontainer"),t.appendChild(Q()),t.appendChild(function(n){let e=n.grid,t=document.createElement("div");return t.classList.add("grid-container"),e.forEach((n=>{let e=function(n){let e=document.createElement("div");return e.classList.add("square"),1==n.containsShip&&(e.style.backgroundColor="red",e.addEventListener("click",(function(){let n=e.id.split(""),t=G.grid.find((e=>e.X==n[0]&&e.Y==n[1])),i=t.ship.size,a=t.ship.xStart,r=t.ship.yStart;"east"==t.ship.direction?(G.depopulateShip(i,a,r,"east"),Y(i,a,r,"east"),G.populateShip(i,a,r,"south"),L(i,a,r,"south")):"south"==t.ship.direction&&(G.depopulateShip(i,a,r,"south"),Y(i,a,r,"south"),G.populateShip(i,a,r,"east"),L(i,a,r,"east")),N(U),document.body.removeChild(U),J()}))),e.setAttribute("id",n.X+n.Y),e.addEventListener("dragover",(function(n){console.log("dragOver"),n.preventDefault()})),e.addEventListener("drop",(function(n){console.log("Drop"),n.preventDefault();let e=n.dataTransfer.getData("text"),t=(document.getElementById(e),n.target.id),i=e,a=t[0],r=t[1];if(0==t[2]){let n=[t[1],t[2]];r=n.join("")}let o=G.grid.find((n=>n.X==a&&n.Y==r));1!=o.containsShip&&(0==V?(L(i,a,r,"east"),G.populateShip(i,a,r,"east")):(L(i,a,r,"south"),G.populateShip(i,a,r,"south")),N(U),document.body.removeChild(U),W.push(i),J())})),e}(n);t.appendChild(e)})),t}(n)),e.appendChild(D()),e.appendChild(t),e}(G)),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("rightInfoSubcontainer"),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("rightInfoButtonsContainer"),n.appendChild(function(){let n=document.createElement("button");return n.classList.add("placementButton"),n.textContent="Reset Ships",n.addEventListener("click",en),n}()),n.appendChild(function(){let n=document.createElement("button");return n.classList.add("placementButton"),n.textContent="Begin Game",n.addEventListener("click",nn),n}()),n}()),n.appendChild(function(){let n=document.createElement("div");return n.classList.add("placementInstructionBox"),n.appendChild(function(){let n=document.createElement("div");n.classList.add("headingContainer");let e=document.createElement("h3");return e.textContent="Instructions",n.appendChild(e),n}()),n.appendChild(F("Place your ships by dragging them to your desired location.")),n.appendChild(F("Click the Rotate button to change orientation of ships waiting to be placed.")),n.appendChild(F("You can also rotate ships after placing them on the board by clicking on them.")),n.appendChild(F("Once you have placed all five ships, press the Begin Game button to start.")),n}()),n}()),n}()),U.appendChild(function(){let n=document.createElement("div");return n.classList.add("bottomSubcontainer"),n.appendChild(function(){let n=document.createElement("button");return n.textContent="Rotate",n.classList.add("placementButton"),n.setAttribute("id","rotateShipButton"),n.addEventListener("click",(()=>{document.querySelectorAll("div.ship").forEach((function(n){"column"==n.style.flexDirection?(n.style.flexDirection="row",V=0):(n.style.flexDirection="column",V=1)})),document.querySelectorAll("div.singleShipClassContainer").forEach((function(n){n.style.flexDirection=1==V?"row":"column"}))})),n}()),n.appendChild(function(){let n=document.createElement("div");n.classList.add("shipAllClassesContainer");let e=document.createElement("div");e.classList.add("singleShipClassContainer");let t=document.createElement("div");t.classList.add("singleShipClassContainer");let i=document.createElement("div");return i.classList.add("singleShipClassContainer"),1==V&&(e.style.flexDirection="row",t.style.flexDirection="row",i.style.flexDirection="row"),0==W.filter((n=>2==n)).length?(e.appendChild(_(2)),e.appendChild(_(2)),n.appendChild(e)):1==W.filter((n=>2==n)).length&&(e.appendChild(_(2)),n.appendChild(e)),0==W.filter((n=>3==n)).length?(t.appendChild(_(3)),t.appendChild(_(3)),n.appendChild(t)):1==W.filter((n=>3==n)).length&&(t.appendChild(_(3)),n.appendChild(t)),0==W.filter((n=>4==n)).length&&(i.appendChild(_(4)),n.appendChild(i)),n}()),n}()),document.body.appendChild(U)}function F(n){let e=document.createElement("p");return e.classList.add("instructionContent"),e.textContent=n,e}function N(n){for(;n.firstChild;)n.removeChild(n.firstChild)}const K="";let V=0;function _(n){let e=document.createElement("div");for(e.classList.add("ship"),e.setAttribute("draggable","true"),e.setAttribute("id",n),1==V&&(e.style.flexDirection="column"),0==V&&(e.style.flexDirection="row");n>=1;){let t=document.createElement("div");t.classList.add("placementSquare"),e.appendChild(t),n-=1}return e.addEventListener("dragstart",$),e}function $(n){n.currentTarget.classList.add("dragging"),n.dataTransfer.clearData(),n.dataTransfer.setData("text/plain",n.target.id);const e=n.dataTransfer.getData("text");K=document.getElementById(e),n.currentTarget.removeEventListener("dragend",$)}function nn(){if(5==W.length)w(),N(U),document.body.removeChild(U);else{let n=document.getElementById("placementHeading");n.textContent="Place All Ships Before Starting the Game!",n.style.color="#ef4444"}}function en(){G=new m,function(){for(;W.length>=1;)W.pop()}(),N(U),document.body.removeChild(U),y.reloadBoards(),J()}J()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,