(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),i=n.n(a),r=n(645),o=n.n(r)()(i());o.push([e.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n}\nbody {\n    position: relative;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: relative;\n    /*bottom: 70vh;\n    left: 59.5vh;\n    width: 430px;*/\n    bottom: 70vh;\n    left: 10vh;\n    width: 75%;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n.placement-module-subcontainer {\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 3px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 3px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.populateButton {\n    height: 40px;\n    width: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    position: absolute;\n    background-color: red;\n    top: 35%;\n    left: 49%;\n}\n.selectSquare {\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,SAAS;IACT,YAAY;AAChB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ;AACJ;AACA,mCAAmC;AACnC;IACI,kBAAkB;IAClB;;kBAEc;IACd,YAAY;IACZ,UAAU;IACV,UAAU;IACV,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,QAAQ;IACR,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;AAC7B;AACA;;AAEA;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,sBAAsB;IACtB,QAAQ;AACZ;AACA,0BAA0B;AAC1B;IACI,aAAa;IACb,QAAQ;IACR,qBAAqB;AACzB;;AAEA,iCAAiC;AACjC;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,QAAQ;IACR,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,QAAQ;IACR,SAAS;AACb;AACA;;AAEA",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n}\nbody {\n    position: relative;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: relative;\n    /*bottom: 70vh;\n    left: 59.5vh;\n    width: 430px;*/\n    bottom: 70vh;\n    left: 10vh;\n    width: 75%;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n.placement-module-subcontainer {\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 3px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 3px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.populateButton {\n    height: 40px;\n    width: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    position: absolute;\n    background-color: red;\n    top: 35%;\n    left: 49%;\n}\n.selectSquare {\n    \n}"],sourceRoot:""}]);const s=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);a&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(i," */"),o=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(o).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},o=[],s=0;s<e.length;s++){var l=e[s],d=a.base?l[0]+a.base:l[0],c=r[d]||0,p="".concat(d," ").concat(c);r[d]=c+1;var A=n(p),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var h=i(u,a);a.byIndex=s,t.splice(s,0,{identifier:p,updater:h,references:1})}o.push(p)}return o}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=a(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var s=n(r[o]);t[s].references--}for(var l=a(e,i),d=0;d<r.length;d++){var c=n(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=l}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,i&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),a=n(795),i=n.n(a),r=n(569),o=n.n(r),s=n(565),l=n.n(s),d=n(216),c=n.n(d),p=n(589),A=n.n(p),u=n(426),h={};h.styleTagTransform=A(),h.setAttributes=l(),h.insert=o().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),t()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(e,t,n,a){this.size=e,this.hits=[],this.xStart=t,this.yStart=n}hit(){return this.hits.push("hit"),this.hits.length==this.size?this.isSunk():this.hit}isSunk(){return"sunk!"}}class f{constructor(e,t){this.X=e,this.Y=t,this.isHit=!1,this.containsShip=!1,this.ship=null}}class m{constructor(e){this.xAxis=["A","B","C","D","E","F","G","H","I","J"],this.yAxis=[1,2,3,4,5,6,7,8,9,10],this.grid=this.makeGrid()}receiveAttack(e,t){let n=this.grid.find((n=>n.X==e&&n.Y==t));return n.isHit=!0,1==n.containsShip?(n.ship.hit(),n.ship):n.ship}makeGrid(){let e=[];for(let t=0;t<this.xAxis.length;t++)for(let n=0;n<this.yAxis.length;n++){let a=new f(this.xAxis[t],this.yAxis[n]);e.push(a)}return e}populateShip(e,t,n,a){if(e>1){if("north"==a&&n<e)return console.log("overflow at "+t+n),"overflow!";if("south"==a&&n-1>10-e)return console.log("overflow at "+t+n),"overflow!";if("west"==a&&this.xAxis.indexOf(t)<e-1)return console.log("overflow at "+t+n),"overflow!";if("east"==a&&this.xAxis.indexOf(t)>10-e)return console.log("overflow at "+t+n),"overflow!"}let i=new C(e,t,n),r=this.grid.find((e=>e.X==i.xStart&&e.Y==i.yStart)),o=[];for(r.containsShip=!0,r.ship=i,o.push(r);e>1;)if("north"==a){n-=1;let t=this.grid.find((e=>e.X==i.xStart&&e.Y==n));t.containsShip=!0,t.ship=i,o.push(t),e-=1}else if("south"==a){n+=1;let t=this.grid.find((e=>e.X==i.xStart&&e.Y==n));t.containsShip=!0,t.ship=i,o.push(t),e-=1}else if("east"==a){t=this.xAxis[this.xAxis.indexOf(t)+1];let n=this.grid.find((e=>e.X==t&&e.Y==i.yStart));n.containsShip=!0,n.ship=i,o.push(n),e-=1}else if("west"==a){t=this.xAxis[this.xAxis.indexOf(t)-1];let n=this.grid.find((e=>e.X==t&&e.Y==i.yStart));n.containsShip=!0,n.ship=i,o.push(n),e-=1}return o}}let B=new m,g=new m,x=new class{constructor(e,t,n,a){this.playerBoard=e,this.player=t,this.aiBoard=n,this.ai=a,O(this.playerBoard,this.aiBoard),Z("Player",0,"AI",0)}populatePlayer(e,t,n,a){this.playerBoard.populateShip(e,t,n,a);let i=document.getElementById("container");i.removeChild(i.firstChild),O(this.playerBoard,this.aiBoard)}simplePopulate(){this.playerBoard.populateShip(2,"I",4,"east"),this.playerBoard.populateShip(4,"C",5,"east"),this.playerBoard.populateShip(3,"J",6,"south"),this.playerBoard.populateShip(3,"B",8,"south"),this.playerBoard.populateShip(2,"E",9,"east");let e=document.getElementById("container");e.removeChild(e.firstChild),O(this.playerBoard,this.aiBoard)}simplePopulateAI(){this.aiBoard.populateShip(2,"I",4,"east"),this.aiBoard.populateShip(4,"C",5,"east"),this.aiBoard.populateShip(3,"J",6,"south"),this.aiBoard.populateShip(3,"B",8,"south"),this.aiBoard.populateShip(2,"E",9,"east");let e=document.getElementById("container");e.removeChild(e.firstChild),O(this.playerBoard,this.aiBoard)}attackAI(e,t){if(this.aiBoard.X==e||this.aiBoard.Y==t)return console.log("repeat hit");this.aiBoard.receiveAttack(e,t),container.removeChild(container.firstChild),O(this.playerBoard,this.aiBoard),this.keepScore()}attackPlayer(e,t){this.playerBoard.receiveAttack(e,t),container.removeChild(container.firstChild),O(this.playerBoard,this.aiBoard),this.keepScore()}produceArrayOfPlayerShips(){let e=[];this.playerBoard.grid.forEach((t=>{null!=t.ship&&e.push(t.ship)}));let t=[];return e.forEach((e=>{t.includes(e)||t.push(e)})),t}produceArrayOfAiShips(){let e=[];this.aiBoard.grid.forEach((t=>{null!=t.ship&&e.push(t.ship)}));let t=[];return e.forEach((e=>{t.includes(e)||t.push(e)})),t}keepScore(){let e=this.produceArrayOfPlayerShips(),t=this.produceArrayOfAiShips(),n=0,a=0;e.forEach((e=>{e.hits.length==e.size&&(n+=1)})),t.forEach((e=>{e.hits.length==e.size&&(a+=1)})),container.removeChild(container.firstChild.nextSibling),Z("AI",n,"Player",a),5==n?Q("AI wins!"):5==a&&Q("You win!")}randomParameterProducer(){return[this.playerBoard.xAxis[Math.trunc(10*Math.random())],this.playerBoard.yAxis[Math.trunc(10*Math.random())]]}}(B,"taylor",g,"computer");const y=document.createElement("button");y.addEventListener("click",(function(){x.simplePopulate()})),y.classList.add("populateButton"),y.textContent="Populate Player";const v=document.createElement("button");v.addEventListener("click",(function(){x.simplePopulateAI()})),v.classList.add("populateButton"),v.textContent="Populate AI";const I=document.createElement("button");I.addEventListener("click",S),I.classList.add("populateButton"),I.textContent="Attack AI";const b=document.createElement("button");b.addEventListener("click",L),b.classList.add("populateButton"),b.textContent="Attack Player";const E=x.playerBoard.grid.slice();function S(e,t){let n=x.aiBoard.grid.find((n=>n.X==e&&n.Y==t));if(console.log(n),1==n.isHit&&alert("You have already attacked that square! Try another."),0==n.isHit){let a=x.aiBoard.grid.indexOf(n);E.splice(a,1),x.attackAI(e,t),setTimeout((()=>{L()}),"500")}}const k=x.playerBoard.grid.slice();function L(){if(0==k.length)return alert("game over!");let e=k[Math.floor(Math.random()*k.length)],t=e.X,n=e.Y,a=k.indexOf(e);k.splice(a,1),x.attackPlayer(t,n)}let w=document.createElement("label");w.classList.add("attackLabel"),w.textContent="Input X Coordinate: ";let Y=document.createElement("input");Y.setAttribute("type","text");let j=document.createElement("label");j.classList.add("attackLabel"),j.textContent="Input Y Coordinate: ";let q=document.createElement("input");function P(e,t){let n=e.grid,a=document.createElement("div");return a.classList.add("grid-container"),n.forEach((e=>{let n=function(e,t="ai"){let n=document.createElement("div");return n.classList.add("square"),1==e.isHit&&(n.style.backgroundColor="#6ee7b7"),"ai"==t&&n.addEventListener("click",(function(){let t=e.X,n=e.Y;S(t,n),console.log(t+n)})),1==e.isHit&&1==e.containsShip&&(n.style.backgroundColor="red",n.textContent="X"),1==e.containsShip&&(n.style.backgroundColor="red"),n}(e,t);a.appendChild(n)})),a}function T(){let e=document.createElement("div");return e.classList.add("xCoordinateContainer"),["A","B","C","D","E","F","G","H","I","J"].forEach((t=>{let n=document.createElement("div");n.classList.add("upperSquare"),n.textContent=t,e.appendChild(n)})),e}function X(){let e=document.createElement("div");return e.classList.add("yCoordinateContainer"),[1,2,3,4,5,6,7,8,9,10].forEach((t=>{let n=document.createElement("div");n.classList.add("leftSquare"),n.textContent=t,e.appendChild(n)})),e}function O(e,t){document.getElementById("container").prepend(function(e,t){let n=document.createElement("div");return n.classList.add("doubleBoardContainer"),n.appendChild(function(e){let t=document.createElement("div");t.classList.add("singleBoardContainer");let n=document.createElement("div");return n.classList.add("subcontainer"),n.appendChild(X()),n.appendChild(P(e,"player")),t.appendChild(T()),t.appendChild(n),t}(e)),n.appendChild(function(e){let t=document.createElement("div");t.classList.add("singleBoardContainer");let n=document.createElement("div");return n.classList.add("subcontainer"),n.appendChild(X()),n.appendChild(P(e)),t.appendChild(T()),t.appendChild(n),t}(t)),n}(e,t))}function M(e,t){let n=document.createElement("div");n.classList.add("singleBoardScoreContainer");let a=document.createElement("div"),i=document.createElement("div");return a.textContent=e+" score: ",n.appendChild(a),n.appendChild(i),i.textContent=t+"/5",n}function Z(e,t,n,a){let i=document.createElement("div");i.classList.add("scoreKeeperContainer"),i.appendChild(M(e,t)),i.appendChild(M(n,a)),document.getElementById("container").appendChild(i)}function Q(e){let t=document.createElement("div");t.classList.add("winnerCard"),t.textContent=e,container.firstChild.appendChild(t)}q.setAttribute("type","text");let R=document.createElement("div");R.classList.add("placement-module-container"),R.setAttribute("id","placementContainer");const z=new m,U="";document.body.appendChild(function(){let e=document.createElement("div");return e.classList.add("buttonContainer"),e.appendChild(y),e.appendChild(v),e.appendChild(b),e.appendChild(I),e}()),document.body.appendChild(function(){let e=document.createElement("div");return e.classList.add("formContainer"),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("formContainer"),e.appendChild(w),e.appendChild(Y),e}()),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("formContainer"),e.appendChild(j),e.appendChild(q),e}()),e}()),function e(){R.appendChild(function(){let e=document.createElement("div");return e.classList.add("placementText"),e.textContent="Place Your Ships",e}()),R.appendChild(function(t){let n=document.createElement("div");n.classList.add("singleBoardContainer");let a=document.createElement("div");return a.classList.add("subcontainer"),a.appendChild(X()),a.appendChild(function(t){let n=t.grid,a=document.createElement("div");return a.classList.add("grid-container"),n.forEach((t=>{let n=function(t){let n=document.createElement("div");return n.classList.add("square"),1==t.containsShip&&(n.style.backgroundColor="red"),n.setAttribute("id",t.X+t.Y),n.addEventListener("dragover",(function(e){console.log("dragOver"),e.preventDefault()})),n.addEventListener("drop",(function(t){console.log("Drop"),t.preventDefault();let n=t.dataTransfer.getData("text"),a=(document.getElementById(n),t.target.id),i=n,r=a[0],o=a[1];!function(e,t,n,a){x.populatePlayer(e,t,n,"north")}(i,r,o),z.populateShip(i,r,o,"north"),function(e){for(;e.firstChild;)e.removeChild(e.firstChild)}(R),document.body.removeChild(R),e()})),n}(t);a.appendChild(n)})),a}(t)),n.appendChild(T()),n.appendChild(a),n}(z)),R.appendChild(function(e){let t=document.createElement("div");for(t.setAttribute("draggable","true"),t.setAttribute("id",e);e>=1;){let n=document.createElement("div");n.classList.add("placementSquare"),t.appendChild(n),e-=1}return t.addEventListener("dragstart",(function(e){e.currentTarget.classList.add("dragging"),e.dataTransfer.clearData(),e.dataTransfer.setData("text/plain",e.target.id);const t=e.dataTransfer.getData("text");console.log(t),U=document.getElementById(t),console.log(U)})),t.addEventListener("dragend",(function(e){e.target.classList.remove("dragging")})),t}(2)),document.body.appendChild(R)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,