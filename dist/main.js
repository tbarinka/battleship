(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(537),a=n.n(i),r=n(645),o=n.n(r)()(a());o.push([e.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n}\nbody {\n    position: relative;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: relative;\n    /*bottom: 70vh;\n    left: 59.5vh;\n    width: 430px;*/\n    bottom: 70vh;\n    left: 10vh;\n    width: 75%;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n.placement-module-subcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.rightInfoSubcontainer {\n    gap: 10px;\n}\n.rightInfoButtonsContainer {\n    \n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 3px;\n    border: solid black 2px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 3px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 3px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.populateButton, .placementButton {\n    height: 40px;\n    width: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    position: absolute;\n    background-color: red;\n    top: 35%;\n    left: 49%;\n}\n.selectSquare {\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,SAAS;IACT,YAAY;AAChB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ;AACJ;AACA,mCAAmC;AACnC;IACI,kBAAkB;IAClB;;kBAEc;IACd,YAAY;IACZ,UAAU;IACV,UAAU;IACV,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,SAAS;AACb;AACA;;AAEA;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,oCAAoC;IACpC,SAAS;;AAEb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,QAAQ;IACR,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;AAC3B;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,QAAQ;IACR,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;AAC7B;AACA;;AAEA;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,sBAAsB;IACtB,QAAQ;AACZ;AACA,0BAA0B;AAC1B;IACI,aAAa;IACb,QAAQ;IACR,qBAAqB;AACzB;;AAEA,iCAAiC;AACjC;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,QAAQ;IACR,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,QAAQ;IACR,SAAS;AACb;AACA;;AAEA",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n}\nbody {\n    position: relative;\n}\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative\n}\n/*styles for the placement module */\n.placement-module-container {\n    position: relative;\n    /*bottom: 70vh;\n    left: 59.5vh;\n    width: 430px;*/\n    bottom: 70vh;\n    left: 10vh;\n    width: 75%;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n}\n.placement-module-subcontainer, .rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n.rightInfoSubcontainer {\n    gap: 10px;\n}\n.rightInfoButtonsContainer {\n    \n}\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    \n}\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.ship {\n    display: flex;\n    gap: 3px;\n    border: solid black 2px;\n}\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n.xCoordinateContainer {\n    display: flex;\n    gap: 3px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 3px;\n    margin-top: 10px;\n}\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n.leftSquare, .upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n.subcontainer {\n    display: flex;\n}\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n.square {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.square:hover, .placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n.squareContainer {\n\n}\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 3px;\n}\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.populateButton, .placementButton {\n    height: 40px;\n    width: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n.winnerCard {\n    position: absolute;\n    background-color: red;\n    top: 35%;\n    left: 49%;\n}\n.selectSquare {\n    \n}"],sourceRoot:""}]);const l=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(o[s]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);i&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */"),o=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(o).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var r={},o=[],l=0;l<e.length;l++){var s=e[l],d=i.base?s[0]+i.base:s[0],c=r[d]||0,p="".concat(d," ").concat(c);r[d]=c+1;var A=n(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var h=a(u,i);i.byIndex=l,t.splice(l,0,{identifier:p,updater:h,references:1})}o.push(p)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var l=n(r[o]);t[l].references--}for(var s=i(e,a),d=0;d<r.length;d++){var c=n(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=s}}},569:e=>{var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,a&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(i){var a=t[i];if(void 0!==a)return a.exports;var r=t[i]={id:i,exports:{}};return e[i](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),i=n(795),a=n.n(i),r=n(569),o=n.n(r),l=n(565),s=n.n(l),d=n(216),c=n.n(d),p=n(589),A=n.n(p),u=n(426),h={};h.styleTagTransform=A(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=c(),t()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(e,t,n,i){this.size=e,this.hits=[],this.xStart=t,this.yStart=n,this.direction=null}hit(){return this.hits.push("hit"),this.hits.length==this.size?this.isSunk():this.hit}isSunk(){return"sunk!"}}class f{constructor(e,t){this.X=e,this.Y=t,this.isHit=!1,this.containsShip=!1,this.ship=null}}class m{constructor(e){this.xAxis=["A","B","C","D","E","F","G","H","I","J"],this.yAxis=[1,2,3,4,5,6,7,8,9,10],this.grid=this.makeGrid()}receiveAttack(e,t){let n=this.grid.find((n=>n.X==e&&n.Y==t));return n.isHit=!0,1==n.containsShip?(n.ship.hit(),n.ship):n.ship}makeGrid(){let e=[];for(let t=0;t<this.xAxis.length;t++)for(let n=0;n<this.yAxis.length;n++){let i=new f(this.xAxis[t],this.yAxis[n]);e.push(i)}return e}populateShip(e,t,n,i){if(e>1){if("north"==i&&n<e)return console.log("overflow at "+t+n),"overflow!";if("south"==i&&n-1>10-e)return console.log("overflow at "+t+n),"overflow!";if("west"==i&&this.xAxis.indexOf(t)<e-1)return console.log("overflow at "+t+n),"overflow!";if("east"==i&&this.xAxis.indexOf(t)>10-e)return console.log("overflow at "+t+n),"overflow!"}let a=new C(e,t,n,i);console.log("new Ship y = "+a.yStart),a.direction=i;let r=this.grid.find((e=>e.X==a.xStart&&e.Y==a.yStart)),o=[];r.containsShip=!0,r.ship=a,o.push(r);let l=this.grid.indexOf(r);for(;e>1;){if("north"==i){n-=1;let t=this.grid.find((e=>e.X==a.xStart&&e.Y==n));t.containsShip=!0,t.ship=a,o.push(t),e-=1}if("south"==i){l+=1;let t=this.grid[l];t.containsShip=!0,t.ship=a,o.push(t),e-=1}else if("east"==i){t=this.xAxis[this.xAxis.indexOf(t)+1];let n=this.grid.find((e=>e.X==t&&e.Y==a.yStart));n.containsShip=!0,n.ship=a,o.push(n),e-=1}else if("west"==i){t=this.xAxis[this.xAxis.indexOf(t)-1];let n=this.grid.find((e=>e.X==t&&e.Y==a.yStart));n.containsShip=!0,n.ship=a,o.push(n),e-=1}}return o}depopulateShip(e,t,n,i){let a=new C(e,t,n),r=this.grid.find((e=>e.X==a.xStart&&e.Y==a.yStart)),o=[];r.containsShip=!1,r.ship=null,o.push(r);let l=this.grid.indexOf(r);for(;e>1;){if("north"==i){n-=1;let t=this.grid.find((e=>e.X==a.xStart&&e.Y==n));t.containsShip=!1,t.ship=null,o.push(t),e-=1}if("south"==i){l+=1;let t=this.grid[l];t.containsShip=!1,t.ship=null,o.push(t),e-=1}else if("east"==i){t=this.xAxis[this.xAxis.indexOf(t)+1];let n=this.grid.find((e=>e.X==t&&e.Y==a.yStart));n.containsShip=!1,n.ship=null,o.push(n),e-=1}else if("west"==i){t=this.xAxis[this.xAxis.indexOf(t)-1];let n=this.grid.find((e=>e.X==t&&e.Y==a.yStart));n.containsShip=!1,n.ship=null,o.push(n),e-=1}}return o}}let g=new m,x=new m,B=new class{constructor(e,t,n,i){this.playerBoard=e,this.player=t,this.aiBoard=n,this.ai=i,D(this.playerBoard,this.aiBoard),R("Player",0,"AI",0)}reloadBoards(){this.playerBoard=new m,this.aiBoard=new m;let e=document.getElementById("container");e.removeChild(e.firstChild),D(this.playerBoard,this.aiBoard)}populatePlayer(e,t,n,i){this.playerBoard.populateShip(e,t,n,i);let a=document.getElementById("container");a.removeChild(a.firstChild),D(this.playerBoard,this.aiBoard)}depopulatePlayer(e,t,n,i){this.playerBoard.depopulateShip(e,t,n,i);let a=document.getElementById("container");a.removeChild(a.firstChild),D(this.playerBoard,this.aiBoard)}simplePopulate(){this.playerBoard.populateShip(2,"I",4,"east"),this.playerBoard.populateShip(4,"C",5,"east"),this.playerBoard.populateShip(3,"J",6,"south"),this.playerBoard.populateShip(3,"B",8,"south"),this.playerBoard.populateShip(2,"E",9,"east");let e=document.getElementById("container");e.removeChild(e.firstChild),D(this.playerBoard,this.aiBoard)}simplePopulateAI(){this.aiBoard.populateShip(2,"I",4,"east"),this.aiBoard.populateShip(4,"C",5,"east"),this.aiBoard.populateShip(3,"J",6,"south"),this.aiBoard.populateShip(3,"B",8,"south"),this.aiBoard.populateShip(2,"E",9,"east");let e=document.getElementById("container");e.removeChild(e.firstChild),D(this.playerBoard,this.aiBoard)}attackAI(e,t){if(this.aiBoard.X==e||this.aiBoard.Y==t)return console.log("repeat hit");this.aiBoard.receiveAttack(e,t),container.removeChild(container.firstChild),D(this.playerBoard,this.aiBoard),this.keepScore()}attackPlayer(e,t){this.playerBoard.receiveAttack(e,t),container.removeChild(container.firstChild),D(this.playerBoard,this.aiBoard),this.keepScore()}produceArrayOfPlayerShips(){let e=[];this.playerBoard.grid.forEach((t=>{null!=t.ship&&e.push(t.ship)}));let t=[];return e.forEach((e=>{t.includes(e)||t.push(e)})),t}produceArrayOfAiShips(){let e=[];this.aiBoard.grid.forEach((t=>{null!=t.ship&&e.push(t.ship)}));let t=[];return e.forEach((e=>{t.includes(e)||t.push(e)})),t}keepScore(){let e=this.produceArrayOfPlayerShips(),t=this.produceArrayOfAiShips(),n=0,i=0;e.forEach((e=>{e.hits.length==e.size&&(n+=1)})),t.forEach((e=>{e.hits.length==e.size&&(i+=1)})),container.removeChild(container.firstChild.nextSibling),R("AI",n,"Player",i),5==n?M("AI wins!"):5==i&&M("You win!")}randomParameterProducer(){return[this.playerBoard.xAxis[Math.trunc(10*Math.random())],this.playerBoard.yAxis[Math.trunc(10*Math.random())]]}}(g,"taylor",x,"computer");const y=document.createElement("button");y.addEventListener("click",(function(){B.simplePopulate()})),y.classList.add("populateButton"),y.textContent="Populate Player";const I=document.createElement("button");I.addEventListener("click",S),I.classList.add("populateButton"),I.textContent="Populate AI";const v=document.createElement("button");v.addEventListener("click",w),v.classList.add("populateButton"),v.textContent="Attack AI";const b=document.createElement("button");function S(){B.simplePopulateAI()}function E(e,t,n,i){B.populatePlayer(e,t,n,i)}function k(e,t,n,i){B.depopulatePlayer(e,t,n,i)}b.addEventListener("click",j),b.classList.add("populateButton"),b.textContent="Attack Player";const L=B.playerBoard.grid.slice();function w(e,t){let n=B.aiBoard.grid.find((n=>n.X==e&&n.Y==t));if(console.log(n),1==n.isHit&&alert("You have already attacked that square! Try another."),0==n.isHit){let i=B.aiBoard.grid.indexOf(n);L.splice(i,1),B.attackAI(e,t),setTimeout((()=>{j()}),"500")}}const Y=B.playerBoard.grid.slice();function j(){if(0==Y.length)return alert("game over!");let e=Y[Math.floor(Math.random()*Y.length)],t=e.X,n=e.Y,i=Y.indexOf(e);Y.splice(i,1),B.attackPlayer(t,n)}let q=document.createElement("label");q.classList.add("attackLabel"),q.textContent="Input X Coordinate: ",document.createElement("input").setAttribute("type","text");let P=document.createElement("label");function X(e,t){let n=e.grid,i=document.createElement("div");return i.classList.add("grid-container"),n.forEach((e=>{let n=function(e,t="ai"){let n=document.createElement("div");return n.classList.add("square"),1==e.isHit&&(n.style.backgroundColor="#6ee7b7"),"ai"==t&&n.addEventListener("click",(function(){let t=e.X,n=e.Y;w(t,n),console.log(t+n)})),1==e.isHit&&1==e.containsShip&&(n.style.backgroundColor="red",n.textContent="X"),1==e.containsShip&&(n.style.backgroundColor="red"),n}(e,t);i.appendChild(n)})),i}function O(){let e=document.createElement("div");return e.classList.add("xCoordinateContainer"),["A","B","C","D","E","F","G","H","I","J"].forEach((t=>{let n=document.createElement("div");n.classList.add("upperSquare"),n.textContent=t,e.appendChild(n)})),e}function T(){let e=document.createElement("div");return e.classList.add("yCoordinateContainer"),[1,2,3,4,5,6,7,8,9,10].forEach((t=>{let n=document.createElement("div");n.classList.add("leftSquare"),n.textContent=t,e.appendChild(n)})),e}function D(e,t){document.getElementById("container").prepend(function(e,t){let n=document.createElement("div");return n.classList.add("doubleBoardContainer"),n.appendChild(function(e){let t=document.createElement("div");t.classList.add("singleBoardContainer");let n=document.createElement("div");return n.classList.add("subcontainer"),n.appendChild(T()),n.appendChild(X(e,"player")),t.appendChild(O()),t.appendChild(n),t}(e)),n.appendChild(function(e){let t=document.createElement("div");t.classList.add("singleBoardContainer");let n=document.createElement("div");return n.classList.add("subcontainer"),n.appendChild(T()),n.appendChild(X(e)),t.appendChild(O()),t.appendChild(n),t}(t)),n}(e,t))}function Q(e,t){let n=document.createElement("div");n.classList.add("singleBoardScoreContainer");let i=document.createElement("div"),a=document.createElement("div");return i.textContent=e+" score: ",n.appendChild(i),n.appendChild(a),a.textContent=t+"/5",n}function R(e,t,n,i){let a=document.createElement("div");a.classList.add("scoreKeeperContainer"),a.appendChild(Q(e,t)),a.appendChild(Q(n,i)),document.getElementById("container").appendChild(a)}function M(e){let t=document.createElement("div");t.classList.add("winnerCard"),t.textContent=e,container.firstChild.appendChild(t)}P.classList.add("attackLabel"),P.textContent="Input Y Coordinate: ",document.createElement("input").setAttribute("type","text");let Z=document.createElement("div");Z.classList.add("placement-module-container"),Z.setAttribute("id","placementContainer");let U=new m,z=[];function H(){Z.appendChild(function(){let e=document.createElement("div");return e.classList.add("placementText"),e.textContent="Place Your Ships",e}()),Z.appendChild(function(){let e=document.createElement("div");return e.classList.add("placement-module-subcontainer"),e.appendChild(function(e){let t=document.createElement("div");t.classList.add("singleBoardContainer");let n=document.createElement("div");return n.classList.add("subcontainer"),n.appendChild(T()),n.appendChild(function(e){let t=e.grid,n=document.createElement("div");return n.classList.add("grid-container"),t.forEach((e=>{let t=function(e){let t=document.createElement("div");return t.classList.add("square"),1==e.containsShip&&(t.style.backgroundColor="red",t.addEventListener("click",(function(){let e=t.id.split(""),n=U.grid.find((t=>t.X==e[0]&&t.Y==e[1]));console.log(n);let i=n.ship.size,a=n.ship.xStart,r=n.ship.yStart;"east"==n.ship.direction?(U.depopulateShip(i,a,r,"east"),k(i,a,r,"east"),U.populateShip(i,a,r,"south"),E(i,a,r,"south")):"south"==n.ship.direction&&(U.depopulateShip(i,a,r,"south"),k(i,a,r,"south"),U.populateShip(i,a,r,"east"),E(i,a,r,"east")),J(Z),document.body.removeChild(Z),H()}))),t.setAttribute("id",e.X+e.Y),t.addEventListener("dragover",(function(e){console.log("dragOver"),e.preventDefault()})),t.addEventListener("drop",(function(e){console.log("Drop"),e.preventDefault();let t=e.dataTransfer.getData("text");console.log("data = "+t),document.getElementById(t);let n=e.target.id,i=t,a=n[0],r=n[1];0==n[2]&&(r=[n[1],n[2]].join("")),0==G?(E(i,a,r,"east"),U.populateShip(i,a,r,"east")):(E(i,a,r,"south"),U.populateShip(i,a,r,"south")),J(Z),document.body.removeChild(Z),z.push(i),H()})),t}(e);n.appendChild(t)})),n}(e)),t.appendChild(O()),t.appendChild(n),t}(U)),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("rightInfoSubcontainer"),e.appendChild(function(){let e=document.createElement("div");return e.classList.add("rightInfoButtonsContainer"),e.appendChild(function(){let e=document.createElement("button");return e.classList.add("placementButton"),e.textContent="Reset Ships",e.addEventListener("click",_),e}()),e.appendChild(function(){let e=document.createElement("button");return e.classList.add("placementButton"),e.textContent="Begin Game",e.addEventListener("click",V),e}()),e}()),e.appendChild(function(){let e=document.createElement("div");return e.textContent="Include Directions Here",e}()),e}()),e}()),Z.appendChild(function(){let e=document.createElement("div");e.classList.add("shipAllClassesContainer");let t=document.createElement("div");t.classList.add("singleShipClassContainer");let n=document.createElement("div");n.classList.add("singleShipClassContainer");let i=document.createElement("div");return i.classList.add("singleShipClassContainer"),e.appendChild(function(){let e=document.createElement("button");return e.textContent="Rotate Ship 90°",e.classList.add("placementButton"),e.setAttribute("id","rotateShipButton"),e.addEventListener("click",(()=>{console.log("test"),document.querySelectorAll("div.singleShipClassContainer"),document.querySelectorAll("div.ship").forEach((function(e){"column"==e.style.flexDirection?(e.style.flexDirection="row",G=0):(e.style.flexDirection="column",G=1,console.log(G))}))})),e}()),0==z.filter((e=>2==e)).length?(t.appendChild(N(2)),t.appendChild(N(2)),e.appendChild(t)):1==z.filter((e=>2==e)).length&&(t.appendChild(N(2)),e.appendChild(t)),0==z.filter((e=>3==e)).length?(n.appendChild(N(3)),n.appendChild(N(3)),e.appendChild(n)):1==z.filter((e=>3==e)).length&&(n.appendChild(N(3)),e.appendChild(n)),0==z.filter((e=>4==e)).length&&(i.appendChild(N(4)),e.appendChild(i)),e}()),document.body.appendChild(Z)}function J(e){for(;e.firstChild;)e.removeChild(e.firstChild)}const W="";let G=0;function N(e){let t=document.createElement("div");for(t.classList.add("ship"),t.setAttribute("draggable","true"),t.setAttribute("id",e),console.log(G),1==G&&(console.log("test"),t.style.flexDirection="column"),0==G&&(t.style.flexDirection="row");e>=1;){let n=document.createElement("div");n.classList.add("placementSquare"),t.appendChild(n),e-=1}return t.addEventListener("dragstart",F),t.addEventListener("dragend",(function(e){e.target.classList.remove("dragging")})),t}function F(e){e.currentTarget.classList.add("dragging"),e.dataTransfer.clearData(),e.dataTransfer.setData("text/plain",e.target.id);const t=e.dataTransfer.getData("text");console.log(t),W=document.getElementById(t),console.log(W),e.currentTarget.removeEventListener("dragend",F)}function V(){5==z.length&&(S(),J(Z),document.body.removeChild(Z))}function _(){U=new m,function(){for(;z.length>=1;)z.pop()}(),J(Z),document.body.removeChild(Z),B.reloadBoards(),H()}document.body.appendChild(function(){let e=document.createElement("div");return e.classList.add("buttonContainer"),e.appendChild(y),e.appendChild(I),e.appendChild(b),e.appendChild(v),e}()),H()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QjlCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9nYW1lQXBwTG9naWMvc2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVBcHBMb2dpYy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy91c2VySW50ZXJmYWNlL2NvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy91c2VySW50ZXJmYWNlL2JvYXJkRE9NbG9hZGVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLFxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuYm9keSB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuI2NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBtYXJnaW46IDEwcHg7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxcbn1cXG4vKnN0eWxlcyBmb3IgdGhlIHBsYWNlbWVudCBtb2R1bGUgKi9cXG4ucGxhY2VtZW50LW1vZHVsZS1jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIC8qYm90dG9tOiA3MHZoO1xcbiAgICBsZWZ0OiA1OS41dmg7XFxuICAgIHdpZHRoOiA0MzBweDsqL1xcbiAgICBib3R0b206IDcwdmg7XFxuICAgIGxlZnQ6IDEwdmg7XFxuICAgIHdpZHRoOiA3NSU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG4ucGxhY2VtZW50LW1vZHVsZS1zdWJjb250YWluZXIsIC5yaWdodEluZm9TdWJjb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG4ucmlnaHRJbmZvU3ViY29udGFpbmVyIHtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG4ucmlnaHRJbmZvQnV0dG9uc0NvbnRhaW5lciB7XFxuICAgIFxcbn1cXG4uc2hpcEFsbENsYXNzZXNDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDI1NSwgMCk7XFxuICAgIGdhcDogMjBweDtcXG4gICAgXFxufVxcbi5zaW5nbGVTaGlwQ2xhc3NDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcbi5zaGlwIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIGJvcmRlcjogc29saWQgYmxhY2sgMnB4O1xcbn1cXG4uc2hpcEFsdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogM3B4O1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrIDJweDtcXG59XFxuXFxuLypzdHlsZXMgZm9yIHRoZSB0d28gZ3JpZHMgYW5kIGNvb3JkaW5hdGVzICovXFxuLmRvdWJsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxNzVweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuLnNpbmdsZUJvYXJkQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLnhDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcXG59XFxuLnlDb29yZGluYXRlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxufVxcbi5sZWZ0U3F1YXJlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5sZWZ0U3F1YXJlLCAudXBwZXJTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLnN1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcbi5wbGFjZW1lbnRTcXVhcmUge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiAzNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG9wYWNpdHk6IDE7XFxufVxcbi5zcXVhcmUge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5zcXVhcmU6aG92ZXIsIC5wbGFjZW1lbnRTcXVhcmU6aG92ZXIge1xcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYmQ1ZTE7XFxufVxcbi5zcXVhcmVDb250YWluZXIge1xcblxcbn1cXG4uZ3JpZC1jb250YWluZXIge1xcbiAgICBoZWlnaHQ6IDM1MHB4O1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAzNXB4KTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDM1cHgpO1xcbiAgICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xcbiAgICBnYXA6IDNweDtcXG59XFxuLyogc3R5bGVzIGZvciBzY29yZSBjYXJkICovXFxuLnNpbmdsZUJvYXJkU2NvcmVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xcbn1cXG5cXG4vKnN0eWxlcyBmb3IgZ2FtZSBjb250cm9sbGVyIGh1ZCovXFxuLnBvcHVsYXRlQnV0dG9uLCAucGxhY2VtZW50QnV0dG9uIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICB3aWR0aDogNjBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5idXR0b25Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDE1cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG4uZm9ybUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDVweDtcXG4gICAgbWFyZ2luOiAxMHB4O1xcbn1cXG4ud2lubmVyQ2FyZCB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbiAgICB0b3A6IDM1JTtcXG4gICAgbGVmdDogNDklO1xcbn1cXG4uc2VsZWN0U3F1YXJlIHtcXG4gICAgXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0lBRUksU0FBUztJQUNULFlBQVk7QUFDaEI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWjtBQUNKO0FBQ0EsbUNBQW1DO0FBQ25DO0lBQ0ksa0JBQWtCO0lBQ2xCOztrQkFFYztJQUNkLFlBQVk7SUFDWixVQUFVO0lBQ1YsVUFBVTtJQUNWLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksU0FBUztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIscUNBQXFDO0lBQ3JDLG9DQUFvQztJQUNwQyxTQUFTOztBQUViO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjtBQUNBO0lBQ0ksYUFBYTtJQUNiLFFBQVE7SUFDUix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsUUFBUTtJQUNSLHVCQUF1QjtBQUMzQjs7QUFFQSw0Q0FBNEM7QUFDNUM7SUFDSSxhQUFhO0lBQ2IsVUFBVTtJQUNWLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLGFBQWE7SUFDYixRQUFRO0lBQ1IsaUJBQWlCO0lBQ2pCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixRQUFRO0lBQ1IsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixVQUFVO0FBQ2Q7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osZUFBZTtJQUNmLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGVBQWU7SUFDZixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQix5QkFBeUI7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixhQUFhO0lBQ2IsdUNBQXVDO0lBQ3ZDLG9DQUFvQztJQUNwQyxzQkFBc0I7SUFDdEIsUUFBUTtBQUNaO0FBQ0EsMEJBQTBCO0FBQzFCO0lBQ0ksYUFBYTtJQUNiLFFBQVE7SUFDUixxQkFBcUI7QUFDekI7O0FBRUEsaUNBQWlDO0FBQ2pDO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCx1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsUUFBUTtJQUNSLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsUUFBUTtJQUNSLFNBQVM7QUFDYjtBQUNBOztBQUVBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwsXFxuYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5ib2R5IHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4jY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXFxufVxcbi8qc3R5bGVzIGZvciB0aGUgcGxhY2VtZW50IG1vZHVsZSAqL1xcbi5wbGFjZW1lbnQtbW9kdWxlLWNvbnRhaW5lciB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgLypib3R0b206IDcwdmg7XFxuICAgIGxlZnQ6IDU5LjV2aDtcXG4gICAgd2lkdGg6IDQzMHB4OyovXFxuICAgIGJvdHRvbTogNzB2aDtcXG4gICAgbGVmdDogMTB2aDtcXG4gICAgd2lkdGg6IDc1JTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcbi5wbGFjZW1lbnQtbW9kdWxlLXN1YmNvbnRhaW5lciwgLnJpZ2h0SW5mb1N1YmNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcbi5yaWdodEluZm9TdWJjb250YWluZXIge1xcbiAgICBnYXA6IDEwcHg7XFxufVxcbi5yaWdodEluZm9CdXR0b25zQ29udGFpbmVyIHtcXG4gICAgXFxufVxcbi5zaGlwQWxsQ2xhc3Nlc0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMjU1LCAwKTtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBcXG59XFxuLnNpbmdsZVNoaXBDbGFzc0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG59XFxuLnNoaXAge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDNweDtcXG4gICAgYm9yZGVyOiBzb2xpZCBibGFjayAycHg7XFxufVxcbi5zaGlwQWx0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIGJvcmRlcjogc29saWQgYmxhY2sgMnB4O1xcbn1cXG5cXG4vKnN0eWxlcyBmb3IgdGhlIHR3byBncmlkcyBhbmQgY29vcmRpbmF0ZXMgKi9cXG4uZG91YmxlQm9hcmRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDE3NXB4O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG4uc2luZ2xlQm9hcmRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG4ueENvb3JkaW5hdGVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDNweDtcXG4gICAgbWFyZ2luLWxlZnQ6IDM1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IC0xMHB4O1xcbn1cXG4ueUNvb3JkaW5hdGVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDNweDtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuLmxlZnRTcXVhcmUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmxlZnRTcXVhcmUsIC51cHBlclNxdWFyZSB7XFxuICAgIGhlaWdodDogMzVweDtcXG4gICAgd2lkdGg6IDM1cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG4uc3ViY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuLnBsYWNlbWVudFNxdWFyZSB7XFxuICAgIGhlaWdodDogMzVweDtcXG4gICAgd2lkdGg6IDM1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgb3BhY2l0eTogMTtcXG59XFxuLnNxdWFyZSB7XFxuICAgIGJvcmRlcjogc29saWQgYmxhY2s7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLnNxdWFyZTpob3ZlciwgLnBsYWNlbWVudFNxdWFyZTpob3ZlciB7XFxuICAgIGJvcmRlcjogc29saWQgYmxhY2s7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NiZDVlMTtcXG59XFxuLnNxdWFyZUNvbnRhaW5lciB7XFxuXFxufVxcbi5ncmlkLWNvbnRhaW5lciB7XFxuICAgIGhlaWdodDogMzUwcHg7XFxuICAgIHdpZHRoOiAzNTBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDM1cHgpO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMzVweCk7XFxuICAgIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XFxuICAgIGdhcDogM3B4O1xcbn1cXG4vKiBzdHlsZXMgZm9yIHNjb3JlIGNhcmQgKi9cXG4uc2luZ2xlQm9hcmRTY29yZUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XFxufVxcblxcbi8qc3R5bGVzIGZvciBnYW1lIGNvbnRyb2xsZXIgaHVkKi9cXG4ucG9wdWxhdGVCdXR0b24sIC5wbGFjZW1lbnRCdXR0b24ge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIHdpZHRoOiA2MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLmJ1dHRvbkNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5mb3JtQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogNXB4O1xcbiAgICBtYXJnaW46IDEwcHg7XFxufVxcbi53aW5uZXJDYXJkIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICAgIHRvcDogMzUlO1xcbiAgICBsZWZ0OiA0OSU7XFxufVxcbi5zZWxlY3RTcXVhcmUge1xcbiAgICBcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBHYW1lYm9hcmQgfSBmcm9tICcuL2dhbWVib2FyZC5qcyc7XG4vL2NvbnN0IEdhbWVib2FyZCA9IHJlcXVpcmUoJy4vZ2FtZWJvYXJkLmpzJyk7XG5cbmNsYXNzIFNoaXAge1xuICBjb25zdHJ1Y3RvcihzaXplLCB4U3RhcnQsIHlTdGFydCwgZGlyZWN0aW9uKSB7XG4gICAgdGhpcy5zaXplID0gc2l6ZVxuICAgIHRoaXMuaGl0cyA9IFtdXG4gICAgdGhpcy54U3RhcnQgPSB4U3RhcnRcbiAgICB0aGlzLnlTdGFydCA9IHlTdGFydFxuICAgIHRoaXMuZGlyZWN0aW9uID0gbnVsbFxuICB9XG4gIGhpdCgpIHtcbiAgICB0aGlzLmhpdHMucHVzaCgnaGl0Jyk7XG4gICAgaWYgKHRoaXMuaGl0cy5sZW5ndGggPT0gdGhpcy5zaXplKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc1N1bmsoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuaGl0O1xuICAgIH1cbiAgfVxuICBpc1N1bmsoKSB7XG4gICAgcmV0dXJuICdzdW5rISdcbiAgfVxuICB9IFxuXG5leHBvcnQgeyBTaGlwIH1cbiIsImltcG9ydCB7IFNoaXAgfSBmcm9tICcuL3NoaXAuanMnO1xuXG5jbGFzcyBTcXVhcmUge1xuICAgIGNvbnN0cnVjdG9yKFgsIFkpIHtcbiAgICAgICAgdGhpcy5YID0gWDtcbiAgICAgICAgdGhpcy5ZID0gWTtcbiAgICAgICAgdGhpcy5pc0hpdCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNvbnRhaW5zU2hpcCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNoaXAgPSBudWxsO1xuICAgICAgICAvL3RoaXMuc3RhcnQgPSBudWxsXG4gICAgfVxufVxuY2xhc3MgR2FtZWJvYXJkIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICB0aGlzLnhBeGlzID0gWydBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJ11cbiAgICAgICAgdGhpcy55QXhpcyA9IFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMF1cbiAgICAgICAgdGhpcy5ncmlkID0gdGhpcy5tYWtlR3JpZCgpXG4gICAgfVxuICAgIHJlY2VpdmVBdHRhY2soeExldHRlciwgeU51bSkge1xuICAgICAgICBsZXQgZm91bmQgPSB0aGlzLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHhMZXR0ZXIgJiYgc3F1YXJlLlkgPT0geU51bSkpO1xuICAgICAgICBmb3VuZC5pc0hpdCA9IHRydWU7XG4gICAgICAgIGlmIChmb3VuZC5jb250YWluc1NoaXAgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgZm91bmQuc2hpcC5oaXQoKTtcbiAgICAgICAgICAgIHJldHVybiBmb3VuZC5zaGlwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3VuZC5zaGlwO1xuICAgIH1cbiAgICBtYWtlR3JpZCgpIHtcbiAgICAgICAgbGV0IGdyaWQgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCB0aGlzLnhBeGlzLmxlbmd0aDsgeCsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IHRoaXMueUF4aXMubGVuZ3RoOyB5KyspIHtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gbmV3IFNxdWFyZSh0aGlzLnhBeGlzW3hdLCB0aGlzLnlBeGlzW3ldKTtcbiAgICAgICAgICAgICAgICBncmlkLnB1c2goc3F1YXJlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ3JpZDtcbiAgICB9XG4gICAgcG9wdWxhdGVTaGlwKHNpemUsIHhTdGFydCwgeVN0YXJ0LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgaWYgKHNpemUgPiAxKSB7XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwibm9ydGhcIikge1xuICAgICAgICAgICAgICAgIGlmICh5U3RhcnQgPCBzaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvdmVyZmxvdyBhdCAnICsgeFN0YXJ0ICsgeVN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdvdmVyZmxvdyEnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRpcmVjdGlvbiA9PSBcInNvdXRoXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoKHlTdGFydCAtIDEpID4gKDEwIC0gc2l6ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ292ZXJmbG93IGF0ICcgKyB4U3RhcnQgKyB5U3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ292ZXJmbG93ISdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwid2VzdFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpIDwgKHNpemUgLSAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb3ZlcmZsb3cgYXQgJyArIHhTdGFydCArIHlTdGFydCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnb3ZlcmZsb3chJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT0gXCJlYXN0XCIpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy54QXhpcy5pbmRleE9mKHhTdGFydCkgPiAoMTAgLSBzaXplKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb3ZlcmZsb3cgYXQgJyArIHhTdGFydCArIHlTdGFydCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnb3ZlcmZsb3chJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgbmV3U2hpcCA9IG5ldyBTaGlwKHNpemUsIHhTdGFydCwgeVN0YXJ0LCBkaXJlY3Rpb24pO1xuICAgICAgICBjb25zb2xlLmxvZyhcIm5ldyBTaGlwIHkgPSBcIiArIG5ld1NoaXAueVN0YXJ0KTtcbiAgICAgICAgbmV3U2hpcC5kaXJlY3Rpb24gPSBkaXJlY3Rpb247XG4gICAgICAgIGxldCBzdGFydGluZ1NxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKTtcbiAgICAgICAgbGV0IHNxdWFyZXNDb250YWluaW5nTmV3U2hpcCA9IFtdO1xuICAgICAgICBzdGFydGluZ1NxdWFyZS5jb250YWluc1NoaXAgPSB0cnVlO1xuICAgICAgICBzdGFydGluZ1NxdWFyZS5zaGlwID0gbmV3U2hpcDtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmdyaWQpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKSk7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5ncmlkW3RoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKV0pO1xuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuZ3JpZFt0aGlzLmdyaWQuaW5kZXhPZihzdGFydGluZ1NxdWFyZSkgKyAxXSk7XG4gICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgbGV0IHlJbmRleCA9IHRoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKTtcbiAgICAgICAgd2hpbGUgKHNpemUgPiAxKSB7XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwibm9ydGhcIikge1xuICAgICAgICAgICAgICAgIHlTdGFydCA9IHlTdGFydCAtIDE7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwic291dGhcIikge1xuICAgICAgICAgICAgICAgIC8veVN0YXJ0ID0geVN0YXJ0ICsgMTtcbiAgICAgICAgICAgICAgICB5SW5kZXggKz0gMVxuICAgICAgICAgICAgICAgIC8vbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZFt5SW5kZXhdO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5ncmlkW3RoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKSArIDEwXSk7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcImVhc3RcIikge1xuICAgICAgICAgICAgICAgIHhTdGFydCA9IHRoaXMueEF4aXNbdGhpcy54QXhpcy5pbmRleE9mKHhTdGFydCkgKyAxXTtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4U3RhcnQgJiYgc3F1YXJlLlkgPT0gbmV3U2hpcC55U3RhcnQpKVxuICAgICAgICAgICAgICAgIHNxdWFyZS5jb250YWluc1NoaXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zaGlwID0gbmV3U2hpcDtcbiAgICAgICAgICAgICAgICBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAucHVzaChzcXVhcmUpO1xuICAgICAgICAgICAgICAgIHNpemUgPSBzaXplIC0gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09IFwid2VzdFwiKSB7XG4gICAgICAgICAgICAgICAgeFN0YXJ0ID0gdGhpcy54QXhpc1t0aGlzLnhBeGlzLmluZGV4T2YoeFN0YXJ0KSAtIDFdO1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmUgPSB0aGlzLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHhTdGFydCAmJiBzcXVhcmUuWSA9PSBuZXdTaGlwLnlTdGFydCkpXG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcDtcbiAgICAgICAgLy9hZGQgc29tZSBjb2RlIHRvIGFjY291bnQgZm9yIHNpemUgPiAxIGFuZCBkaXJlY3Rpb25cbiAgICB9XG4gICAgZGVwb3B1bGF0ZVNoaXAoc2l6ZSwgeFN0YXJ0LCB5U3RhcnQsIGRpcmVjdGlvbikge1xuICAgICAgICBsZXQgbmV3U2hpcCA9IG5ldyBTaGlwKHNpemUsIHhTdGFydCwgeVN0YXJ0KTtcbiAgICAgICAgbGV0IHN0YXJ0aW5nU3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSBuZXdTaGlwLnhTdGFydCAmJiBzcXVhcmUuWSA9PSBuZXdTaGlwLnlTdGFydCkpO1xuICAgICAgICBsZXQgc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwID0gW107XG4gICAgICAgIHN0YXJ0aW5nU3F1YXJlLmNvbnRhaW5zU2hpcCA9IGZhbHNlO1xuICAgICAgICBzdGFydGluZ1NxdWFyZS5zaGlwID0gbnVsbDtcbiAgICAgICAgc3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwLnB1c2goc3RhcnRpbmdTcXVhcmUpO1xuICAgICAgICBsZXQgeUluZGV4ID0gdGhpcy5ncmlkLmluZGV4T2Yoc3RhcnRpbmdTcXVhcmUpO1xuICAgICAgICB3aGlsZSAoc2l6ZSA+IDEpIHtcbiAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT0gXCJub3J0aFwiKSB7XG4gICAgICAgICAgICAgICAgeVN0YXJ0ID0geVN0YXJ0IC0gMTtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSBuZXdTaGlwLnhTdGFydCAmJiBzcXVhcmUuWSA9PSB5U3RhcnQpKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY29udGFpbnNTaGlwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBudWxsO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IFwic291dGhcIikge1xuICAgICAgICAgICAgICAgIC8veVN0YXJ0ID0geVN0YXJ0ICsgMTtcbiAgICAgICAgICAgICAgICB5SW5kZXggKz0gMVxuICAgICAgICAgICAgICAgIC8vbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gbmV3U2hpcC54U3RhcnQgJiYgc3F1YXJlLlkgPT0geVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZFt5SW5kZXhdO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5ncmlkW3RoaXMuZ3JpZC5pbmRleE9mKHN0YXJ0aW5nU3F1YXJlKSArIDEwXSk7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNvbnRhaW5zU2hpcCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zaGlwID0gbnVsbDtcbiAgICAgICAgICAgICAgICBzcXVhcmVzQ29udGFpbmluZ05ld1NoaXAucHVzaChzcXVhcmUpXG4gICAgICAgICAgICAgICAgc2l6ZSA9IHNpemUgLSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gXCJlYXN0XCIpIHtcbiAgICAgICAgICAgICAgICB4U3RhcnQgPSB0aGlzLnhBeGlzW3RoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpICsgMV07XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0geFN0YXJ0ICYmIHNxdWFyZS5ZID09IG5ld1NoaXAueVN0YXJ0KSlcbiAgICAgICAgICAgICAgICBzcXVhcmUuY29udGFpbnNTaGlwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBudWxsO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSk7XG4gICAgICAgICAgICAgICAgc2l6ZSA9IHNpemUgLSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gXCJ3ZXN0XCIpIHtcbiAgICAgICAgICAgICAgICB4U3RhcnQgPSB0aGlzLnhBeGlzW3RoaXMueEF4aXMuaW5kZXhPZih4U3RhcnQpIC0gMV07XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0geFN0YXJ0ICYmIHNxdWFyZS5ZID09IG5ld1NoaXAueVN0YXJ0KSlcbiAgICAgICAgICAgICAgICBzcXVhcmUuY29udGFpbnNTaGlwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNoaXAgPSBudWxsO1xuICAgICAgICAgICAgICAgIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcC5wdXNoKHNxdWFyZSlcbiAgICAgICAgICAgICAgICBzaXplID0gc2l6ZSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNxdWFyZXNDb250YWluaW5nTmV3U2hpcDtcbiAgICAgICAgLy9hZGQgc29tZSBjb2RlIHRvIGFjY291bnQgZm9yIHNpemUgPiAxIGFuZCBkaXJlY3Rpb25cbiAgICB9XG59XG5cblxuZXhwb3J0IHsgR2FtZWJvYXJkLCBTcXVhcmUgfSIsImltcG9ydCB7IGdhbWVCb2FyZExvYWRlciwgcGxhY2VtZW50TW9kdWxlTG9hZGVyIH0gZnJvbSAnLi9ib2FyZERPTWxvYWRlci5qcyc7XG5pbXBvcnQgeyBHYW1lYm9hcmQgfSBmcm9tICcuLi9nYW1lQXBwTG9naWMvZ2FtZWJvYXJkLmpzJztcblxubGV0IHBsYXllckJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xubGV0IGFpQm9hcmQgPSBuZXcgR2FtZWJvYXJkKCk7XG5sZXQgcGxheWVyID0gXCJ0YXlsb3JcIlxubGV0IGFpID0gXCJjb21wdXRlclwiXG5sZXQgYm9hcmRzID0gbmV3IGdhbWVCb2FyZExvYWRlcihwbGF5ZXJCb2FyZCwgcGxheWVyLCBhaUJvYXJkLCBhaSk7XG5jb25zdCBwbGF5ZXJQb3B1bGF0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xucGxheWVyUG9wdWxhdGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzaW1wbGVQb3B1bGF0ZSk7XG5wbGF5ZXJQb3B1bGF0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwb3B1bGF0ZUJ1dHRvbicpO1xucGxheWVyUG9wdWxhdGVCdXR0b24udGV4dENvbnRlbnQgPSBcIlBvcHVsYXRlIFBsYXllclwiO1xuY29uc3QgYWlQb3B1bGF0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuYWlQb3B1bGF0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNpbXBsZVBvcHVsYXRlQUkpO1xuYWlQb3B1bGF0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwb3B1bGF0ZUJ1dHRvbicpO1xuYWlQb3B1bGF0ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiUG9wdWxhdGUgQUlcIjtcbmNvbnN0IGF0dGFja0FJQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5hdHRhY2tBSUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGF0dGFja0FJKTtcbmF0dGFja0FJQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3BvcHVsYXRlQnV0dG9uJyk7XG5hdHRhY2tBSUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQXR0YWNrIEFJXCI7XG5jb25zdCBhdHRhY2tQbGF5ZXJCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbmF0dGFja1BsYXllckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGF0dGFja1BsYXllcik7XG5hdHRhY2tQbGF5ZXJCdXR0b24uY2xhc3NMaXN0LmFkZCgncG9wdWxhdGVCdXR0b24nKTtcbmF0dGFja1BsYXllckJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQXR0YWNrIFBsYXllclwiXG5cbmZ1bmN0aW9uIGdlbmVyYXRlSFVEKCkge1xuICAgIGJvYXJkcztcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGdlbmVyYXRlQnV0dG9ucygpKTtcbiAgICAvL2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZ2VuZXJhdGVGb3JtKCkpO1xufVxuZnVuY3Rpb24gZ2VuZXJhdGVIVUR3aXRoU2hpcFBsYWNlbWVudCgpIHtcbiAgICBib2FyZHM7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChnZW5lcmF0ZUJ1dHRvbnMoKSk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChnZW5lcmF0ZUZvcm0oKSk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwbGFjZW1lbnRNb2R1bGVMb2FkZXIoKSk7XG59XG5mdW5jdGlvbiBnZW5lcmF0ZUJ1dHRvbnMoKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdidXR0b25Db250YWluZXInKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyUG9wdWxhdGVCdXR0b24pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhaVBvcHVsYXRlQnV0dG9uKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYXR0YWNrUGxheWVyQnV0dG9uKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYXR0YWNrQUlCdXR0b24pO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG4gICAgZnVuY3Rpb24gc2ltcGxlUG9wdWxhdGUoKSB7XG4gICAgICAgIGJvYXJkcy5zaW1wbGVQb3B1bGF0ZSgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzaW1wbGVQb3B1bGF0ZUFJKCkge1xuICAgICAgICBib2FyZHMuc2ltcGxlUG9wdWxhdGVBSSgpO1xuICAgIH1cbmZ1bmN0aW9uIHBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIGRpcmVjdGlvbikge1xuICAgIGJvYXJkcy5wb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pO1xufTtcbmZ1bmN0aW9uIGRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKSB7XG4gICAgYm9hcmRzLmRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKTtcbn1cbi8vdGhpcyBmdW5jdGlvbiBpcyB1c2VkIHdpdGggdGhlIHNoaXAgcGxhY2VtZW50IG1vZHVsZVxuICAgIC8vd2hlbmV2ZXIgeW91IHJlc2V0IHNoaXAgcGxhY2VtZW50LCB5b3UgYWxzbyBuZWVkIHRvIHJlbG9hZCBwbGF5ZXIgJiBhaSBib2FyZHNcbiAgICAvL3RvIGRlbGV0ZSBhbnkgc2hpcHMgcGxhY2VkIGR1cmluZyBwcmlvciBzaGlwIHBsYWNlbWVudCBwaGFzZVxuZnVuY3Rpb24gcmVsb2FkQm9hcmRzKCkge1xuICAgIGJvYXJkcy5yZWxvYWRCb2FyZHMoKTtcbn1cblxuXG4vL2FpQXJyYXkgYmVsb3cgY29udGFpbnMgZ2xvYmFsbHkgYXZhaWxhYmxlIGNvcHkgb2YgcGxheWVyQm9hcmQgZ3JpZCwgZm9yIHVzZSBieSBBSVxuLy9ldmVyeSB0aW1lIHRoZSBBSSBhdHRhY2tzIHBsYXllciwgc2VsZWN0cyBvbmUgZWxlbWVudCBhdCByYW5kb20gZnJvbSB0aGUgYXJyYXkgYW5kIHRoZW4gcmVtb3ZlcyBpdFxuLy9zbyB0aGF0IGZ1dHVyZSBpbnZvY2F0aW9ucyBjYW5ub3QgYXR0YWNrIHRoZSBzYW1lIGxvY2F0aW9uXG5jb25zdCBhaUFycmF5ID0gYm9hcmRzLnBsYXllckJvYXJkLmdyaWQuc2xpY2UoKTtcbmZ1bmN0aW9uIGF0dGFja0FJKHgsIHkpIHtcbiAgICBsZXQgZm91bmQgPSBib2FyZHMuYWlCb2FyZC5ncmlkLmZpbmQoc3F1YXJlID0+IChzcXVhcmUuWCA9PSB4ICYmIHNxdWFyZS5ZID09IHkpKTtcbiAgICBjb25zb2xlLmxvZyhmb3VuZCk7XG4gICAgaWYgKGZvdW5kLmlzSGl0ID09IHRydWUpIHsgYWxlcnQoXCJZb3UgaGF2ZSBhbHJlYWR5IGF0dGFja2VkIHRoYXQgc3F1YXJlISBUcnkgYW5vdGhlci5cIikgfVxuICAgIGlmIChmb3VuZC5pc0hpdCA9PSBmYWxzZSkge1xuICAgICAgICBsZXQgaW5kZXggPSBib2FyZHMuYWlCb2FyZC5ncmlkLmluZGV4T2YoZm91bmQpO1xuICAgICAgICBhaUFycmF5LnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIGJvYXJkcy5hdHRhY2tBSSh4LCB5KTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBhdHRhY2tQbGF5ZXIoKTtcbiAgICAgICAgfSwgXCI1MDBcIik7XG4gICAgfVxufVxuXG4vL3BsYXllckFycmF5IGJlbG93IGNvbnRhaW5zIGdsb2JhbGx5IGF2YWlsYWJsZSBjb3B5IG9mIHBsYXllckJvYXJkIGdyaWQsIGZvciB1c2UgYnkgQUlcbi8vZXZlcnkgdGltZSB0aGUgQUkgYXR0YWNrcyBwbGF5ZXIsIHNlbGVjdHMgb25lIGVsZW1lbnQgYXQgcmFuZG9tIGZyb20gdGhlIGFycmF5IGFuZCB0aGVuIHJlbW92ZXMgaXRcbi8vc28gdGhhdCBmdXR1cmUgaW52b2NhdGlvbnMgY2Fubm90IGF0dGFjayB0aGUgc2FtZSBsb2NhdGlvblxuY29uc3QgcGxheWVyQXJyYXkgPSBib2FyZHMucGxheWVyQm9hcmQuZ3JpZC5zbGljZSgpO1xuZnVuY3Rpb24gYXR0YWNrUGxheWVyKCkge1xuICAgIGlmIChwbGF5ZXJBcnJheS5sZW5ndGggPT0gMCkgcmV0dXJuIGFsZXJ0KCdnYW1lIG92ZXIhJylcbiAgICBsZXQgcmFuZG9tID0gcGxheWVyQXJyYXlbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcGxheWVyQXJyYXkubGVuZ3RoKV07XG4gICAgbGV0IHggPSByYW5kb20uWDtcbiAgICBsZXQgeSA9IHJhbmRvbS5ZO1xuICAgIGxldCBpbmRleCA9IHBsYXllckFycmF5LmluZGV4T2YocmFuZG9tKTtcbiAgICBwbGF5ZXJBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIGJvYXJkcy5hdHRhY2tQbGF5ZXIoeCwgeSk7XG59XG4vL3NjcmlwdGluZyBmb3JtcyBmb3IgaW5wdXR0aW5nIGNvb3JkaW5hdGVzXG5sZXQgeExhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbnhMYWJlbC5jbGFzc0xpc3QuYWRkKCdhdHRhY2tMYWJlbCcpO1xueExhYmVsLnRleHRDb250ZW50ID0gXCJJbnB1dCBYIENvb3JkaW5hdGU6IFwiXG5sZXQgeElucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbnhJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcbmxldCB5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xueUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2F0dGFja0xhYmVsJyk7XG55TGFiZWwudGV4dENvbnRlbnQgPSBcIklucHV0IFkgQ29vcmRpbmF0ZTogXCJcbmxldCB5SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xueUlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuXG5mdW5jdGlvbiByZXR1cm5YRm9ybSgpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1Db250YWluZXInKVxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4TGFiZWwpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4SW5wdXQpO1xuICAgIHJldHVybiBjb250YWluZXJcbn1cbmZ1bmN0aW9uIHJldHVybllGb3JtKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybUNvbnRhaW5lcicpXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHlMYWJlbCk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHlJbnB1dCk7XG4gICAgcmV0dXJuIGNvbnRhaW5lclxufVxuZnVuY3Rpb24gZ2VuZXJhdGVGb3JtKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybUNvbnRhaW5lcicpXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHJldHVyblhGb3JtKCkpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZXR1cm5ZRm9ybSgpKTtcbiAgICByZXR1cm4gY29udGFpbmVyXG59XG5cbi8vcHV0IGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBBSSBib2FyZCwgc3VjaCB0aGF0IGVhY2ggc3F1YXJlLCB3aGVuIHlvdSBjbGljayBpdCxcbi8veWllbGRzIFggYW5kIFkgdmFsdWVzIHdoaWNoIGl0IHBsdWdzIGludG8gYXR0YWNrQUkoKVxuXG5cblxuZXhwb3J0IHsgcmVsb2FkQm9hcmRzLCBnZW5lcmF0ZUhVRCwgYXR0YWNrQUksIGdlbmVyYXRlRm9ybSwgcG9wdWxhdGVQbGF5ZXIsIHNpbXBsZVBvcHVsYXRlLCBzaW1wbGVQb3B1bGF0ZUFJLCBkZXBvcHVsYXRlUGxheWVyIH1cbiIsImltcG9ydCB7IEdhbWVib2FyZCwgU3F1YXJlIH0gZnJvbSAnLi4vZ2FtZUFwcExvZ2ljL2dhbWVib2FyZC5qcyc7XG5pbXBvcnQgeyBBSSB9IGZyb20gJy4uL3BsYXllckNvbnRyb2xzL2FpLmpzJztcbmltcG9ydCB7IFBsYXllciB9IGZyb20gJy4uL3BsYXllckNvbnRyb2xzL3BsYXllci5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUhVRCwgYXR0YWNrQUksIHBvcHVsYXRlUGxheWVyLCBzaW1wbGVQb3B1bGF0ZUFJLCBkZXBvcHVsYXRlUGxheWVyLCByZWxvYWRCb2FyZHMgfSBmcm9tICcuL2NvbnRyb2xsZXIuanMnO1xuXG5cbi8vc3VpdGUgb2YgZnVuY3Rpb25zIGZvciBsb2FkaW5nIHRoZSB0d28gRE9NIGJvYXJkcyAmIHNjb3JlIGtlZXBlciBjYXJkXG5mdW5jdGlvbiBzcXVhcmVMb2FkZXIoY29vcmRpbmF0ZSwgcGxheWVyID0gXCJhaVwiKSB7XG4gICAgbGV0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKCdzcXVhcmUnKTtcbiAgICBpZiAoY29vcmRpbmF0ZS5pc0hpdCA9PSB0cnVlKSB7XG4gICAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiM2ZWU3YjdcIjtcbiAgICB9XG4gICAgaWYgKHBsYXllciA9PSBcImFpXCIpIHtcbiAgICAgICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHggPSBjb29yZGluYXRlLlg7XG4gICAgICAgICAgICBsZXQgeSA9IGNvb3JkaW5hdGUuWTtcbiAgICAgICAgICAgIGF0dGFja0FJKHgsIHkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coeCArIHkpXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoY29vcmRpbmF0ZS5pc0hpdCA9PSB0cnVlICYmIGNvb3JkaW5hdGUuY29udGFpbnNTaGlwID09IHRydWUpIHtcbiAgICAgICAgc3F1YXJlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmVkXCI7XG4gICAgICAgIHNxdWFyZS50ZXh0Q29udGVudCA9IFwiWFwiO1xuICAgIH1cbiAgICBpZiAoY29vcmRpbmF0ZS5jb250YWluc1NoaXAgPT0gdHJ1ZSkge1xuICAgICAgICBzcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZWRcIjtcbiAgICB9XG4gICAgcmV0dXJuIHNxdWFyZTtcbn1cbmZ1bmN0aW9uIGJvYXJkTG9hZGVyKGJvYXJkLCBwbGF5ZXIpIHtcbiAgICBsZXQgYXJyYXlPZkdyaWRDb29yZGluYXRlcyA9IGJvYXJkLmdyaWQ7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdncmlkLWNvbnRhaW5lcicpO1xuICAgIGFycmF5T2ZHcmlkQ29vcmRpbmF0ZXMuZm9yRWFjaCgoY29vcmRpbmF0ZSkgPT4ge1xuICAgICAgICBsZXQgc3F1YXJlID0gc3F1YXJlTG9hZGVyKGNvb3JkaW5hdGUsIHBsYXllcik7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgIH0pXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5mdW5jdGlvbiB4Q29vcmRpbmF0ZUxvYWRlcigpIHtcbiAgICBsZXQgYXJyYXlPZlhDb29yZGluYXRlcyA9IFsnQScsICdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSiddO1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgneENvb3JkaW5hdGVDb250YWluZXInKTtcbiAgICBhcnJheU9mWENvb3JkaW5hdGVzLmZvckVhY2goKGNvb3JkaW5hdGUpID0+IHtcbiAgICAgICAgbGV0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZCgndXBwZXJTcXVhcmUnKTtcbiAgICAgICAgc3F1YXJlLnRleHRDb250ZW50ID0gY29vcmRpbmF0ZTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIHhDb29yZGluYXRlRG91YmxlcigpIHtcbiAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3hDb29yZGluYXRlQ29udGFpbmVyRG91YmxlJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHhDb29yZGluYXRlTG9hZGVyKCkpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24geUNvb3JkaW5hdGVMb2FkZXIoKSB7XG4gICAgbGV0IGFycmF5T2ZYQ29vcmRpbmF0ZXMgPSBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTBdO1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgneUNvb3JkaW5hdGVDb250YWluZXInKTtcbiAgICBhcnJheU9mWENvb3JkaW5hdGVzLmZvckVhY2goKGNvb3JkaW5hdGUpID0+IHtcbiAgICAgICAgbGV0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZCgnbGVmdFNxdWFyZScpO1xuICAgICAgICBzcXVhcmUudGV4dENvbnRlbnQgPSBjb29yZGluYXRlO1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuZnVuY3Rpb24gcGxheWVyQ29vcmRpbmF0ZWRCb2FyZExvYWRlcihib2FyZCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2luZ2xlQm9hcmRDb250YWluZXInKVxuICAgIGxldCBzdWJjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzdWJjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc3ViY29udGFpbmVyJyk7XG4gICAgICAgIHN1YmNvbnRhaW5lci5hcHBlbmRDaGlsZCh5Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgc3ViY29udGFpbmVyLmFwcGVuZENoaWxkKGJvYXJkTG9hZGVyKGJvYXJkLCBcInBsYXllclwiKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHN1YmNvbnRhaW5lcik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIGFpQ29vcmRpbmF0ZWRCb2FyZExvYWRlcihib2FyZCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2luZ2xlQm9hcmRDb250YWluZXInKVxuICAgIGxldCBzdWJjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzdWJjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc3ViY29udGFpbmVyJyk7XG4gICAgICAgIHN1YmNvbnRhaW5lci5hcHBlbmRDaGlsZCh5Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgc3ViY29udGFpbmVyLmFwcGVuZENoaWxkKGJvYXJkTG9hZGVyKGJvYXJkKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHN1YmNvbnRhaW5lcik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIHR3b0JvYXJkQ29udGVudEdlbmVyYXRvcihwbGF5ZXJCb2FyZCwgb3Bwb25lbnRCb2FyZCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZG91YmxlQm9hcmRDb250YWluZXInKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyQ29vcmRpbmF0ZWRCb2FyZExvYWRlcihwbGF5ZXJCb2FyZCkpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhaUNvb3JkaW5hdGVkQm9hcmRMb2FkZXIob3Bwb25lbnRCb2FyZCkpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiB0d29Cb2FyZERPTUxvYWRlcihwbGF5ZXJCb2FyZCwgb3Bwb25lbnRCb2FyZCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgY29udGFpbmVyLnByZXBlbmQodHdvQm9hcmRDb250ZW50R2VuZXJhdG9yKHBsYXllckJvYXJkLCBvcHBvbmVudEJvYXJkKSk7IFxufVxuZnVuY3Rpb24gc2NvcmVLZWVwZXJHZW5lcmF0b3IocGxheWVyLCBpbnB1dCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2luZ2xlQm9hcmRTY29yZUNvbnRhaW5lcicpXG4gICAgbGV0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGV0IHNjb3JlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSBwbGF5ZXIgKyBcIiBzY29yZTogXCJcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzY29yZSk7XG4gICAgc2NvcmUudGV4dENvbnRlbnQgPSBpbnB1dCArIFwiLzVcIjtcbiAgICByZXR1cm4gY29udGFpbmVyXG59XG5mdW5jdGlvbiBkb3VibGVTY29yZUtlZXBlckdlbmVyYXRvcihwbGF5ZXIxLCBpbnB1dDEsIHBsYXllcjIsIGlucHV0Mikge1xuICAgIGxldCBzY29yZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNjb3JlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Njb3JlS2VlcGVyQ29udGFpbmVyJyk7XG4gICAgc2NvcmVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2NvcmVLZWVwZXJHZW5lcmF0b3IocGxheWVyMSwgaW5wdXQxKSk7XG4gICAgc2NvcmVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2NvcmVLZWVwZXJHZW5lcmF0b3IocGxheWVyMiwgaW5wdXQyKSk7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc2NvcmVDb250YWluZXIpXG59XG5mdW5jdGlvbiByZW1vdmVEdXBsaWNhdGVzKGFycmF5KSB7XG4gICAgcmV0dXJuIGFycmF5LmZpbHRlcigoaXRlbSxcbiAgICAgICAgaW5kZXgpID0+IGFyci5pbmRleE9mKGl0ZW0pID09PSBpbmRleCk7XG59XG5mdW5jdGlvbiBhbm5vdW5jZVdpbm5lcih0ZXh0KSB7XG4gICAgbGV0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ3dpbm5lckNhcmQnKTtcbiAgICBjYXJkLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICBjb250YWluZXIuZmlyc3RDaGlsZC5hcHBlbmRDaGlsZChjYXJkKTtcbn1cbmNsYXNzIGdhbWVCb2FyZExvYWRlciB7XG4gICAgY29uc3RydWN0b3IocGxheWVyQm9hcmQsIHBsYXllciwgYWlCb2FyZCwgYWkpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZCA9IHBsYXllckJvYXJkO1xuICAgICAgICB0aGlzLnBsYXllciA9IHBsYXllcjtcbiAgICAgICAgdGhpcy5haUJvYXJkID0gYWlCb2FyZDtcbiAgICAgICAgdGhpcy5haSA9IGFpXG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgICAgIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yKFwiUGxheWVyXCIsIDAsIFwiQUlcIiwgMCk7XG4gICAgfVxuICAgIHJlbG9hZEJvYXJkcygpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgICAgICAgdGhpcy5haUJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xuICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgIH1cbiAgICBwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgZGlyZWN0aW9uKTtcbiAgICAgICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgICAgdHdvQm9hcmRET01Mb2FkZXIodGhpcy5wbGF5ZXJCb2FyZCwgdGhpcy5haUJvYXJkKTtcbiAgICB9XG4gICAgZGVwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBkaXJlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5kZXBvcHVsYXRlU2hpcChzaXplLCB4LCB5LCBkaXJlY3Rpb24pO1xuICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgIH1cbiAgICBzaW1wbGVQb3B1bGF0ZSgpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0knLCA0LCBcImVhc3RcIik7XG4gICAgICAgIHRoaXMucGxheWVyQm9hcmQucG9wdWxhdGVTaGlwKDQsICdDJywgNSwgXCJlYXN0XCIpO1xuICAgICAgICB0aGlzLnBsYXllckJvYXJkLnBvcHVsYXRlU2hpcCgzLCAnSicsIDYsIFwic291dGhcIik7XG4gICAgICAgIHRoaXMucGxheWVyQm9hcmQucG9wdWxhdGVTaGlwKDMsICdCJywgOCwgXCJzb3V0aFwiKTtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0UnLCA5LCBcImVhc3RcIik7XG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZCk7XG4gICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgfVxuICAgIHNpbXBsZVBvcHVsYXRlQUkoKSB7XG4gICAgICAgIHRoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoMiwgJ0knLCA0LCBcImVhc3RcIik7XG4gICAgICAgIHRoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoNCwgJ0MnLCA1LCBcImVhc3RcIik7XG4gICAgICAgIHRoaXMuYWlCb2FyZC5wb3B1bGF0ZVNoaXAoMywgJ0onLCA2LCBcInNvdXRoXCIpO1xuICAgICAgICB0aGlzLmFpQm9hcmQucG9wdWxhdGVTaGlwKDMsICdCJywgOCwgXCJzb3V0aFwiKTtcbiAgICAgICAgdGhpcy5haUJvYXJkLnBvcHVsYXRlU2hpcCgyLCAnRScsIDksIFwiZWFzdFwiKTtcbiAgICAgICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKTtcbiAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgICAgdHdvQm9hcmRET01Mb2FkZXIodGhpcy5wbGF5ZXJCb2FyZCwgdGhpcy5haUJvYXJkKTtcbiAgICB9XG4gICAgYXR0YWNrQUkoeCwgeSkge1xuICAgICAgICBpZiAodGhpcy5haUJvYXJkLlggPT0geCB8fCB0aGlzLmFpQm9hcmQuWSA9PSB5KSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coJ3JlcGVhdCBoaXQnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYWlCb2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xuICAgICAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgICAgICAgIHR3b0JvYXJkRE9NTG9hZGVyKHRoaXMucGxheWVyQm9hcmQsIHRoaXMuYWlCb2FyZCk7XG4gICAgICAgICAgICB0aGlzLmtlZXBTY29yZSgpXG4gICAgICAgIH1cbiAgICB9XG4gICAgYXR0YWNrUGxheWVyKHgsIHkpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICB0d29Cb2FyZERPTUxvYWRlcih0aGlzLnBsYXllckJvYXJkLCB0aGlzLmFpQm9hcmQpO1xuICAgICAgICB0aGlzLmtlZXBTY29yZSgpXG4gICAgfVxuICAgIHByb2R1Y2VBcnJheU9mUGxheWVyU2hpcHMoKSB7XG4gICAgICAgIGxldCBwbGF5ZXJTaGlwcyA9IFtdXG4gICAgICAgIHRoaXMucGxheWVyQm9hcmQuZ3JpZC5mb3JFYWNoKChzcXVhcmUpID0+IHtcbiAgICAgICAgICAgIGlmIChzcXVhcmUuc2hpcCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcGxheWVyU2hpcHMucHVzaChzcXVhcmUuc2hpcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC8vcGxheWVyU2hpcHMgY29udGFpbnMgZHVwbGljYXRlcyBvZiBlYWNoIHNoaXAsIHNvIEkgZmlsdGVyIHRoZSBhcnJheSBiZWxvd1xuICAgICAgICBsZXQgcGxheWVyU2hpcHNGaWx0ZXJlZCA9IFtdO1xuICAgICAgICBwbGF5ZXJTaGlwcy5mb3JFYWNoKHNoaXAgPT4ge1xuICAgICAgICAgICAgaWYgKCFwbGF5ZXJTaGlwc0ZpbHRlcmVkLmluY2x1ZGVzKHNoaXApKSB7XG4gICAgICAgICAgICAgICAgcGxheWVyU2hpcHNGaWx0ZXJlZC5wdXNoKHNoaXApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gcGxheWVyU2hpcHNGaWx0ZXJlZDtcbiAgICB9XG4gICAgcHJvZHVjZUFycmF5T2ZBaVNoaXBzKCkge1xuICAgICAgICBsZXQgYWlTaGlwcyA9IFtdXG4gICAgICAgIHRoaXMuYWlCb2FyZC5ncmlkLmZvckVhY2goKHNxdWFyZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHNxdWFyZS5zaGlwICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBhaVNoaXBzLnB1c2goc3F1YXJlLnNoaXApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAvL3BsYXllclNoaXBzIGNvbnRhaW5zIGR1cGxpY2F0ZXMgb2YgZWFjaCBzaGlwLCBzbyBJIGZpbHRlciB0aGUgYXJyYXkgYmVsb3dcbiAgICAgICAgbGV0IGFpU2hpcHNGaWx0ZXJlZCA9IFtdO1xuICAgICAgICBhaVNoaXBzLmZvckVhY2goc2hpcCA9PiB7XG4gICAgICAgICAgICBpZiAoIWFpU2hpcHNGaWx0ZXJlZC5pbmNsdWRlcyhzaGlwKSkge1xuICAgICAgICAgICAgICAgIGFpU2hpcHNGaWx0ZXJlZC5wdXNoKHNoaXApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gYWlTaGlwc0ZpbHRlcmVkO1xuICAgIH1cbiAgICBrZWVwU2NvcmUoKSB7XG4gICAgICAgIGxldCBwbGF5ZXJTaGlwcyA9IHRoaXMucHJvZHVjZUFycmF5T2ZQbGF5ZXJTaGlwcygpO1xuICAgICAgICBsZXQgYWlTaGlwcyA9IHRoaXMucHJvZHVjZUFycmF5T2ZBaVNoaXBzKCk7XG4gICAgICAgIGxldCBwbGF5ZXJUYWxseSA9IDBcbiAgICAgICAgbGV0IGFpVGFsbHkgPSAwXG4gICAgICAgIHBsYXllclNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgICAgICAgIGlmIChzaGlwLmhpdHMubGVuZ3RoID09IHNoaXAuc2l6ZSkge1xuICAgICAgICAgICAgICAgIHBsYXllclRhbGx5ICs9IDFcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgYWlTaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICAgICAgICBpZiAoc2hpcC5oaXRzLmxlbmd0aCA9PSBzaGlwLnNpemUpIHtcbiAgICAgICAgICAgICAgICBhaVRhbGx5ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICBkb3VibGVTY29yZUtlZXBlckdlbmVyYXRvcihcIkFJXCIsIHBsYXllclRhbGx5LCBcIlBsYXllclwiLCBhaVRhbGx5KTtcbiAgICAgICAgaWYgKHBsYXllclRhbGx5ID09IDUpIHtcbiAgICAgICAgICAgIGFubm91bmNlV2lubmVyKFwiQUkgd2lucyFcIik7XG4gICAgICAgIH0gZWxzZSBpZiAoYWlUYWxseSA9PSA1KSB7XG4gICAgICAgICAgICBhbm5vdW5jZVdpbm5lcihcIllvdSB3aW4hXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vY29uc3RydWN0IGEgbGlzdCBvZiBnYW1lYm9hcmQuZ3JpZCBzaGlwc1xuICAgICAgICAvL2ZvciBhbnkgc2hpcCwgaWYgc2hpcC5oaXRzID09IHNpemUsIGFkZCArMSB0byBzY29yZVxuICAgICAgICAvL2lucHV0IHNjb3JlIGluIGRvdWJsZVNjb3JlS2VlcGVyR2VuZXJhdG9yXG4gICAgfVxuICAgIHJhbmRvbVBhcmFtZXRlclByb2R1Y2VyKCkge1xuICAgICAgICBsZXQgeCA9IHRoaXMucGxheWVyQm9hcmQueEF4aXNbTWF0aC50cnVuYyhNYXRoLnJhbmRvbSgpICogMTApXTtcbiAgICAgICAgbGV0IHkgPSB0aGlzLnBsYXllckJvYXJkLnlBeGlzW01hdGgudHJ1bmMoTWF0aC5yYW5kb20oKSAqIDEwKV07XG4gICAgICAgIC8vbGV0IHNxdWFyZSA9IG9wcG9uZW50LmJvYXJkLmdyaWQuZmluZChzcXVhcmUgPT4gKHNxdWFyZS5YID09IHggJiYgc3F1YXJlLlkgPT0geSkpO1xuICAgICAgICByZXR1cm4gW3gsIHldO1xufVxufVxuXG5cbi8vc3VpdGUgZm9yIGxvYWRpbmcgY2FycmllciBwbGFjZW1lbnQgbW9kdWxlIGJlZm9yZSBnYW1lIGJlZ2luc1xuXG5sZXQgcGxhY2VtZW50Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5wbGFjZW1lbnRDb250YWluZXIuY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50LW1vZHVsZS1jb250YWluZXInKTtcbnBsYWNlbWVudENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3BsYWNlbWVudENvbnRhaW5lcicpO1xubGV0IHBsYWNlbWVudEJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xubGV0IHNoaXBDb3VudCA9IFtdO1xuZnVuY3Rpb24gcGxhY2VtZW50TW9kdWxlTG9hZGVyKCkge1xuICAgIHBsYWNlbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZCh0b3BUZXh0TG9hZGVyKCkpO1xuICAgIHBsYWNlbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZChwbGFjZW1lbnRNb2R1bGVNaWRkbGVTdWJDb250YWluZXJMb2FkZXIoKSk7XG4gICAgcGxhY2VtZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXBDb3VudGVyKCkpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbn1cbmZ1bmN0aW9uIHRvcFRleHRMb2FkZXIoKSB7XG4gICAgbGV0IHBsYWNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcGxhY2UuY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50VGV4dCcpO1xuICAgIHBsYWNlLnRleHRDb250ZW50ID0gXCJQbGFjZSBZb3VyIFNoaXBzXCI7XG4gICAgcmV0dXJuIHBsYWNlXG59O1xuZnVuY3Rpb24gcGxhY2VtZW50TW9kdWxlTWlkZGxlU3ViQ29udGFpbmVyTG9hZGVyKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50LW1vZHVsZS1zdWJjb250YWluZXInKVxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGFjZW1lbnRCb2FyZExvYWRlcigpKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocmlnaHRJbmZvTG9hZGVyKCkpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiByaWdodEluZm9Mb2FkZXIoKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdyaWdodEluZm9TdWJjb250YWluZXInKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYnV0dG9uc0ludGVncmF0b3IoKSk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRleHRCb3hMb2FkZXIoKSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lclxufTtcbmZ1bmN0aW9uIGJ1dHRvbnNJbnRlZ3JhdG9yKCkge1xuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgncmlnaHRJbmZvQnV0dG9uc0NvbnRhaW5lcicpXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHJlc2V0U2hpcEJ0bkxvYWRlcigpKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYmVnaW5HYW1lQnRuTG9hZGVyKCkpO1xuICAgIHJldHVybiBjb250YWluZXI7XG59XG5mdW5jdGlvbiByZXNldFNoaXBCdG5Mb2FkZXIoKSB7XG4gICAgbGV0IHJlc2V0U2hpcEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHJlc2V0U2hpcEJ0bi5jbGFzc0xpc3QuYWRkKCdwbGFjZW1lbnRCdXR0b24nKTtcbiAgICByZXNldFNoaXBCdG4udGV4dENvbnRlbnQgPSBcIlJlc2V0IFNoaXBzXCI7XG4gICAgcmVzZXRTaGlwQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVzZXRTaGlwcylcbiAgICByZXR1cm4gcmVzZXRTaGlwQnRuO1xufTtcbmZ1bmN0aW9uIGJlZ2luR2FtZUJ0bkxvYWRlcigpIHtcbiAgICBsZXQgYmVnaW5CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBiZWdpbkJ0bi5jbGFzc0xpc3QuYWRkKCdwbGFjZW1lbnRCdXR0b24nKTtcbiAgICBiZWdpbkJ0bi50ZXh0Q29udGVudCA9IFwiQmVnaW4gR2FtZVwiO1xuICAgIGJlZ2luQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2hlY2tpZlNoaXBzQXJlQWxsUGxhY2VkKTtcbiAgICByZXR1cm4gYmVnaW5CdG47XG59O1xuZnVuY3Rpb24gdGV4dEJveExvYWRlcigpIHtcbiAgICBsZXQgdGV4dEJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRleHRCb3gudGV4dENvbnRlbnQgPSBcIkluY2x1ZGUgRGlyZWN0aW9ucyBIZXJlXCI7XG4gICAgcmV0dXJuIHRleHRCb3g7XG59XG5mdW5jdGlvbiBzZWxlY3RTaGlwU3F1YXJlTG9hZGVyKGNvb3JkaW5hdGUpIHtcbiAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ3NxdWFyZScpO1xuICAgIGlmIChjb29yZGluYXRlLmNvbnRhaW5zU2hpcCA9PSB0cnVlKSB7XG4gICAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJlZFwiO1xuICAgICAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgaWQgPSBzcXVhcmUuaWQ7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IGlkLnNwbGl0KFwiXCIpO1xuICAgICAgICAgICAgbGV0IHN0YXJ0aW5nU3F1YXJlID0gcGxhY2VtZW50Qm9hcmQuZ3JpZC5maW5kKHNxdWFyZSA9PiAoc3F1YXJlLlggPT0gZGF0YVswXSAmJiBzcXVhcmUuWSA9PSBkYXRhWzFdKSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhzdGFydGluZ1NxdWFyZSk7XG4gICAgICAgICAgICBsZXQgc2l6ZSA9IHN0YXJ0aW5nU3F1YXJlLnNoaXAuc2l6ZTtcbiAgICAgICAgICAgIGxldCB4ID0gc3RhcnRpbmdTcXVhcmUuc2hpcC54U3RhcnQ7XG4gICAgICAgICAgICBsZXQgeSA9IHN0YXJ0aW5nU3F1YXJlLnNoaXAueVN0YXJ0O1xuICAgICAgICAgICAgaWYgKHN0YXJ0aW5nU3F1YXJlLnNoaXAuZGlyZWN0aW9uID09IFwiZWFzdFwiKSB7XG4gICAgICAgICAgICAgICAgcGxhY2VtZW50Qm9hcmQuZGVwb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIGRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIC8vd3JpdGUgZGVwb3B1bGF0ZSBwbGF5ZXIgZnVuY3Rpb25cbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgICAgICAgICBwb3B1bGF0ZVBsYXllcihzaXplLCB4LCB5LCBcInNvdXRoXCIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydGluZ1NxdWFyZS5zaGlwLmRpcmVjdGlvbiA9PSBcInNvdXRoXCIpIHtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5kZXBvcHVsYXRlU2hpcChzaXplLCB4LCB5LCBcInNvdXRoXCIpO1xuICAgICAgICAgICAgICAgIGRlcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgICAgIHBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIFwiZWFzdFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZUFsbENoaWxkTm9kZXMocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgICAgIHBsYWNlbWVudE1vZHVsZUxvYWRlcigpO1xuICAgICAgICB9KVxuICAgIH1cbiAgICBzcXVhcmUuc2V0QXR0cmlidXRlKCdpZCcsIGNvb3JkaW5hdGUuWCArIGNvb3JkaW5hdGUuWSk7XG4gICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJkcmFnT3ZlclwiKTtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRHJvcFwiKTtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IGRhdGEgPSBldi5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcInRleHRcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZGF0YSA9IFwiICsgZGF0YSk7XG4gICAgICAgIGxldCBzb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkYXRhKTtcbiAgICAgICAgbGV0IGNvb3JkaW5hdGUgPSBldi50YXJnZXQuaWQ7XG4gICAgICAgIGxldCBzaXplID0gZGF0YTtcbiAgICAgICAgbGV0IHggPSBjb29yZGluYXRlWzBdO1xuICAgICAgICBsZXQgeSA9IGNvb3JkaW5hdGVbMV07XG4gICAgICAgIGlmIChjb29yZGluYXRlWzJdID09IDApIHtcbiAgICAgICAgICAgIGxldCBhcnJheSA9IFtjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdXVxuICAgICAgICAgICAgeSA9IGFycmF5LmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyb3RhdGlvblRyYWNrZXIgPT0gMCkge1xuICAgICAgICAgICAgcG9wdWxhdGVQbGF5ZXIoc2l6ZSwgeCwgeSwgXCJlYXN0XCIpO1xuICAgICAgICAgICAgcGxhY2VtZW50Qm9hcmQucG9wdWxhdGVTaGlwKHNpemUsIHgsIHksIFwiZWFzdFwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBvcHVsYXRlUGxheWVyKHNpemUsIHgsIHksIFwic291dGhcIik7XG4gICAgICAgICAgICBwbGFjZW1lbnRCb2FyZC5wb3B1bGF0ZVNoaXAoc2l6ZSwgeCwgeSwgXCJzb3V0aFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZW1vdmVBbGxDaGlsZE5vZGVzKHBsYWNlbWVudENvbnRhaW5lcik7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICAgICAgc2hpcENvdW50LnB1c2goc2l6ZSk7XG4gICAgICAgIHBsYWNlbWVudE1vZHVsZUxvYWRlcigpO1xuICAgIH0pXG4gICAgcmV0dXJuIHNxdWFyZTtcbn1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGxDaGlsZE5vZGVzKHBhcmVudCkge1xuICAgICAgICB3aGlsZSAocGFyZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChwYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICB9XG5mdW5jdGlvbiBzZWxlY3RTaGlwQm9hcmRMb2FkZXIoYm9hcmQpIHtcbiAgICBsZXQgYXJyYXlPZkdyaWRDb29yZGluYXRlcyA9IGJvYXJkLmdyaWQ7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdncmlkLWNvbnRhaW5lcicpO1xuICAgIGFycmF5T2ZHcmlkQ29vcmRpbmF0ZXMuZm9yRWFjaCgoY29vcmRpbmF0ZSkgPT4ge1xuICAgICAgICBsZXQgc3F1YXJlID0gc2VsZWN0U2hpcFNxdWFyZUxvYWRlcihjb29yZGluYXRlKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfSlcbiAgICByZXR1cm4gY29udGFpbmVyO1xufTtcbmZ1bmN0aW9uIHNlbGVjdFNoaXBQbGF5ZXJDb29yZGluYXRlZEJvYXJkTG9hZGVyKGJvYXJkKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaW5nbGVCb2FyZENvbnRhaW5lcicpXG4gICAgbGV0IHN1YmNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHN1YmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzdWJjb250YWluZXInKTtcbiAgICAgICAgc3ViY29udGFpbmVyLmFwcGVuZENoaWxkKHlDb29yZGluYXRlTG9hZGVyKCkpO1xuICAgICAgICBzdWJjb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZWN0U2hpcEJvYXJkTG9hZGVyKGJvYXJkKSk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh4Q29vcmRpbmF0ZUxvYWRlcigpKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHN1YmNvbnRhaW5lcik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5mdW5jdGlvbiBwbGFjZW1lbnRCb2FyZExvYWRlcigpIHtcbiAgICByZXR1cm4gc2VsZWN0U2hpcFBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIocGxhY2VtZW50Qm9hcmQpO1xufTtcbmNvbnN0IHNvdXJjZSA9IFwiXCI7XG5mdW5jdGlvbiByb3RhdGVTaGlwQnV0dG9uTG9hZGVyKCkge1xuICAgIGxldCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBidXR0b24udGV4dENvbnRlbnQgPSBcIlJvdGF0ZSBTaGlwIDkwwrBcIjtcbiAgICBidXR0b24uY2xhc3NMaXN0LmFkZCgncGxhY2VtZW50QnV0dG9uJyk7XG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAncm90YXRlU2hpcEJ1dHRvbicpO1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgcm90YXRlT25DbGljaygpXG4gICAgfSk7XG4gICAgcmV0dXJuIGJ1dHRvbjtcbn1cbmZ1bmN0aW9uIHJvdGF0ZU9uQ2xpY2soKSB7XG4gICAgY29uc29sZS5sb2coJ3Rlc3QnKTtcbiAgICBsZXQgY2xhc3NDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdi5zaW5nbGVTaGlwQ2xhc3NDb250YWluZXJcIik7XG4gICAgbGV0IGluZGl2aWR1YWxTaGlwQ29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJkaXYuc2hpcFwiKTtcbiAgICBpbmRpdmlkdWFsU2hpcENvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgaWYgKG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9PSBcImNvbHVtblwiKSB7IG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9IFwicm93XCI7IHJvdGF0aW9uVHJhY2tlciA9IDAgfVxuICAgICAgICAgICAgZWxzZSB7IG5vZGUuc3R5bGUuZmxleERpcmVjdGlvbiA9IFwiY29sdW1uXCI7IHJvdGF0aW9uVHJhY2tlciA9IDE7IGNvbnNvbGUubG9nKHJvdGF0aW9uVHJhY2tlcikgfVxuICAgIH0pO1xufVxuXG4vL1RoaXMgcm90YXRpb25UcmFja2VyIHRlbGxzIHRoZSBzaGlwTWFrZXIoKSB3aGV0aGVyIHRvIHBvc2l0aW9uIHNoaXBzIHZlcnRpY2FsbHkgb3IgaG9yaXpvbnRhbGx5LlxuICAgIC8vMCBjb21tYW5kcyBzaGlwTWFrZXIoKSB0byBwb3NpdGlvbiBzaGlwcyBob3Jpem9udGFsbHksIDEgdmVydGljYWxseS5cbiAgICAvL0l0IHRyYWNrcyB3aGV0aGVyIC8gd2hlbiByb3RhdGVPbkNsaWNrKCkgaGFzIHJvdGF0ZWQgc2hpcHMgdmVydGljYWxseSBvciBob3Jpem9udGFsbHkuXG5sZXQgcm90YXRpb25UcmFja2VyID0gMDtcbmZ1bmN0aW9uIHNoaXBNYWtlcihzaXplKSB7XG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaGlwJyk7XG4gICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSgnZHJhZ2dhYmxlJywgJ3RydWUnKTtcbiAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsIHNpemUpO1xuICAgIGNvbnNvbGUubG9nKHJvdGF0aW9uVHJhY2tlcik7XG4gICAgaWYgKHJvdGF0aW9uVHJhY2tlciA9PSAxKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0ZXN0Jyk7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJjb2x1bW5cIjtcbiAgICB9XG4gICAgaWYgKHJvdGF0aW9uVHJhY2tlciA9PSAwKSB7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3dcIjtcbiAgICB9XG4gICAgd2hpbGUgKHNpemUgPj0gMSkge1xuICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKCdwbGFjZW1lbnRTcXVhcmUnKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgICAgIHNpemUgPSBzaXplIC0gMTtcbiAgICB9XG4gICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRyYW5zZmVyRGF0YU9uRHJhZ3N0YXJ0KTtcbiAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbmRcIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgIGV2LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwiZHJhZ2dpbmdcIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIHRyYW5zZmVyRGF0YU9uRHJhZ3N0YXJ0KGV2KSB7XG4gICAgIC8vIENoYW5nZSB0aGUgc291cmNlIGVsZW1lbnQncyBiYWNrZ3JvdW5kIGNvbG9yXG4gICAgICAgIC8vIHRvIHNob3cgdGhhdCBkcmFnIGhhcyBzdGFydGVkXG4gICAgICAgIGV2LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZChcImRyYWdnaW5nXCIpO1xuICAgICAgICAvLyBDbGVhciB0aGUgZHJhZyBkYXRhIGNhY2hlIChmb3IgYWxsIGZvcm1hdHMvdHlwZXMpXG4gICAgICAgIGV2LmRhdGFUcmFuc2Zlci5jbGVhckRhdGEoKTtcbiAgICAgICAgZXYuZGF0YVRyYW5zZmVyLnNldERhdGEoXCJ0ZXh0L3BsYWluXCIsIGV2LnRhcmdldC5pZCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBldi5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcInRleHRcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICBzb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkYXRhKTtcbiAgICAgICAgY29uc29sZS5sb2coc291cmNlKTtcbiAgICAgICAgZXYuY3VycmVudFRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZHJhZ2VuZFwiLCB0cmFuc2ZlckRhdGFPbkRyYWdzdGFydCk7XG59XG5cbmZ1bmN0aW9uIHNoaXBDb3VudGVyKCkge1xuICAgIGxldCBzaGlwQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2hpcENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaGlwQWxsQ2xhc3Nlc0NvbnRhaW5lcicpO1xuICAgIGxldCBzaXplVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2l6ZVR3by5jbGFzc0xpc3QuYWRkKCdzaW5nbGVTaGlwQ2xhc3NDb250YWluZXInKTtcbiAgICBsZXQgc2l6ZVRocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2l6ZVRocmVlLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZVNoaXBDbGFzc0NvbnRhaW5lcicpO1xuICAgIGxldCBzaXplRm91ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNpemVGb3VyLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZVNoaXBDbGFzc0NvbnRhaW5lcicpO1xuICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQocm90YXRlU2hpcEJ1dHRvbkxvYWRlcigpKTtcbiAgICBpZiAoc2hpcENvdW50LmZpbHRlcih4ID0+IHggPT0gMikubGVuZ3RoID09IDApIHtcbiAgICAgICAgc2l6ZVR3by5hcHBlbmRDaGlsZChzaGlwTWFrZXIoMikpO1xuICAgICAgICBzaXplVHdvLmFwcGVuZENoaWxkKHNoaXBNYWtlcigyKSk7XG4gICAgICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQoc2l6ZVR3byk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNoaXBDb3VudC5maWx0ZXIoeCA9PiB4ID09IDIpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgIHNpemVUd28uYXBwZW5kQ2hpbGQoc2hpcE1ha2VyKDIpKTtcbiAgICAgICAgc2hpcENvbnRhaW5lci5hcHBlbmRDaGlsZChzaXplVHdvKTtcbiAgICB9XG4gICAgaWYgKHNoaXBDb3VudC5maWx0ZXIoeCA9PiB4ID09IDMpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHNpemVUaHJlZS5hcHBlbmRDaGlsZChzaGlwTWFrZXIoMykpO1xuICAgICAgICBzaXplVGhyZWUuYXBwZW5kQ2hpbGQoc2hpcE1ha2VyKDMpKTtcbiAgICAgICAgc2hpcENvbnRhaW5lci5hcHBlbmRDaGlsZChzaXplVGhyZWUpO1xuICAgIH0gZWxzZSBpZiAoc2hpcENvdW50LmZpbHRlcih4ID0+IHggPT0gMykubGVuZ3RoID09IDEpIHtcbiAgICAgICAgc2l6ZVRocmVlLmFwcGVuZENoaWxkKHNoaXBNYWtlcigzKSk7XG4gICAgICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQoc2l6ZVRocmVlKTtcbiAgICB9XG4gICAgaWYgKHNoaXBDb3VudC5maWx0ZXIoeCA9PiB4ID09IDQpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHNpemVGb3VyLmFwcGVuZENoaWxkKHNoaXBNYWtlcig0KSk7XG4gICAgICAgIHNoaXBDb250YWluZXIuYXBwZW5kQ2hpbGQoc2l6ZUZvdXIpO1xuICAgIH1cbiAgICByZXR1cm4gc2hpcENvbnRhaW5lcjtcbn1cbmZ1bmN0aW9uIGNoZWNraWZTaGlwc0FyZUFsbFBsYWNlZCgpIHtcbiAgICBpZiAoc2hpcENvdW50Lmxlbmd0aCA9PSA1KSB7XG4gICAgICAgIHNpbXBsZVBvcHVsYXRlQUkoKTtcbiAgICAgICAgcmVtb3ZlQWxsQ2hpbGROb2RlcyhwbGFjZW1lbnRDb250YWluZXIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHBsYWNlbWVudENvbnRhaW5lcik7XG4gICAgfVxufVxuZnVuY3Rpb24gcmVzZXRTaGlwcygpIHtcbiAgICBwbGFjZW1lbnRCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgICBjbGVhclNoaXBDb3VudCgpO1xuICAgIHJlbW92ZUFsbENoaWxkTm9kZXMocGxhY2VtZW50Q29udGFpbmVyKTtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHBsYWNlbWVudENvbnRhaW5lcik7XG4gICAgcmVsb2FkQm9hcmRzKCk7XG4gICAgcGxhY2VtZW50TW9kdWxlTG9hZGVyKCk7XG59XG5mdW5jdGlvbiBjbGVhclNoaXBDb3VudCgpIHtcbiAgICB3aGlsZSAoc2hpcENvdW50Lmxlbmd0aCA+PSAxKSB7XG4gICAgICAgIHNoaXBDb3VudC5wb3AoKTtcbiAgICB9XG59XG5cblxuXG5cbi8vY3JlYXRlIGEgZnVuY3Rpb24gdGhhdCBwbGFjZXMgYSB0d28tc3F1YXJlIHNoaXBcbiAgICAvL3doZW4gbW91c2VvdmVyIHNxdWFyZSBTLCBzcXVhcmUgdHVybnMgcmVkIGFsb25nIHdpdGggdGhlIHNvdXRod2FyZCBzcXVhcmVcbiAgICAvL3RoZW4gYWRkIHJvdGF0ZSBmdW5jdGlvbmFsaXR5XG5cbmV4cG9ydCB7IGdhbWVCb2FyZExvYWRlciwgcGxhY2VtZW50TW9kdWxlTG9hZGVyIH0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHBsYWNlbWVudE1vZHVsZUxvYWRlciB9IGZyb20gJy4vdXNlckludGVyZmFjZS9ib2FyZERPTWxvYWRlci5qcydcbmltcG9ydCB7IGdlbmVyYXRlSFVEIH0gZnJvbSAnLi91c2VySW50ZXJmYWNlL2NvbnRyb2xsZXIuanMnXG5cblxuZ2VuZXJhdGVIVUQoKTtcbnBsYWNlbWVudE1vZHVsZUxvYWRlcigpO1xuLy9nZW5lcmF0ZUhVRHdpdGhTaGlwUGxhY2VtZW50KCk7Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsIlNoaXAiLCJjb25zdHJ1Y3RvciIsInNpemUiLCJ4U3RhcnQiLCJ5U3RhcnQiLCJkaXJlY3Rpb24iLCJoaXRzIiwiaGl0IiwiaXNTdW5rIiwiU3F1YXJlIiwiWCIsIlkiLCJpc0hpdCIsImNvbnRhaW5zU2hpcCIsInNoaXAiLCJHYW1lYm9hcmQiLCJpbnB1dCIsInhBeGlzIiwieUF4aXMiLCJncmlkIiwibWFrZUdyaWQiLCJyZWNlaXZlQXR0YWNrIiwieExldHRlciIsInlOdW0iLCJmb3VuZCIsImZpbmQiLCJzcXVhcmUiLCJ4IiwieSIsInBvcHVsYXRlU2hpcCIsImNvbnNvbGUiLCJsb2ciLCJpbmRleE9mIiwibmV3U2hpcCIsInN0YXJ0aW5nU3F1YXJlIiwic3F1YXJlc0NvbnRhaW5pbmdOZXdTaGlwIiwieUluZGV4IiwiZGVwb3B1bGF0ZVNoaXAiLCJwbGF5ZXJCb2FyZCIsImFpQm9hcmQiLCJib2FyZHMiLCJwbGF5ZXIiLCJhaSIsInR3b0JvYXJkRE9NTG9hZGVyIiwiZG91YmxlU2NvcmVLZWVwZXJHZW5lcmF0b3IiLCJyZWxvYWRCb2FyZHMiLCJjb250YWluZXIiLCJnZXRFbGVtZW50QnlJZCIsInBvcHVsYXRlUGxheWVyIiwiZGVwb3B1bGF0ZVBsYXllciIsInNpbXBsZVBvcHVsYXRlIiwic2ltcGxlUG9wdWxhdGVBSSIsImF0dGFja0FJIiwia2VlcFNjb3JlIiwiYXR0YWNrUGxheWVyIiwicHJvZHVjZUFycmF5T2ZQbGF5ZXJTaGlwcyIsInBsYXllclNoaXBzIiwiZm9yRWFjaCIsInBsYXllclNoaXBzRmlsdGVyZWQiLCJpbmNsdWRlcyIsInByb2R1Y2VBcnJheU9mQWlTaGlwcyIsImFpU2hpcHMiLCJhaVNoaXBzRmlsdGVyZWQiLCJwbGF5ZXJUYWxseSIsImFpVGFsbHkiLCJuZXh0U2libGluZyIsImFubm91bmNlV2lubmVyIiwicmFuZG9tUGFyYW1ldGVyUHJvZHVjZXIiLCJNYXRoIiwidHJ1bmMiLCJyYW5kb20iLCJwbGF5ZXJQb3B1bGF0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsImFpUG9wdWxhdGVCdXR0b24iLCJhdHRhY2tBSUJ1dHRvbiIsImF0dGFja1BsYXllckJ1dHRvbiIsImFpQXJyYXkiLCJzbGljZSIsImFsZXJ0Iiwic2V0VGltZW91dCIsInBsYXllckFycmF5IiwiZmxvb3IiLCJ4TGFiZWwiLCJ5TGFiZWwiLCJib2FyZExvYWRlciIsImJvYXJkIiwiYXJyYXlPZkdyaWRDb29yZGluYXRlcyIsImNvb3JkaW5hdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzcXVhcmVMb2FkZXIiLCJ4Q29vcmRpbmF0ZUxvYWRlciIsInlDb29yZGluYXRlTG9hZGVyIiwib3Bwb25lbnRCb2FyZCIsInByZXBlbmQiLCJzdWJjb250YWluZXIiLCJwbGF5ZXJDb29yZGluYXRlZEJvYXJkTG9hZGVyIiwiYWlDb29yZGluYXRlZEJvYXJkTG9hZGVyIiwidHdvQm9hcmRDb250ZW50R2VuZXJhdG9yIiwic2NvcmVLZWVwZXJHZW5lcmF0b3IiLCJsYWJlbCIsInNjb3JlIiwicGxheWVyMSIsImlucHV0MSIsInBsYXllcjIiLCJpbnB1dDIiLCJzY29yZUNvbnRhaW5lciIsInRleHQiLCJjYXJkIiwicGxhY2VtZW50Q29udGFpbmVyIiwicGxhY2VtZW50Qm9hcmQiLCJzaGlwQ291bnQiLCJwbGFjZSIsInRvcFRleHRMb2FkZXIiLCJzcGxpdCIsInJlbW92ZUFsbENoaWxkTm9kZXMiLCJib2R5IiwiZXYiLCJwcmV2ZW50RGVmYXVsdCIsImRhdGFUcmFuc2ZlciIsImdldERhdGEiLCJyb3RhdGlvblRyYWNrZXIiLCJzZWxlY3RTaGlwU3F1YXJlTG9hZGVyIiwic2VsZWN0U2hpcEJvYXJkTG9hZGVyIiwic2VsZWN0U2hpcFBsYXllckNvb3JkaW5hdGVkQm9hcmRMb2FkZXIiLCJyZXNldFNoaXBCdG4iLCJyZXNldFNoaXBzIiwicmVzZXRTaGlwQnRuTG9hZGVyIiwiYmVnaW5CdG4iLCJjaGVja2lmU2hpcHNBcmVBbGxQbGFjZWQiLCJiZWdpbkdhbWVCdG5Mb2FkZXIiLCJidXR0b25zSW50ZWdyYXRvciIsInRleHRCb3giLCJ0ZXh0Qm94TG9hZGVyIiwicmlnaHRJbmZvTG9hZGVyIiwicGxhY2VtZW50TW9kdWxlTWlkZGxlU3ViQ29udGFpbmVyTG9hZGVyIiwic2hpcENvbnRhaW5lciIsInNpemVUd28iLCJzaXplVGhyZWUiLCJzaXplRm91ciIsImJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJub2RlIiwiZmxleERpcmVjdGlvbiIsInJvdGF0ZVNoaXBCdXR0b25Mb2FkZXIiLCJmaWx0ZXIiLCJzaGlwTWFrZXIiLCJzaGlwQ291bnRlciIsInBhcmVudCIsInRyYW5zZmVyRGF0YU9uRHJhZ3N0YXJ0IiwiY3VycmVudFRhcmdldCIsImNsZWFyRGF0YSIsInNldERhdGEiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicG9wIiwiY2xlYXJTaGlwQ291bnQiLCJnZW5lcmF0ZUJ1dHRvbnMiXSwic291cmNlUm9vdCI6IiJ9